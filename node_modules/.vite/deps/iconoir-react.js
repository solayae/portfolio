import {
  require_react
} from "./chunk-ZOIWZPCO.js";
import {
  __toESM
} from "./chunk-DFKQJ226.js";

// node_modules/iconoir-react/dist/esm/3DAddHole.mjs
var React2 = __toESM(require_react(), 1);

// node_modules/iconoir-react/dist/esm/IconoirContext.mjs
var import_react = __toESM(require_react(), 1);
var IconoirContext = import_react.default.createContext({});
function IconoirProvider(_a) {
  var iconProps = _a.iconProps, children = _a.children;
  return import_react.default.createElement(IconoirContext.Provider, { value: iconProps || {}, children });
}

// node_modules/iconoir-react/dist/esm/3DAddHole.mjs
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function Svg3DAddHole(passedProps, svgRef) {
  var context = React2.useContext(IconoirContext);
  var props = __assign(__assign({}, context), passedProps);
  return React2.createElement(
    "svg",
    __assign({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React2.createElement("path", { d: "M12 16a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React2.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524zM3.528 7.294L8.4 10m12.1-2.722L15.6 10M12 21v-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef = React2.forwardRef(Svg3DAddHole);
var DAddHole_default = ForwardRef;

// node_modules/iconoir-react/dist/esm/3DArcCenterPt.mjs
var React3 = __toESM(require_react(), 1);
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
function Svg3DArcCenterPt(passedProps, svgRef) {
  var context = React3.useContext(IconoirContext);
  var props = __assign2(__assign2({}, context), passedProps);
  return React3.createElement(
    "svg",
    __assign2({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React3.createElement("path", { d: "M22 16c0-5.523-4.477-10-10-10-4.1 0-7.625 2.468-9.168 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "3 3" }),
    React3.createElement("path", { d: "M2 17a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React3.createElement("path", { d: "M2 16h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React3.createElement("path", { d: "M12 17a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef2 = React3.forwardRef(Svg3DArcCenterPt);
var DArcCenterPt_default = ForwardRef2;

// node_modules/iconoir-react/dist/esm/3DArc.mjs
var React4 = __toESM(require_react(), 1);
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
function Svg3DArc(passedProps, svgRef) {
  var context = React4.useContext(IconoirContext);
  var props = __assign3(__assign3({}, context), passedProps);
  return React4.createElement(
    "svg",
    __assign3({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React4.createElement("path", { d: "M22 16c0-5.523-4.477-10-10-10S2 10.477 2 16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React4.createElement("path", { d: "M2 17a1 1 0 100-2 1 1 0 000 2zM22 17a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef3 = React4.forwardRef(Svg3DArc);
var DArc_default = ForwardRef3;

// node_modules/iconoir-react/dist/esm/3DBridge.mjs
var React5 = __toESM(require_react(), 1);
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
function Svg3DBridge(passedProps, svgRef) {
  var context = React5.useContext(IconoirContext);
  var props = __assign4(__assign4({}, context), passedProps);
  return React5.createElement(
    "svg",
    __assign4({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React5.createElement("path", { d: "M18 4h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React5.createElement("path", { d: "M10 21a1 1 0 100-2 1 1 0 000 2zM14 5a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React5.createElement("path", { d: "M10 20s6.5-2.5 2-8 2-8 2-8M3 20h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef4 = React5.forwardRef(Svg3DBridge);
var DBridge_default = ForwardRef4;

// node_modules/iconoir-react/dist/esm/3DCenterBox.mjs
var React6 = __toESM(require_react(), 1);
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
function Svg3DCenterBox(passedProps, svgRef) {
  var context = React6.useContext(IconoirContext);
  var props = __assign5(__assign5({}, context), passedProps);
  return React6.createElement(
    "svg",
    __assign5({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React6.createElement("path", { d: "M12 17a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React6.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React6.createElement("path", { d: "M20.5 16.722l-8.209-4.56a.6.6 0 00-.582 0L3.5 16.722M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 3v9M12 19.5V22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef5 = React6.forwardRef(Svg3DCenterBox);
var DCenterBox_default = ForwardRef5;

// node_modules/iconoir-react/dist/esm/3DDraftFace.mjs
var React7 = __toESM(require_react(), 1);
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
function Svg3DDraftFace(passedProps, svgRef) {
  var context = React7.useContext(IconoirContext);
  var props = __assign6(__assign6({}, context), passedProps);
  return React7.createElement(
    "svg",
    __assign6({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React7.createElement("path", { d: "M20 7.78v7.796a.6.6 0 01-.27.502l-6.616 4.347a.6.6 0 01-.249.093l-10.184 1.39A.6.6 0 012 21.312V9.012a.6.6 0 01.298-.519l10.789-6.28a.6.6 0 01.688.058l6.01 5.05A.6.6 0 0120 7.78z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React7.createElement("path", { d: "M2.5 9l10.227 2.922a.6.6 0 00.506-.084L19.5 7.5M13 20.5V12M16.5 14.01l.01-.011M22 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef6 = React7.forwardRef(Svg3DDraftFace);
var DDraftFace_default = ForwardRef6;

// node_modules/iconoir-react/dist/esm/3DEllipseThreePts.mjs
var React8 = __toESM(require_react(), 1);
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
function Svg3DEllipseThreePts(passedProps, svgRef) {
  var context = React8.useContext(IconoirContext);
  var props = __assign7(__assign7({}, context), passedProps);
  return React8.createElement(
    "svg",
    __assign7({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React8.createElement("path", { d: "M5 3a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React8.createElement("path", { d: "M5 22h8M5 22V2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React8.createElement("path", { d: "M5 23a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React8.createElement("path", { d: "M8 4.193C9.37 2.821 11.108 2 13 2c4.418 0 8 4.477 8 10 0 3.271-1.256 6.175-3.2 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "3 3" }),
    React8.createElement("path", { d: "M8.2 20A9.098 9.098 0 017 18.615", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React8.createElement("path", { d: "M13 23a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef7 = React8.forwardRef(Svg3DEllipseThreePts);
var DEllipseThreePts_default = ForwardRef7;

// node_modules/iconoir-react/dist/esm/3DEllipse.mjs
var React9 = __toESM(require_react(), 1);
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
function Svg3DEllipse(passedProps, svgRef) {
  var context = React9.useContext(IconoirContext);
  var props = __assign8(__assign8({}, context), passedProps);
  return React9.createElement(
    "svg",
    __assign8({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React9.createElement("path", { d: "M12 3a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React9.createElement("path", { d: "M12 22c4.418 0 8-4.477 8-10S16.418 2 12 2 4 6.477 4 12s3.582 10 8 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React9.createElement("path", { d: "M12 23a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef8 = React9.forwardRef(Svg3DEllipse);
var DEllipse_default = ForwardRef8;

// node_modules/iconoir-react/dist/esm/3DPtBox.mjs
var React10 = __toESM(require_react(), 1);
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
function Svg3DPtBox(passedProps, svgRef) {
  var context = React10.useContext(IconoirContext);
  var props = __assign9(__assign9({}, context), passedProps);
  return React10.createElement(
    "svg",
    __assign9({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React10.createElement("path", { d: "M3 18a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React10.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React10.createElement("path", { d: "M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 21v-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef9 = React10.forwardRef(Svg3DPtBox);
var DPtBox_default = ForwardRef9;

// node_modules/iconoir-react/dist/esm/3DRectCornerToCorner.mjs
var React11 = __toESM(require_react(), 1);
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
function Svg3DRectCornerToCorner(passedProps, svgRef) {
  var context = React11.useContext(IconoirContext);
  var props = __assign10(__assign10({}, context), passedProps);
  return React11.createElement(
    "svg",
    __assign10({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React11.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React11.createElement("path", { d: "M3 4a1 1 0 100-2 1 1 0 000 2zM21 22a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef10 = React11.forwardRef(Svg3DRectCornerToCorner);
var DRectCornerToCorner_default = ForwardRef10;

// node_modules/iconoir-react/dist/esm/3DRectFromCenter.mjs
var React12 = __toESM(require_react(), 1);
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
function Svg3DRectFromCenter(passedProps, svgRef) {
  var context = React12.useContext(IconoirContext);
  var props = __assign11(__assign11({}, context), passedProps);
  return React12.createElement(
    "svg",
    __assign11({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React12.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React12.createElement("path", { d: "M12 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef11 = React12.forwardRef(Svg3DRectFromCenter);
var DRectFromCenter_default = ForwardRef11;

// node_modules/iconoir-react/dist/esm/3DRectThreePts.mjs
var React13 = __toESM(require_react(), 1);
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
function Svg3DRectThreePts(passedProps, svgRef) {
  var context = React13.useContext(IconoirContext);
  var props = __assign12(__assign12({}, context), passedProps);
  return React13.createElement(
    "svg",
    __assign12({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React13.createElement("path", { d: "M3 21V3.6a.6.6 0 01.6-.6H21", stroke: "currentColor" }),
    React13.createElement("path", { d: "M17 21h3.4a.6.6 0 00.6-.6V17M21 7v2M21 12v2M7 21h2M12 21h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React13.createElement("path", { d: "M3 4a1 1 0 100-2 1 1 0 000 2zM3 22a1 1 0 100-2 1 1 0 000 2zM21 4a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef12 = React13.forwardRef(Svg3DRectThreePts);
var DRectThreePts_default = ForwardRef12;

// node_modules/iconoir-react/dist/esm/3DSelectEdge.mjs
var React14 = __toESM(require_react(), 1);
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
function Svg3DSelectEdge(passedProps, svgRef) {
  var context = React14.useContext(IconoirContext);
  var props = __assign13(__assign13({}, context), passedProps);
  return React14.createElement(
    "svg",
    __assign13({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React14.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524zM12 21v-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React14.createElement("path", { d: "M12.5 11v10a.5.5 0 01-1 0V11a.5.5 0 011 0z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef13 = React14.forwardRef(Svg3DSelectEdge);
var DSelectEdge_default = ForwardRef13;

// node_modules/iconoir-react/dist/esm/3DSelectFace.mjs
var React15 = __toESM(require_react(), 1);
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
function Svg3DSelectFace(passedProps, svgRef) {
  var context = React15.useContext(IconoirContext);
  var props = __assign14(__assign14({}, context), passedProps);
  return React15.createElement(
    "svg",
    __assign14({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React15.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React15.createElement("path", { d: "M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 21v-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React15.createElement("path", { d: "M11.691 11.829l-7.8-4.334A.6.6 0 003 8.02v8.627a.6.6 0 00.309.525l7.8 4.333A.6.6 0 0012 20.98v-8.627a.6.6 0 00-.309-.524z", fill: "currentColor", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef14 = React15.forwardRef(Svg3DSelectFace);
var DSelectFace_default = ForwardRef14;

// node_modules/iconoir-react/dist/esm/3DSelectPoint.mjs
var React16 = __toESM(require_react(), 1);
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
function Svg3DSelectPoint(passedProps, svgRef) {
  var context = React16.useContext(IconoirContext);
  var props = __assign15(__assign15({}, context), passedProps);
  return React16.createElement(
    "svg",
    __assign15({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React16.createElement("path", { d: "M12 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React16.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef15 = React16.forwardRef(Svg3DSelectPoint);
var DSelectPoint_default = ForwardRef15;

// node_modules/iconoir-react/dist/esm/3DSelectSolid.mjs
var React17 = __toESM(require_react(), 1);
var __assign16 = function() {
  __assign16 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign16.apply(this, arguments);
};
function Svg3DSelectSolid(passedProps, svgRef) {
  var context = React17.useContext(IconoirContext);
  var props = __assign16(__assign16({}, context), passedProps);
  return React17.createElement(
    "svg",
    __assign16({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React17.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React17.createElement("path", { d: "M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 21v-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef16 = React17.forwardRef(Svg3DSelectSolid);
var DSelectSolid_default = ForwardRef16;

// node_modules/iconoir-react/dist/esm/3DThreePtsBox.mjs
var React18 = __toESM(require_react(), 1);
var __assign17 = function() {
  __assign17 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign17.apply(this, arguments);
};
function Svg3DThreePtsBox(passedProps, svgRef) {
  var context = React18.useContext(IconoirContext);
  var props = __assign17(__assign17({}, context), passedProps);
  return React18.createElement(
    "svg",
    __assign17({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React18.createElement("path", { d: "M12 23a1 1 0 100-2 1 1 0 000 2zM3 8a1 1 0 100-2 1 1 0 000 2zM3 18a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React18.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React18.createElement("path", { d: "M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 21v-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef17 = React18.forwardRef(Svg3DThreePtsBox);
var DThreePtsBox_default = ForwardRef17;

// node_modules/iconoir-react/dist/esm/AccessibilitySign.mjs
var React19 = __toESM(require_react(), 1);
var __assign18 = function() {
  __assign18 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign18.apply(this, arguments);
};
function SvgAccessibilitySign(passedProps, svgRef) {
  var context = React19.useContext(IconoirContext);
  var props = __assign18(__assign18({}, context), passedProps);
  return React19.createElement(
    "svg",
    __assign18({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React19.createElement("path", { d: "M11.5 12.5l7-.5-1.5 6.5M11.5 12.5l4.5-5L12.5 5 10 7.5M18.5 6.5a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React19.createElement("path", { d: "M5.5 12.5a5 5 0 017.584 6M3.729 15A5 5 0 0011 20.831", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef18 = React19.forwardRef(SvgAccessibilitySign);
var AccessibilitySign_default = ForwardRef18;

// node_modules/iconoir-react/dist/esm/AccessibilityTech.mjs
var React20 = __toESM(require_react(), 1);
var __assign19 = function() {
  __assign19 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign19.apply(this, arguments);
};
function SvgAccessibilityTech(passedProps, svgRef) {
  var context = React20.useContext(IconoirContext);
  var props = __assign19(__assign19({}, context), passedProps);
  return React20.createElement(
    "svg",
    __assign19({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React20.createElement("path", { d: "M3 19V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React20.createElement("path", { d: "M12.5 12.16l4-.16-.5 4.5M11.833 12L13.5 9.538 10.833 8 9.5 9.846", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React20.createElement("path", { d: "M15.5 7.5a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React20.createElement("path", { d: "M10.5 18a3 3 0 110-6 3 3 0 010 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef19 = React20.forwardRef(SvgAccessibilityTech);
var AccessibilityTech_default = ForwardRef19;

// node_modules/iconoir-react/dist/esm/Accessibility.mjs
var React21 = __toESM(require_react(), 1);
var __assign20 = function() {
  __assign20 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign20.apply(this, arguments);
};
function SvgAccessibility(passedProps, svgRef) {
  var context = React21.useContext(IconoirContext);
  var props = __assign20(__assign20({}, context), passedProps);
  return React21.createElement(
    "svg",
    __assign20({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React21.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM7 9l5 1m5-1l-5 1m0 0v3m0 0l-2 5m2-5l2 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React21.createElement("path", { d: "M12 7a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef20 = React21.forwardRef(SvgAccessibility);
var Accessibility_default = ForwardRef20;

// node_modules/iconoir-react/dist/esm/Activity.mjs
var React22 = __toESM(require_react(), 1);
var __assign21 = function() {
  __assign21 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign21.apply(this, arguments);
};
function SvgActivity(passedProps, svgRef) {
  var context = React22.useContext(IconoirContext);
  var props = __assign21(__assign21({}, context), passedProps);
  return React22.createElement(
    "svg",
    __assign21({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React22.createElement("path", { d: "M3 12h3l3-9 6 18 3-9h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef21 = React22.forwardRef(SvgActivity);
var Activity_default = ForwardRef21;

// node_modules/iconoir-react/dist/esm/AddCircle.mjs
var React23 = __toESM(require_react(), 1);
var __assign22 = function() {
  __assign22 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign22.apply(this, arguments);
};
function SvgAddCircle(passedProps, svgRef) {
  var context = React23.useContext(IconoirContext);
  var props = __assign22(__assign22({}, context), passedProps);
  return React23.createElement(
    "svg",
    __assign22({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React23.createElement("path", { d: "M8 12h4m4 0h-4m0 0V8m0 4v4M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef22 = React23.forwardRef(SvgAddCircle);
var AddCircle_default = ForwardRef22;

// node_modules/iconoir-react/dist/esm/AddDatabaseScript.mjs
var React24 = __toESM(require_react(), 1);
var __assign23 = function() {
  __assign23 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign23.apply(this, arguments);
};
function SvgAddDatabaseScript(passedProps, svgRef) {
  var context = React24.useContext(IconoirContext);
  var props = __assign23(__assign23({}, context), passedProps);
  return React24.createElement(
    "svg",
    __assign23({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React24.createElement("path", { d: "M22 14V8.5M6 13V6a3 3 0 013-3h5M16.992 4h3m3 0h-3m0 0V1m0 3v3M12 21H6a4 4 0 010-8h12a4 4 0 104 4v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef23 = React24.forwardRef(SvgAddDatabaseScript);
var AddDatabaseScript_default = ForwardRef23;

// node_modules/iconoir-react/dist/esm/AddFolder.mjs
var React25 = __toESM(require_react(), 1);
var __assign24 = function() {
  __assign24 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign24.apply(this, arguments);
};
function SvgAddFolder(passedProps, svgRef) {
  var context = React25.useContext(IconoirContext);
  var props = __assign24(__assign24({}, context), passedProps);
  return React25.createElement(
    "svg",
    __assign24({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React25.createElement("path", { d: "M18 6h2m2 0h-2m0 0V4m0 2v2M21.4 20H2.6a.6.6 0 01-.6-.6V11h19.4a.6.6 0 01.6.6v7.8a.6.6 0 01-.6.6zM2 11V4.6a.6.6 0 01.6-.6h6.178a.6.6 0 01.39.144l3.164 2.712a.6.6 0 00.39.144H14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef24 = React25.forwardRef(SvgAddFolder);
var AddFolder_default = ForwardRef24;

// node_modules/iconoir-react/dist/esm/AddFrame.mjs
var React26 = __toESM(require_react(), 1);
var __assign25 = function() {
  __assign25 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign25.apply(this, arguments);
};
function SvgAddFrame(passedProps, svgRef) {
  var context = React26.useContext(IconoirContext);
  var props = __assign25(__assign25({}, context), passedProps);
  return React26.createElement(
    "svg",
    __assign25({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React26.createElement("path", { d: "M4.998 2H2v2.998h2.998V2zM4.999 3.5h14M3.5 4.998V19M20.498 5v14.002M4.999 20.5h14M4.998 19H2v2.998h2.998V19zM21.997 2.001H19v2.998h2.998V2.001zM21.997 19.001H19v2.998h2.998v-2.998z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React26.createElement("path", { d: "M9 12h3m3 0h-3m0 0V9m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef25 = React26.forwardRef(SvgAddFrame);
var AddFrame_default = ForwardRef25;

// node_modules/iconoir-react/dist/esm/AddHexagon.mjs
var React27 = __toESM(require_react(), 1);
var __assign26 = function() {
  __assign26 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign26.apply(this, arguments);
};
function SvgAddHexagon(passedProps, svgRef) {
  var context = React27.useContext(IconoirContext);
  var props = __assign26(__assign26({}, context), passedProps);
  return React27.createElement(
    "svg",
    __assign26({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React27.createElement("path", { d: "M9 12h3m3 0h-3m0 0V9m0 3v3M11.7 1.173a.6.6 0 01.6 0l8.926 5.154a.6.6 0 01.3.52v10.307a.6.6 0 01-.3.52L12.3 22.826a.6.6 0 01-.6 0l-8.926-5.154a.6.6 0 01-.3-.52V6.847a.6.6 0 01.3-.52L11.7 1.174z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef26 = React27.forwardRef(SvgAddHexagon);
var AddHexagon_default = ForwardRef26;

// node_modules/iconoir-react/dist/esm/AddKeyframeAlt.mjs
var React28 = __toESM(require_react(), 1);
var __assign27 = function() {
  __assign27 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign27.apply(this, arguments);
};
function SvgAddKeyframeAlt(passedProps, svgRef) {
  var context = React28.useContext(IconoirContext);
  var props = __assign27(__assign27({}, context), passedProps);
  return React28.createElement(
    "svg",
    __assign27({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React28.createElement("path", { d: "M20.777 13.345l-7.297 8.027a2 2 0 01-2.96 0l-7.297-8.027a2 2 0 010-2.69l7.297-8.027a2 2 0 012.96 0l7.297 8.027a2 2 0 010 2.69zM9 12h3m3 0h-3m0 0V9m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef27 = React28.forwardRef(SvgAddKeyframeAlt);
var AddKeyframeAlt_default = ForwardRef27;

// node_modules/iconoir-react/dist/esm/AddKeyframe.mjs
var React29 = __toESM(require_react(), 1);
var __assign28 = function() {
  __assign28 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign28.apply(this, arguments);
};
function SvgAddKeyframe(passedProps, svgRef) {
  var context = React29.useContext(IconoirContext);
  var props = __assign28(__assign28({}, context), passedProps);
  return React29.createElement(
    "svg",
    __assign28({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React29.createElement("path", { d: "M16 5h3m3 0h-3m0 0V2m0 3v3M16.819 14.329l-5.324 5.99a2 2 0 01-2.99 0l-5.324-5.99a2 2 0 010-2.658l5.324-5.99a2 2 0 012.99 0l5.324 5.99a2 2 0 010 2.658z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef28 = React29.forwardRef(SvgAddKeyframe);
var AddKeyframe_default = ForwardRef28;

// node_modules/iconoir-react/dist/esm/AddKeyframes.mjs
var React30 = __toESM(require_react(), 1);
var __assign29 = function() {
  __assign29 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign29.apply(this, arguments);
};
function SvgAddKeyframes(passedProps, svgRef) {
  var context = React30.useContext(IconoirContext);
  var props = __assign29(__assign29({}, context), passedProps);
  return React30.createElement(
    "svg",
    __assign29({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React30.createElement("path", { d: "M2 12h3m3 0H5m0 0V9m0 3v3M6.25 6l.245-.28a2 2 0 013.01 0l4.343 4.963a2 2 0 010 2.634L9.505 18.28a2 2 0 01-3.01 0L6.25 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React30.createElement("path", { d: "M13 19l4.884-5.698a2 2 0 000-2.604L13 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React30.createElement("path", { d: "M17 19l4.884-5.698a2 2 0 000-2.604L17 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef29 = React30.forwardRef(SvgAddKeyframes);
var AddKeyframes_default = ForwardRef29;

// node_modules/iconoir-react/dist/esm/AddLens.mjs
var React31 = __toESM(require_react(), 1);
var __assign30 = function() {
  __assign30 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign30.apply(this, arguments);
};
function SvgAddLens(passedProps, svgRef) {
  var context = React31.useContext(IconoirContext);
  var props = __assign30(__assign30({}, context), passedProps);
  return React31.createElement(
    "svg",
    __assign30({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React31.createElement("path", { d: "M2.992 6h3m3 0h-3m0 0V3m0 3v3M2.112 13.5C2.835 18.311 6.987 22 12 22c5.523 0 10-4.477 10-10 0-5.013-3.689-9.165-8.5-9.888M17.197 9c-.1-.172-.207-.34-.323-.5M17.811 13.5a6.01 6.01 0 01-4.311 4.311", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef30 = React31.forwardRef(SvgAddLens);
var AddLens_default = ForwardRef30;

// node_modules/iconoir-react/dist/esm/AddMediaImage.mjs
var React32 = __toESM(require_react(), 1);
var __assign31 = function() {
  __assign31 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign31.apply(this, arguments);
};
function SvgAddMediaImage(passedProps, svgRef) {
  var context = React32.useContext(IconoirContext);
  var props = __assign31(__assign31({}, context), passedProps);
  return React32.createElement(
    "svg",
    __assign31({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React32.createElement("path", { d: "M13 21H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React32.createElement("path", { d: "M3 16l7-3 5.5 2.5M16 10a2 2 0 110-4 2 2 0 010 4zM16 19h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef31 = React32.forwardRef(SvgAddMediaImage);
var AddMediaImage_default = ForwardRef31;

// node_modules/iconoir-react/dist/esm/AddMediaVideo.mjs
var React33 = __toESM(require_react(), 1);
var __assign32 = function() {
  __assign32 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign32.apply(this, arguments);
};
function SvgAddMediaVideo(passedProps, svgRef) {
  var context = React33.useContext(IconoirContext);
  var props = __assign32(__assign32({}, context), passedProps);
  return React33.createElement(
    "svg",
    __assign32({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React33.createElement("path", { d: "M13 21H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6V13M16 19h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React33.createElement("path", { d: "M9.898 8.513a.6.6 0 00-.898.52v5.933a.6.6 0 00.898.521l5.19-2.966a.6.6 0 000-1.042l-5.19-2.966z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef32 = React33.forwardRef(SvgAddMediaVideo);
var AddMediaVideo_default = ForwardRef32;

// node_modules/iconoir-react/dist/esm/AddPageAlt.mjs
var React34 = __toESM(require_react(), 1);
var __assign33 = function() {
  __assign33 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign33.apply(this, arguments);
};
function SvgAddPageAlt(passedProps, svgRef) {
  var context = React34.useContext(IconoirContext);
  var props = __assign33(__assign33({}, context), passedProps);
  return React34.createElement(
    "svg",
    __assign33({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React34.createElement("path", { d: "M4 12V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React34.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20M1.992 19h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef33 = React34.forwardRef(SvgAddPageAlt);
var AddPageAlt_default = ForwardRef33;

// node_modules/iconoir-react/dist/esm/AddPage.mjs
var React35 = __toESM(require_react(), 1);
var __assign34 = function() {
  __assign34 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign34.apply(this, arguments);
};
function SvgAddPage(passedProps, svgRef) {
  var context = React35.useContext(IconoirContext);
  var props = __assign34(__assign34({}, context), passedProps);
  return React35.createElement(
    "svg",
    __assign34({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React35.createElement("path", { d: "M9 12h3m3 0h-3m0 0V9m0 3v3M4 21.4V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React35.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef34 = React35.forwardRef(SvgAddPage);
var AddPage_default = ForwardRef34;

// node_modules/iconoir-react/dist/esm/AddPinAlt.mjs
var React36 = __toESM(require_react(), 1);
var __assign35 = function() {
  __assign35 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign35.apply(this, arguments);
};
function SvgAddPinAlt(passedProps, svgRef) {
  var context = React36.useContext(IconoirContext);
  var props = __assign35(__assign35({}, context), passedProps);
  return React36.createElement(
    "svg",
    __assign35({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React36.createElement("path", { d: "M16 9.2C16 13.177 9 20 9 20S2 13.177 2 9.2C2 5.224 5.134 2 9 2s7 3.224 7 7.2z", stroke: "currentColor" }),
    React36.createElement("path", { d: "M9 10a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React36.createElement("path", { d: "M16 19h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef35 = React36.forwardRef(SvgAddPinAlt);
var AddPinAlt_default = ForwardRef35;

// node_modules/iconoir-react/dist/esm/AddSelection.mjs
var React37 = __toESM(require_react(), 1);
var __assign36 = function() {
  __assign36 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign36.apply(this, arguments);
};
function SvgAddSelection(passedProps, svgRef) {
  var context = React37.useContext(IconoirContext);
  var props = __assign36(__assign36({}, context), passedProps);
  return React37.createElement(
    "svg",
    __assign36({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React37.createElement("path", { d: "M8 12h4m4 0h-4m0 0V8m0 4v4M7 4H4v3M4 11v2M11 4h2M11 20h2M20 11v2M17 4h3v3M7 20H4v-3M17 20h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef36 = React37.forwardRef(SvgAddSelection);
var AddSelection_default = ForwardRef36;

// node_modules/iconoir-react/dist/esm/AddSquare.mjs
var React38 = __toESM(require_react(), 1);
var __assign37 = function() {
  __assign37 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign37.apply(this, arguments);
};
function SvgAddSquare(passedProps, svgRef) {
  var context = React38.useContext(IconoirContext);
  var props = __assign37(__assign37({}, context), passedProps);
  return React38.createElement(
    "svg",
    __assign37({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React38.createElement("path", { d: "M9 12h3m3 0h-3m0 0V9m0 3v3M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef37 = React38.forwardRef(SvgAddSquare);
var AddSquare_default = ForwardRef37;

// node_modules/iconoir-react/dist/esm/AddToCart.mjs
var React39 = __toESM(require_react(), 1);
var __assign38 = function() {
  __assign38 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign38.apply(this, arguments);
};
function SvgAddToCart(passedProps, svgRef) {
  var context = React39.useContext(IconoirContext);
  var props = __assign38(__assign38({}, context), passedProps);
  return React39.createElement(
    "svg",
    __assign38({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React39.createElement("path", { d: "M3 6h19l-3 10H6L3 6zm0 0l-.75-2.5M9.992 11h2m2 0h-2m0 0V9m0 2v2M11 19.5a1.5 1.5 0 01-3 0M17 19.5a1.5 1.5 0 01-3 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef38 = React39.forwardRef(SvgAddToCart);
var AddToCart_default = ForwardRef38;

// node_modules/iconoir-react/dist/esm/AddUser.mjs
var React40 = __toESM(require_react(), 1);
var __assign39 = function() {
  __assign39 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign39.apply(this, arguments);
};
function SvgAddUser(passedProps, svgRef) {
  var context = React40.useContext(IconoirContext);
  var props = __assign39(__assign39({}, context), passedProps);
  return React40.createElement(
    "svg",
    __assign39({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React40.createElement("path", { d: "M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 017-7v0a7 7 0 017 7v1M8 12a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef39 = React40.forwardRef(SvgAddUser);
var AddUser_default = ForwardRef39;

// node_modules/iconoir-react/dist/esm/AdobeAfterEffects.mjs
var React41 = __toESM(require_react(), 1);
var __assign40 = function() {
  __assign40 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign40.apply(this, arguments);
};
function SvgAdobeAfterEffects(passedProps, svgRef) {
  var context = React41.useContext(IconoirContext);
  var props = __assign40(__assign40({}, context), passedProps);
  return React41.createElement(
    "svg",
    __assign40({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React41.createElement("path", { d: "M21 7v10a4 4 0 01-4 4H7a4 4 0 01-4-4V7a4 4 0 014-4h10a4 4 0 014 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React41.createElement("path", { d: "M14 13v-1a2 2 0 012-2v0a2 2 0 012 2v1h-4zm0 0v1a2 2 0 002 2h1.5M6 16l1.125-3M12 16l-1.125-3m-3.75 0L9 8l1.875 5m-3.75 0h3.75", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef40 = React41.forwardRef(SvgAdobeAfterEffects);
var AdobeAfterEffects_default = ForwardRef40;

// node_modules/iconoir-react/dist/esm/AdobeIllustrator.mjs
var React42 = __toESM(require_react(), 1);
var __assign41 = function() {
  __assign41 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign41.apply(this, arguments);
};
function SvgAdobeIllustrator(passedProps, svgRef) {
  var context = React42.useContext(IconoirContext);
  var props = __assign41(__assign41({}, context), passedProps);
  return React42.createElement(
    "svg",
    __assign41({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React42.createElement("path", { d: "M21 7v10a4 4 0 01-4 4H7a4 4 0 01-4-4V7a4 4 0 014-4h10a4 4 0 014 4zM16 12v4M16 9v.01", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React42.createElement("path", { d: "M7 16l1.125-3M13 16l-1.125-3m-3.75 0L10 8l1.875 5m-3.75 0h3.75", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef41 = React42.forwardRef(SvgAdobeIllustrator);
var AdobeIllustrator_default = ForwardRef41;

// node_modules/iconoir-react/dist/esm/AdobeIndesign.mjs
var React43 = __toESM(require_react(), 1);
var __assign42 = function() {
  __assign42 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign42.apply(this, arguments);
};
function SvgAdobeIndesign(passedProps, svgRef) {
  var context = React43.useContext(IconoirContext);
  var props = __assign42(__assign42({}, context), passedProps);
  return React43.createElement(
    "svg",
    __assign42({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React43.createElement("path", { d: "M21 7v10a4 4 0 01-4 4H7a4 4 0 01-4-4V7a4 4 0 014-4h10a4 4 0 014 4zM8.5 8v8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React43.createElement("path", { d: "M15.5 12v3.4a.6.6 0 01-.6.6h-1.4a2 2 0 01-2-2v0a2 2 0 012-2h2zm0 0V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef42 = React43.forwardRef(SvgAdobeIndesign);
var AdobeIndesign_default = ForwardRef42;

// node_modules/iconoir-react/dist/esm/AdobeLightroom.mjs
var React44 = __toESM(require_react(), 1);
var __assign43 = function() {
  __assign43 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign43.apply(this, arguments);
};
function SvgAdobeLightroom(passedProps, svgRef) {
  var context = React44.useContext(IconoirContext);
  var props = __assign43(__assign43({}, context), passedProps);
  return React44.createElement(
    "svg",
    __assign43({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React44.createElement("path", { d: "M21 7v10a4 4 0 01-4 4H7a4 4 0 01-4-4V7a4 4 0 014-4h10a4 4 0 014 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React44.createElement("path", { d: "M7 8v8h4M14 10.5V13m0 3v-3m0 0s0-2.5 3-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef43 = React44.forwardRef(SvgAdobeLightroom);
var AdobeLightroom_default = ForwardRef43;

// node_modules/iconoir-react/dist/esm/AdobePhotoshop.mjs
var React45 = __toESM(require_react(), 1);
var __assign44 = function() {
  __assign44 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign44.apply(this, arguments);
};
function SvgAdobePhotoshop(passedProps, svgRef) {
  var context = React45.useContext(IconoirContext);
  var props = __assign44(__assign44({}, context), passedProps);
  return React45.createElement(
    "svg",
    __assign44({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React45.createElement("path", { d: "M21 7v10a4 4 0 01-4 4H7a4 4 0 01-4-4V7a4 4 0 014-4h10a4 4 0 014 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React45.createElement("path", { d: "M7 16v-4m0 0V8h2a2 2 0 012 2v0a2 2 0 01-2 2H7zM17 11v0c-.306-.613-.933-1-1.618-1H15a1.5 1.5 0 00-1.5 1.5v0A1.5 1.5 0 0015 13h.5a1.5 1.5 0 011.5 1.5v0a1.5 1.5 0 01-1.5 1.5h-.382a1.809 1.809 0 01-1.618-1v0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef44 = React45.forwardRef(SvgAdobePhotoshop);
var AdobePhotoshop_default = ForwardRef44;

// node_modules/iconoir-react/dist/esm/AdobeXd.mjs
var React46 = __toESM(require_react(), 1);
var __assign45 = function() {
  __assign45 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign45.apply(this, arguments);
};
function SvgAdobeXd(passedProps, svgRef) {
  var context = React46.useContext(IconoirContext);
  var props = __assign45(__assign45({}, context), passedProps);
  return React46.createElement(
    "svg",
    __assign45({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React46.createElement("path", { d: "M21 7v10a4 4 0 01-4 4H7a4 4 0 01-4-4V7a4 4 0 014-4h10a4 4 0 014 4zM7 8l4 8m-4 0l4-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React46.createElement("path", { d: "M17 12v3.4a.6.6 0 01-.6.6H15a2 2 0 01-2-2v0a2 2 0 012-2h2zm0 0V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef45 = React46.forwardRef(SvgAdobeXd);
var AdobeXd_default = ForwardRef45;

// node_modules/iconoir-react/dist/esm/AfricanTree.mjs
var React47 = __toESM(require_react(), 1);
var __assign46 = function() {
  __assign46 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign46.apply(this, arguments);
};
function SvgAfricanTree(passedProps, svgRef) {
  var context = React47.useContext(IconoirContext);
  var props = __assign46(__assign46({}, context), passedProps);
  return React47.createElement(
    "svg",
    __assign46({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React47.createElement(
      "g",
      { clipPath: "url(#african-tree_svg__clip0_2032_8254)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React47.createElement("path", { d: "M12 22V12m0-4v4m0 0l3-3M12.424 18.576l6.169-6.169a5.502 5.502 0 00-.513-8.234 9.904 9.904 0 00-12.16 0 5.502 5.502 0 00-.513 8.234l6.169 6.169a.6.6 0 00.848 0z" })
    ),
    React47.createElement(
      "defs",
      null,
      React47.createElement(
        "clipPath",
        { id: "african-tree_svg__clip0_2032_8254" },
        React47.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef46 = React47.forwardRef(SvgAfricanTree);
var AfricanTree_default = ForwardRef46;

// node_modules/iconoir-react/dist/esm/Agile.mjs
var React48 = __toESM(require_react(), 1);
var __assign47 = function() {
  __assign47 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign47.apply(this, arguments);
};
function SvgAgile(passedProps, svgRef) {
  var context = React48.useContext(IconoirContext);
  var props = __assign47(__assign47({}, context), passedProps);
  return React48.createElement(
    "svg",
    __assign47({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React48.createElement("path", { d: "M17.5 19H22m0 0l-2.5-2.5M22 19l-2.5 2.5M12 2L9.5 4.5 12 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React48.createElement("path", { d: "M10.5 4.5a7.5 7.5 0 010 15H2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React48.createElement("path", { d: "M6.756 5.5A7.497 7.497 0 003 12c0 1.688.558 3.246 1.5 4.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef47 = React48.forwardRef(SvgAgile);
var Agile_default = ForwardRef47;

// node_modules/iconoir-react/dist/esm/AirConditioner.mjs
var React49 = __toESM(require_react(), 1);
var __assign48 = function() {
  __assign48 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign48.apply(this, arguments);
};
function SvgAirConditioner(passedProps, svgRef) {
  var context = React49.useContext(IconoirContext);
  var props = __assign48(__assign48({}, context), passedProps);
  return React49.createElement(
    "svg",
    __assign48({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React49.createElement("path", { d: "M22 3.6V11H2V3.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6zM18 7h1M2 11l.79 2.584A2 2 0 004.702 15H6M22 11l-.79 2.584A2 2 0 0119.298 15H18M9.5 14.5s0 7-3.5 7M14.5 14.5s0 7 3.5 7M12 14.5v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef48 = React49.forwardRef(SvgAirConditioner);
var AirConditioner_default = ForwardRef48;

// node_modules/iconoir-react/dist/esm/AirplaneHelix45Deg.mjs
var React50 = __toESM(require_react(), 1);
var __assign49 = function() {
  __assign49 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign49.apply(this, arguments);
};
function SvgAirplaneHelix45Deg(passedProps, svgRef) {
  var context = React50.useContext(IconoirContext);
  var props = __assign49(__assign49({}, context), passedProps);
  return React50.createElement(
    "svg",
    __assign49({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React50.createElement("path", { d: "M14.12 14.121A3 3 0 109.879 9.88a3 3 0 004.243 4.242z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React50.createElement("path", { clipRule: "evenodd", d: "M9.879 9.879s-2.803.009-4.243-1.415c-1.409-1.41-2.864-2.793-1.414-4.242 1.378-1.377 2.81-.015 4.242 1.414C9.87 7.037 9.88 9.879 9.88 9.879zM14.121 9.879s-.009-2.803 1.415-4.243c1.41-1.409 2.793-2.864 4.242-1.414 1.377 1.378.015 2.81-1.414 4.242-1.402 1.406-4.243 1.415-4.243 1.415zM9.879 14.121s.009 2.803-1.415 4.243c-1.41 1.409-2.793 2.864-4.242 1.414-1.377-1.378-.015-2.81 1.414-4.242 1.401-1.406 4.243-1.415 4.243-1.415zM14.121 14.121s2.803-.009 4.243 1.415c1.409 1.41 2.864 2.793 1.414 4.242-1.378 1.377-2.81.015-4.242-1.414-1.406-1.402-1.415-4.243-1.415-4.243z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef49 = React50.forwardRef(SvgAirplaneHelix45Deg);
var AirplaneHelix45Deg_default = ForwardRef49;

// node_modules/iconoir-react/dist/esm/AirplaneHelix.mjs
var React51 = __toESM(require_react(), 1);
var __assign50 = function() {
  __assign50 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign50.apply(this, arguments);
};
function SvgAirplaneHelix(passedProps, svgRef) {
  var context = React51.useContext(IconoirContext);
  var props = __assign50(__assign50({}, context), passedProps);
  return React51.createElement(
    "svg",
    __assign50({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React51.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React51.createElement("path", { clipRule: "evenodd", d: "M12 9s-1.988-1.975-2-4c.001-1.993-.05-4.001 2-4 1.948.001 1.997 1.976 2 4 .003 1.985-2 4-2 4zM15 12s1.975-1.988 4-2c1.993.001 4.001-.05 4 2-.001 1.948-1.976 1.997-4 2-1.985.003-4-2-4-2zM9 12s-1.975 1.988-4 2c-1.993-.001-4.001.05-4-2 .001-1.948 1.976-1.997 4-2 1.985-.003 4 2 4 2zM12 15s1.988 1.975 2 4c-.001 1.993.05 4.001-2 4-1.948-.001-1.997-1.976-2-4-.003-1.985 2-4 2-4z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef50 = React51.forwardRef(SvgAirplaneHelix);
var AirplaneHelix_default = ForwardRef50;

// node_modules/iconoir-react/dist/esm/AirplaneOff.mjs
var React52 = __toESM(require_react(), 1);
var __assign51 = function() {
  __assign51 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign51.apply(this, arguments);
};
function SvgAirplaneOff(passedProps, svgRef) {
  var context = React52.useContext(IconoirContext);
  var props = __assign51(__assign51({}, context), passedProps);
  return React52.createElement(
    "svg",
    __assign51({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React52.createElement("path", { d: "M9.881 9.887l-7.099 4.437a.6.6 0 00-.282.508v.9a.6.6 0 00.746.582l6.508-1.628a.6.6 0 01.746.582v2.96a.6.6 0 01-.205.451l-2.16 1.89c-.458.402-.097 1.151.502 1.042l3.256-.591a.6.6 0 01.214 0l3.256.591c.599.11.96-.64.502-1.041l-2.16-1.89a.6.6 0 01-.205-.452v-2.96a.6.6 0 01.745-.582l.458.115M10.5 7.5v-3A1.5 1.5 0 0112 3v0a1.5 1.5 0 011.5 1.5v4.667a.6.6 0 00.282.51l7.436 4.647a.6.6 0 01.282.508v.9a.6.6 0 01-.745.582l-2.006-.502M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef51 = React52.forwardRef(SvgAirplaneOff);
var AirplaneOff_default = ForwardRef51;

// node_modules/iconoir-react/dist/esm/AirplaneRotation.mjs
var React53 = __toESM(require_react(), 1);
var __assign52 = function() {
  __assign52 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign52.apply(this, arguments);
};
function SvgAirplaneRotation(passedProps, svgRef) {
  var context = React53.useContext(IconoirContext);
  var props = __assign52(__assign52({}, context), passedProps);
  return React53.createElement(
    "svg",
    __assign52({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React53.createElement("path", { d: "M9.879 14.122a3 3 0 104.242-4.243 3 3 0 00-4.242 4.243z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React53.createElement("path", { d: "M4.37 16.773A8.956 8.956 0 013.002 12c0-4.236 2.934-7.792 6.878-8.747A8.998 8.998 0 0112 3.002M19.715 7.367A8.953 8.953 0 0120.999 12c0 3.806-2.368 7.063-5.709 8.378-1.02.4-2.13.621-3.29.621", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React53.createElement("path", { clipRule: "evenodd", d: "M14.121 9.88s-.009-2.803 1.415-4.243c1.41-1.409 2.793-2.865 4.242-1.415 1.377 1.378.015 2.81-1.414 4.243-1.402 1.406-4.243 1.414-4.243 1.414zM9.879 14.12s.009 2.803-1.415 4.243c-1.41 1.409-2.793 2.865-4.242 1.415-1.377-1.378-.015-2.81 1.414-4.243 1.402-1.406 4.243-1.414 4.243-1.414z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef52 = React53.forwardRef(SvgAirplaneRotation);
var AirplaneRotation_default = ForwardRef52;

// node_modules/iconoir-react/dist/esm/Airplane.mjs
var React54 = __toESM(require_react(), 1);
var __assign53 = function() {
  __assign53 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign53.apply(this, arguments);
};
function SvgAirplane(passedProps, svgRef) {
  var context = React54.useContext(IconoirContext);
  var props = __assign53(__assign53({}, context), passedProps);
  return React54.createElement(
    "svg",
    __assign53({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React54.createElement("path", { d: "M10.5 4.5v4.667a.6.6 0 01-.282.51l-7.436 4.647a.6.6 0 00-.282.508v.9a.6.6 0 00.746.582l6.508-1.628a.6.6 0 01.746.582v2.96a.6.6 0 01-.205.451l-2.16 1.89c-.458.402-.097 1.151.502 1.042l3.256-.591a.6.6 0 01.214 0l3.256.591c.599.11.96-.64.502-1.041l-2.16-1.89a.6.6 0 01-.205-.452v-2.96a.6.6 0 01.745-.582l6.51 1.628a.6.6 0 00.745-.582v-.9a.6.6 0 00-.282-.508l-7.436-4.648a.6.6 0 01-.282-.509V4.5a1.5 1.5 0 00-3 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef53 = React54.forwardRef(SvgAirplane);
var Airplane_default = ForwardRef53;

// node_modules/iconoir-react/dist/esm/Airplay.mjs
var React55 = __toESM(require_react(), 1);
var __assign54 = function() {
  __assign54 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign54.apply(this, arguments);
};
function SvgAirplay(passedProps, svgRef) {
  var context = React55.useContext(IconoirContext);
  var props = __assign54(__assign54({}, context), passedProps);
  return React55.createElement(
    "svg",
    __assign54({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React55.createElement("path", { d: "M6 17H3V4h18v13h-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React55.createElement("path", { d: "M8.622 19.067L11.5 14.75a.6.6 0 01.998 0l2.88 4.318a.6.6 0 01-.5.933H9.12a.6.6 0 01-.5-.933z", stroke: "currentColor" })
  );
}
var ForwardRef54 = React55.forwardRef(SvgAirplay);
var Airplay_default = ForwardRef54;

// node_modules/iconoir-react/dist/esm/Alarm.mjs
var React56 = __toESM(require_react(), 1);
var __assign55 = function() {
  __assign55 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign55.apply(this, arguments);
};
function SvgAlarm(passedProps, svgRef) {
  var context = React56.useContext(IconoirContext);
  var props = __assign55(__assign55({}, context), passedProps);
  return React56.createElement(
    "svg",
    __assign55({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React56.createElement("path", { d: "M17 13h-5V8M5 3.5L7 2M19 3.5L17 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React56.createElement("path", { d: "M12 22a9 9 0 100-18 9 9 0 000 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef55 = React56.forwardRef(SvgAlarm);
var Alarm_default = ForwardRef55;

// node_modules/iconoir-react/dist/esm/AlbumCarousel.mjs
var React57 = __toESM(require_react(), 1);
var __assign56 = function() {
  __assign56 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign56.apply(this, arguments);
};
function SvgAlbumCarousel(passedProps, svgRef) {
  var context = React57.useContext(IconoirContext);
  var props = __assign56(__assign56({}, context), passedProps);
  return React57.createElement(
    "svg",
    __assign56({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React57.createElement("path", { d: "M2 19.4V4.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React57.createElement("path", { d: "M22 6v12M11 14.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0 0V8.6a.6.6 0 01.6-.6H13", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef56 = React57.forwardRef(SvgAlbumCarousel);
var AlbumCarousel_default = ForwardRef56;

// node_modules/iconoir-react/dist/esm/AlbumList.mjs
var React58 = __toESM(require_react(), 1);
var __assign57 = function() {
  __assign57 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign57.apply(this, arguments);
};
function SvgAlbumList(passedProps, svgRef) {
  var context = React58.useContext(IconoirContext);
  var props = __assign57(__assign57({}, context), passedProps);
  return React58.createElement(
    "svg",
    __assign57({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React58.createElement("path", { d: "M2 17.4V2.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React58.createElement("path", { d: "M8 22h13.4a.6.6 0 00.6-.6V8M11 12.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0 0V6.6a.6.6 0 01.6-.6H13", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef57 = React58.forwardRef(SvgAlbumList);
var AlbumList_default = ForwardRef57;

// node_modules/iconoir-react/dist/esm/AlbumOpen.mjs
var React59 = __toESM(require_react(), 1);
var __assign58 = function() {
  __assign58 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign58.apply(this, arguments);
};
function SvgAlbumOpen(passedProps, svgRef) {
  var context = React59.useContext(IconoirContext);
  var props = __assign58(__assign58({}, context), passedProps);
  return React59.createElement(
    "svg",
    __assign58({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React59.createElement("path", { d: "M15 2.2c4.564.927 8 4.962 8 9.8 0 4.838-3.436 8.873-8 9.8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React59.createElement("path", { d: "M15 9c1.141.284 2 1.519 2 3s-.859 2.716-2 3M1 2h10v20H1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React59.createElement("path", { d: "M4 15.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0 0V7.6a.6.6 0 01.6-.6H7", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef58 = React59.forwardRef(SvgAlbumOpen);
var AlbumOpen_default = ForwardRef58;

// node_modules/iconoir-react/dist/esm/Album.mjs
var React60 = __toESM(require_react(), 1);
var __assign59 = function() {
  __assign59 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign59.apply(this, arguments);
};
function SvgAlbum(passedProps, svgRef) {
  var context = React60.useContext(IconoirContext);
  var props = __assign59(__assign59({}, context), passedProps);
  return React60.createElement(
    "svg",
    __assign59({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React60.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React60.createElement("path", { d: "M12 15.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0 0V7.6a.6.6 0 01.6-.6H15", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef59 = React60.forwardRef(SvgAlbum);
var Album_default = ForwardRef59;

// node_modules/iconoir-react/dist/esm/AlignBottomBox.mjs
var React61 = __toESM(require_react(), 1);
var __assign60 = function() {
  __assign60 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign60.apply(this, arguments);
};
function SvgAlignBottomBox(passedProps, svgRef) {
  var context = React61.useContext(IconoirContext);
  var props = __assign60(__assign60({}, context), passedProps);
  return React61.createElement(
    "svg",
    __assign60({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React61.createElement("path", { d: "M4 8l.01.011M4 4l.01.011M8 4l.01.011M12 4l.01.011M16 4l.01.011M20 4l.01.011M20 8l.01.011M4 12v8h16v-8H4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef60 = React61.forwardRef(SvgAlignBottomBox);
var AlignBottomBox_default = ForwardRef60;

// node_modules/iconoir-react/dist/esm/AlignCenter.mjs
var React62 = __toESM(require_react(), 1);
var __assign61 = function() {
  __assign61 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign61.apply(this, arguments);
};
function SvgAlignCenter(passedProps, svgRef) {
  var context = React62.useContext(IconoirContext);
  var props = __assign61(__assign61({}, context), passedProps);
  return React62.createElement(
    "svg",
    __assign61({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React62.createElement("path", { d: "M3 6h18M3 14h18M6 10h12M6 18h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef61 = React62.forwardRef(SvgAlignCenter);
var AlignCenter_default = ForwardRef61;

// node_modules/iconoir-react/dist/esm/AlignJustify.mjs
var React63 = __toESM(require_react(), 1);
var __assign62 = function() {
  __assign62 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign62.apply(this, arguments);
};
function SvgAlignJustify(passedProps, svgRef) {
  var context = React63.useContext(IconoirContext);
  var props = __assign62(__assign62({}, context), passedProps);
  return React63.createElement(
    "svg",
    __assign62({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React63.createElement("path", { d: "M3 6h18M3 10h18M3 14h18M3 18h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef62 = React63.forwardRef(SvgAlignJustify);
var AlignJustify_default = ForwardRef62;

// node_modules/iconoir-react/dist/esm/AlignLeftBox.mjs
var React64 = __toESM(require_react(), 1);
var __assign63 = function() {
  __assign63 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign63.apply(this, arguments);
};
function SvgAlignLeftBox(passedProps, svgRef) {
  var context = React64.useContext(IconoirContext);
  var props = __assign63(__assign63({}, context), passedProps);
  return React64.createElement(
    "svg",
    __assign63({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React64.createElement("path", { d: "M16.004 3.995l-.011.01M20.004 3.995l-.011.01M20.004 7.995l-.011.01M20.004 11.995l-.011.01M20.004 15.995l-.011.01M20.004 19.995l-.011.01M16.004 19.995l-.011.01M12.006 3.995h-8v16h8v-16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef63 = React64.forwardRef(SvgAlignLeftBox);
var AlignLeftBox_default = ForwardRef63;

// node_modules/iconoir-react/dist/esm/AlignLeft.mjs
var React65 = __toESM(require_react(), 1);
var __assign64 = function() {
  __assign64 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign64.apply(this, arguments);
};
function SvgAlignLeft(passedProps, svgRef) {
  var context = React65.useContext(IconoirContext);
  var props = __assign64(__assign64({}, context), passedProps);
  return React65.createElement(
    "svg",
    __assign64({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React65.createElement("path", { d: "M3 10h14M3 6h18M3 18h14M3 14h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef64 = React65.forwardRef(SvgAlignLeft);
var AlignLeft_default = ForwardRef64;

// node_modules/iconoir-react/dist/esm/AlignRightBox.mjs
var React66 = __toESM(require_react(), 1);
var __assign65 = function() {
  __assign65 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign65.apply(this, arguments);
};
function SvgAlignRightBox(passedProps, svgRef) {
  var context = React66.useContext(IconoirContext);
  var props = __assign65(__assign65({}, context), passedProps);
  return React66.createElement(
    "svg",
    __assign65({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React66.createElement("path", { d: "M8.006 20.005l.01-.01M4.006 20.005l.01-.01M4.006 16.005l.01-.01M4.006 12.005l.01-.01M4.006 8.005l.01-.01M4.006 4.005l.01-.01M8.006 4.005l.01-.01M12.006 20.005h8v-16h-8v16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef65 = React66.forwardRef(SvgAlignRightBox);
var AlignRightBox_default = ForwardRef65;

// node_modules/iconoir-react/dist/esm/AlignRight.mjs
var React67 = __toESM(require_react(), 1);
var __assign66 = function() {
  __assign66 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign66.apply(this, arguments);
};
function SvgAlignRight(passedProps, svgRef) {
  var context = React67.useContext(IconoirContext);
  var props = __assign66(__assign66({}, context), passedProps);
  return React67.createElement(
    "svg",
    __assign66({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React67.createElement("path", { d: "M7 10h14M3 6h18M7 18h14M3 14h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef66 = React67.forwardRef(SvgAlignRight);
var AlignRight_default = ForwardRef66;

// node_modules/iconoir-react/dist/esm/AlignTopBox.mjs
var React68 = __toESM(require_react(), 1);
var __assign67 = function() {
  __assign67 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign67.apply(this, arguments);
};
function SvgAlignTopBox(passedProps, svgRef) {
  var context = React68.useContext(IconoirContext);
  var props = __assign67(__assign67({}, context), passedProps);
  return React68.createElement(
    "svg",
    __assign67({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React68.createElement("path", { d: "M4 16l.01-.011M4 20l.01-.011M8 20l.01-.011M12 20l.01-.011M16 20l.01-.011M20 20l.01-.011M20 16l.01-.011M4 12V4h16v8H4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef67 = React68.forwardRef(SvgAlignTopBox);
var AlignTopBox_default = ForwardRef67;

// node_modules/iconoir-react/dist/esm/AngleTool.mjs
var React69 = __toESM(require_react(), 1);
var __assign68 = function() {
  __assign68 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign68.apply(this, arguments);
};
function SvgAngleTool(passedProps, svgRef) {
  var context = React69.useContext(IconoirContext);
  var props = __assign68(__assign68({}, context), passedProps);
  return React69.createElement(
    "svg",
    __assign68({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React69.createElement("path", { d: "M3 21V3h6v12h12v6H3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React69.createElement("path", { d: "M13 19v2M9 19v2M3 7h2M3 11h2M3 15h2M17 19v2", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef68 = React69.forwardRef(SvgAngleTool);
var AngleTool_default = ForwardRef68;

// node_modules/iconoir-react/dist/esm/AntennaOff.mjs
var React70 = __toESM(require_react(), 1);
var __assign69 = function() {
  __assign69 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign69.apply(this, arguments);
};
function SvgAntennaOff(passedProps, svgRef) {
  var context = React70.useContext(IconoirContext);
  var props = __assign69(__assign69({}, context), passedProps);
  return React70.createElement(
    "svg",
    __assign69({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React70.createElement("path", { d: "M12 5a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React70.createElement("path", { d: "M7 23l1.111-4M17 23l-1.111-4M9.5 14l-1.389 5M9.5 14h4m-4 0l.8-2.88M8.11 19h7.778m0 0l-1.184-4.264M11.444 7L12 5l1.047 3.768M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef69 = React70.forwardRef(SvgAntennaOff);
var AntennaOff_default = ForwardRef69;

// node_modules/iconoir-react/dist/esm/AntennaSignalTag.mjs
var React71 = __toESM(require_react(), 1);
var __assign70 = function() {
  __assign70 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign70.apply(this, arguments);
};
function SvgAntennaSignalTag(passedProps, svgRef) {
  var context = React71.useContext(IconoirContext);
  var props = __assign70(__assign70({}, context), passedProps);
  return React71.createElement(
    "svg",
    __assign70({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React71.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React71.createElement("path", { d: "M15 9s1 1.125 1 3-1 3-1 3M12 12.01l.01-.011M17 7s2 1.786 2 5-2 5-2 5M9 9s-1 1.125-1 3 1 3 1 3M7 7s-2 1.786-2 5 2 5 2 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef70 = React71.forwardRef(SvgAntennaSignalTag);
var AntennaSignalTag_default = ForwardRef70;

// node_modules/iconoir-react/dist/esm/AntennaSignal.mjs
var React72 = __toESM(require_react(), 1);
var __assign71 = function() {
  __assign71 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign71.apply(this, arguments);
};
function SvgAntennaSignal(passedProps, svgRef) {
  var context = React72.useContext(IconoirContext);
  var props = __assign71(__assign71({}, context), passedProps);
  return React72.createElement(
    "svg",
    __assign71({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React72.createElement("path", { d: "M17.5 8S19 9.5 19 12s-1.5 4-1.5 4M20.5 5S23 7.5 23 12s-2.5 7-2.5 7M6.5 8S5 9.5 5 12s1.5 4 1.5 4M3.5 5S1 7.5 1 12s2.5 7 2.5 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React72.createElement("path", { d: "M12 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef71 = React72.forwardRef(SvgAntennaSignal);
var AntennaSignal_default = ForwardRef71;

// node_modules/iconoir-react/dist/esm/Antenna.mjs
var React73 = __toESM(require_react(), 1);
var __assign72 = function() {
  __assign72 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign72.apply(this, arguments);
};
function SvgAntenna(passedProps, svgRef) {
  var context = React73.useContext(IconoirContext);
  var props = __assign72(__assign72({}, context), passedProps);
  return React73.createElement(
    "svg",
    __assign72({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React73.createElement("path", { d: "M12 5a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React73.createElement("path", { d: "M16 1s1.5 1 1.5 3S16 7 16 7M8 1S6.5 2 6.5 4 8 7 8 7M7 23l1.111-4M17 23l-1.111-4M14.5 14L12 5l-2.5 9m5 0h-5m5 0l1.389 5M9.5 14l-1.389 5m0 0h7.778", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef72 = React73.forwardRef(SvgAntenna);
var Antenna_default = ForwardRef72;

// node_modules/iconoir-react/dist/esm/AppNotification.mjs
var React74 = __toESM(require_react(), 1);
var __assign73 = function() {
  __assign73 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign73.apply(this, arguments);
};
function SvgAppNotification(passedProps, svgRef) {
  var context = React74.useContext(IconoirContext);
  var props = __assign73(__assign73({}, context), passedProps);
  return React74.createElement(
    "svg",
    __assign73({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React74.createElement("path", { d: "M19 8a3 3 0 100-6 3 3 0 000 6zM21 12v3a6 6 0 01-6 6H9a6 6 0 01-6-6V9a6 6 0 016-6h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef73 = React74.forwardRef(SvgAppNotification);
var AppNotification_default = ForwardRef73;

// node_modules/iconoir-react/dist/esm/AppWindow.mjs
var React75 = __toESM(require_react(), 1);
var __assign74 = function() {
  __assign74 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign74.apply(this, arguments);
};
function SvgAppWindow(passedProps, svgRef) {
  var context = React75.useContext(IconoirContext);
  var props = __assign74(__assign74({}, context), passedProps);
  return React75.createElement(
    "svg",
    __assign74({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React75.createElement("path", { d: "M2 19V5a2 2 0 012-2h16a2 2 0 012 2v14a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React75.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef74 = React75.forwardRef(SvgAppWindow);
var AppWindow_default = ForwardRef74;

// node_modules/iconoir-react/dist/esm/AppleHalfAlt.mjs
var React76 = __toESM(require_react(), 1);
var __assign75 = function() {
  __assign75 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign75.apply(this, arguments);
};
function SvgAppleHalfAlt(passedProps, svgRef) {
  var context = React76.useContext(IconoirContext);
  var props = __assign75(__assign75({}, context), passedProps);
  return React76.createElement(
    "svg",
    __assign75({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React76.createElement("path", { d: "M12.147 21.265l-.147-.03-.147.03c-2.377.475-4.62.21-6.26-1.1C3.964 18.86 2.75 16.373 2.75 12c0-4.473 1.008-6.29 2.335-6.954.695-.347 1.593-.448 2.735-.317 1.141.132 2.458.488 3.943.983l.26.086.255-.102c2.482-.992 4.713-1.373 6.28-.641 1.47.685 2.692 2.538 2.692 6.945 0 4.374-1.213 6.86-2.843 8.164-1.64 1.312-3.883 1.576-6.26 1.1z", stroke: "currentColor" }),
    React76.createElement("path", { d: "M12 5.5C12 3 11 2 9 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React76.createElement("path", { d: "M12 6v15", stroke: "currentColor" }),
    React76.createElement("path", { d: "M9 12v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef75 = React76.forwardRef(SvgAppleHalfAlt);
var AppleHalfAlt_default = ForwardRef75;

// node_modules/iconoir-react/dist/esm/AppleHalf.mjs
var React77 = __toESM(require_react(), 1);
var __assign76 = function() {
  __assign76 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign76.apply(this, arguments);
};
function SvgAppleHalf(passedProps, svgRef) {
  var context = React77.useContext(IconoirContext);
  var props = __assign76(__assign76({}, context), passedProps);
  return React77.createElement(
    "svg",
    __assign76({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React77.createElement("path", { d: "M12.147 21.265l-.147-.03-.147.03c-2.377.475-4.62.21-6.26-1.1C3.964 18.86 2.75 16.373 2.75 12c0-4.473 1.008-6.29 2.335-6.954.695-.347 1.593-.448 2.735-.317 1.141.132 2.458.488 3.943.983l.26.086.255-.102c2.482-.992 4.713-1.373 6.28-.641 1.47.685 2.692 2.538 2.692 6.945 0 4.374-1.213 6.86-2.843 8.164-1.64 1.312-3.883 1.576-6.26 1.1z", stroke: "currentColor" }),
    React77.createElement("path", { d: "M12 5.5C12 3 11 2 9 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React77.createElement("path", { d: "M12 6v15", stroke: "currentColor" }),
    React77.createElement("path", { d: "M15 12v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef76 = React77.forwardRef(SvgAppleHalf);
var AppleHalf_default = ForwardRef76;

// node_modules/iconoir-react/dist/esm/AppleImac2021Side.mjs
var React78 = __toESM(require_react(), 1);
var __assign77 = function() {
  __assign77 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign77.apply(this, arguments);
};
function SvgAppleImac2021Side(passedProps, svgRef) {
  var context = React78.useContext(IconoirContext);
  var props = __assign77(__assign77({}, context), passedProps);
  return React78.createElement(
    "svg",
    __assign77({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React78.createElement("path", { d: "M6 22h2m6 0H8m0 0l2-8.5m0 0L7 2m3 11.5l1.5 5.5M17 22h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef77 = React78.forwardRef(SvgAppleImac2021Side);
var AppleImac2021Side_default = ForwardRef77;

// node_modules/iconoir-react/dist/esm/AppleImac2021.mjs
var React79 = __toESM(require_react(), 1);
var __assign78 = function() {
  __assign78 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign78.apply(this, arguments);
};
function SvgAppleImac2021(passedProps, svgRef) {
  var context = React79.useContext(IconoirContext);
  var props = __assign78(__assign78({}, context), passedProps);
  return React79.createElement(
    "svg",
    __assign78({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React79.createElement("path", { d: "M2 15.5V2.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v12.9m-20 0v1.9a.6.6 0 00.6.6h18.8a.6.6 0 00.6-.6v-1.9m-20 0h20M9 22h1.5m0 0v-4m0 4h3m0 0H15m-1.5 0v-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef78 = React79.forwardRef(SvgAppleImac2021);
var AppleImac2021_default = ForwardRef78;

// node_modules/iconoir-react/dist/esm/AppleMac.mjs
var React80 = __toESM(require_react(), 1);
var __assign79 = function() {
  __assign79 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign79.apply(this, arguments);
};
function SvgAppleMac(passedProps, svgRef) {
  var context = React80.useContext(IconoirContext);
  var props = __assign79(__assign79({}, context), passedProps);
  return React80.createElement(
    "svg",
    __assign79({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React80.createElement("path", { d: "M16 2c.363 2.18-1.912 3.83-3.184 4.571-.375.219-.799-.06-.734-.489C12.299 4.64 13.094 2 16 2z", stroke: "currentColor" }),
    React80.createElement("path", { d: "M9 6.5c.897 0 1.69.2 2.294.42.762.279 1.65.279 2.412 0A6.73 6.73 0 0116 6.5c1.085 0 2.465.589 3.5 1.767C16 11 17 15.5 20.269 16.692c-1.044 2.867-3.028 4.808-4.77 4.808-1.5 0-1.499-.7-2.999-.7s-1.5.7-3 .7c-2.5 0-5.5-4-5.5-9 0-4 3-6 5-6z", stroke: "currentColor" })
  );
}
var ForwardRef79 = React80.forwardRef(SvgAppleMac);
var AppleMac_default = ForwardRef79;

// node_modules/iconoir-react/dist/esm/AppleShortcuts.mjs
var React81 = __toESM(require_react(), 1);
var __assign80 = function() {
  __assign80 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign80.apply(this, arguments);
};
function SvgAppleShortcuts(passedProps, svgRef) {
  var context = React81.useContext(IconoirContext);
  var props = __assign80(__assign80({}, context), passedProps);
  return React81.createElement(
    "svg",
    __assign80({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React81.createElement(
      "g",
      { clipPath: "url(#apple-shortcuts_svg__clip0_3190_17433)", stroke: "currentColor" },
      React81.createElement("path", { d: "M9.852 14.633l-6.2-3.946a2 2 0 010-3.374l6.2-3.946a4 4 0 014.296 0l6.2 3.946a2 2 0 010 3.374l-6.2 3.946a4 4 0 01-4.296 0z" }),
      React81.createElement("path", { d: "M18.286 12l2.063 1.313a2 2 0 010 3.374l-6.201 3.946a4 4 0 01-4.296 0l-6.2-3.946a2 2 0 010-3.374L5.714 12" })
    ),
    React81.createElement(
      "defs",
      null,
      React81.createElement(
        "clipPath",
        { id: "apple-shortcuts_svg__clip0_3190_17433" },
        React81.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef80 = React81.forwardRef(SvgAppleShortcuts);
var AppleShortcuts_default = ForwardRef80;

// node_modules/iconoir-react/dist/esm/AppleSwift.mjs
var React82 = __toESM(require_react(), 1);
var __assign81 = function() {
  __assign81 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign81.apply(this, arguments);
};
function SvgAppleSwift(passedProps, svgRef) {
  var context = React82.useContext(IconoirContext);
  var props = __assign81(__assign81({}, context), passedProps);
  return React82.createElement(
    "svg",
    __assign81({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React82.createElement("path", { d: "M20.457 14.59c.446-1.437 1.451-6.75-5.93-11.49a.636.636 0 00-.808.1.593.593 0 00-.022.79c.03.036 2.75 3.35 1.783 7.135-1.673-1.151-8.324-6.423-8.324-6.423L11 11 3.862 6.4s5.046 6.195 8.134 8.525c-1.495.537-4.743 1.105-9.033-1.561a.637.637 0 00-.771.074.593.593 0 00-.106.743C2.229 14.42 5.668 20 12.939 20c1.995 0 3.16-.568 4.098-1.024.576-.279 1.031-.501 1.528-.501 1.236 0 2.047 1.227 2.054 1.238a.632.632 0 00.583.285.62.62 0 00.526-.37c.893-2.074-.645-4.269-1.271-5.039z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef81 = React82.forwardRef(SvgAppleSwift);
var AppleSwift_default = ForwardRef81;

// node_modules/iconoir-react/dist/esm/AppleWallet.mjs
var React83 = __toESM(require_react(), 1);
var __assign82 = function() {
  __assign82 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign82.apply(this, arguments);
};
function SvgAppleWallet(passedProps, svgRef) {
  var context = React83.useContext(IconoirContext);
  var props = __assign82(__assign82({}, context), passedProps);
  return React83.createElement(
    "svg",
    __assign82({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React83.createElement("path", { d: "M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z", stroke: "currentColor" }),
    React83.createElement("path", { d: "M3 15h6.4c.331 0 .605.278.75.576.206.423.694.924 1.85.924 1.156 0 1.644-.5 1.85-.924.145-.298.419-.576.75-.576H21M3 7h18M3 11h18", stroke: "currentColor" })
  );
}
var ForwardRef82 = React83.forwardRef(SvgAppleWallet);
var AppleWallet_default = ForwardRef82;

// node_modules/iconoir-react/dist/esm/Apple.mjs
var React84 = __toESM(require_react(), 1);
var __assign83 = function() {
  __assign83 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign83.apply(this, arguments);
};
function SvgApple(passedProps, svgRef) {
  var context = React84.useContext(IconoirContext);
  var props = __assign83(__assign83({}, context), passedProps);
  return React84.createElement(
    "svg",
    __assign83({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React84.createElement("path", { d: "M12.147 21.265l-.147-.03-.147.03c-2.377.475-4.62.21-6.26-1.1C3.964 18.86 2.75 16.373 2.75 12c0-4.473 1.008-6.29 2.335-6.954.695-.347 1.593-.448 2.735-.317 1.141.132 2.458.488 3.943.983l.26.086.255-.102c2.482-.992 4.713-1.373 6.28-.641 1.47.685 2.692 2.538 2.692 6.945 0 4.374-1.213 6.86-2.843 8.164-1.64 1.312-3.883 1.576-6.26 1.1z", stroke: "currentColor" }),
    React84.createElement("path", { d: "M12 5.5C12 3 11 2 9 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef83 = React84.forwardRef(SvgApple);
var Apple_default = ForwardRef83;

// node_modules/iconoir-react/dist/esm/ArSymbol.mjs
var React85 = __toESM(require_react(), 1);
var __assign84 = function() {
  __assign84 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign84.apply(this, arguments);
};
function SvgArSymbol(passedProps, svgRef) {
  var context = React85.useContext(IconoirContext);
  var props = __assign84(__assign84({}, context), passedProps);
  return React85.createElement(
    "svg",
    __assign84({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React85.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React85.createElement("path", { d: "M13 15.5v-2.8m2.857 0c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H13v4.2m2.857 0H13m2.857 0L18 15.5M11 15.5L9.929 13M5 15.5L6.071 13m0 0L8 8.5 9.929 13M6.07 13H9.93", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef84 = React85.forwardRef(SvgArSymbol);
var ArSymbol_default = ForwardRef84;

// node_modules/iconoir-react/dist/esm/Arcade.mjs
var React86 = __toESM(require_react(), 1);
var __assign85 = function() {
  __assign85 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign85.apply(this, arguments);
};
function SvgArcade(passedProps, svgRef) {
  var context = React86.useContext(IconoirContext);
  var props = __assign85(__assign85({}, context), passedProps);
  return React86.createElement(
    "svg",
    __assign85({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React86.createElement("path", { d: "M11 8.5L9.8 9l-7.448 3.386a.6.6 0 00-.352.546v.136a.6.6 0 00.352.546l8.82 4.01a2 2 0 001.656 0l8.82-4.01a.6.6 0 00.352-.546v-.136a.6.6 0 00-.352-.546L14.2 9 13 8.5", stroke: "currentColor" }),
    React86.createElement("path", { d: "M22 13v4.112a.6.6 0 01-.354.547l-8.825 3.972a2 2 0 01-1.642 0l-8.825-3.972A.6.6 0 012 17.112V13", stroke: "currentColor" }),
    React86.createElement("path", { d: "M12 8a3 3 0 110-6 3 3 0 010 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React86.createElement("path", { d: "M11 8v5a1 1 0 001 1v0a1 1 0 001-1V8", stroke: "currentColor" }),
    React86.createElement("path", { d: "M16 13h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef85 = React86.forwardRef(SvgArcade);
var Arcade_default = ForwardRef85;

// node_modules/iconoir-react/dist/esm/ArcheryMatch.mjs
var React87 = __toESM(require_react(), 1);
var __assign86 = function() {
  __assign86 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign86.apply(this, arguments);
};
function SvgArcheryMatch(passedProps, svgRef) {
  var context = React87.useContext(IconoirContext);
  var props = __assign86(__assign86({}, context), passedProps);
  return React87.createElement(
    "svg",
    __assign86({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React87.createElement("path", { d: "M8.611 15.89l12.02-12.022M8.612 15.89H5.783l-2.829 2.829h2.829v2.828l2.828-2.828v-2.829zm12.02-12.02h-2.828m2.829 0v2.828M15.39 15.89L3.367 3.867M15.39 15.89h2.829l2.828 2.829h-2.828v2.828l-2.829-2.828v-2.829zM3.37 3.87h2.828m-2.829 0v2.828", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef86 = React87.forwardRef(SvgArcheryMatch);
var ArcheryMatch_default = ForwardRef86;

// node_modules/iconoir-react/dist/esm/Archery.mjs
var React88 = __toESM(require_react(), 1);
var __assign87 = function() {
  __assign87 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign87.apply(this, arguments);
};
function SvgArchery(passedProps, svgRef) {
  var context = React88.useContext(IconoirContext);
  var props = __assign87(__assign87({}, context), passedProps);
  return React88.createElement(
    "svg",
    __assign87({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React88.createElement("path", { d: "M8 12h9m-9 0l-2-2H2l2 2-2 2h4l2-2zm9 0l-2-2m2 2l-2 2M16 22.5c2.761 0 5-4.701 5-10.5S18.761 1.5 16 1.5 11 6.201 11 12s2.239 10.5 5 10.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef87 = React88.forwardRef(SvgArchery);
var Archery_default = ForwardRef87;

// node_modules/iconoir-react/dist/esm/Archive.mjs
var React89 = __toESM(require_react(), 1);
var __assign88 = function() {
  __assign88 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign88.apply(this, arguments);
};
function SvgArchive(passedProps, svgRef) {
  var context = React89.useContext(IconoirContext);
  var props = __assign88(__assign88({}, context), passedProps);
  return React89.createElement(
    "svg",
    __assign88({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React89.createElement("path", { d: "M7 6h10M7 9h10M9 17h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React89.createElement("path", { d: "M3 12h-.4a.6.6 0 00-.6.6v8.8a.6.6 0 00.6.6h18.8a.6.6 0 00.6-.6v-8.8a.6.6 0 00-.6-.6H21M3 12V2.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6V12M3 12h18", stroke: "currentColor" })
  );
}
var ForwardRef88 = React89.forwardRef(SvgArchive);
var Archive_default = ForwardRef88;

// node_modules/iconoir-react/dist/esm/AreaSearch.mjs
var React90 = __toESM(require_react(), 1);
var __assign89 = function() {
  __assign89 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign89.apply(this, arguments);
};
function SvgAreaSearch(passedProps, svgRef) {
  var context = React90.useContext(IconoirContext);
  var props = __assign89(__assign89({}, context), passedProps);
  return React90.createElement(
    "svg",
    __assign89({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React90.createElement("path", { d: "M20.124 20.119a3 3 0 10-4.248-4.237 3 3 0 004.248 4.237zm0 0L22 22M7 2H4v3M4 11v2M11 2h2M11 22h2M20 11v2M17 2h3v3M7 22H4v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef89 = React90.forwardRef(SvgAreaSearch);
var AreaSearch_default = ForwardRef89;

// node_modules/iconoir-react/dist/esm/ArrowArchery.mjs
var React91 = __toESM(require_react(), 1);
var __assign90 = function() {
  __assign90 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign90.apply(this, arguments);
};
function SvgArrowArchery(passedProps, svgRef) {
  var context = React91.useContext(IconoirContext);
  var props = __assign90(__assign90({}, context), passedProps);
  return React91.createElement(
    "svg",
    __assign90({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React91.createElement("path", { d: "M8.611 15.89l12.02-12.022M8.612 15.89H5.783l-2.829 2.829h2.829v2.828l2.828-2.828v-2.829zm12.02-12.02h-2.828m2.829 0v2.828", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef90 = React91.forwardRef(SvgArrowArchery);
var ArrowArchery_default = ForwardRef90;

// node_modules/iconoir-react/dist/esm/ArrowBlCircle.mjs
var React92 = __toESM(require_react(), 1);
var __assign91 = function() {
  __assign91 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign91.apply(this, arguments);
};
function SvgArrowBlCircle(passedProps, svgRef) {
  var context = React92.useContext(IconoirContext);
  var props = __assign91(__assign91({}, context), passedProps);
  return React92.createElement(
    "svg",
    __assign91({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React92.createElement("path", { d: "M14.828 9.172l-5.656 5.656m0 0h4.95m-4.95 0v-4.95M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef91 = React92.forwardRef(SvgArrowBlCircle);
var ArrowBlCircle_default = ForwardRef91;

// node_modules/iconoir-react/dist/esm/ArrowBlSquare.mjs
var React93 = __toESM(require_react(), 1);
var __assign92 = function() {
  __assign92 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign92.apply(this, arguments);
};
function SvgArrowBlSquare(passedProps, svgRef) {
  var context = React93.useContext(IconoirContext);
  var props = __assign92(__assign92({}, context), passedProps);
  return React93.createElement(
    "svg",
    __assign92({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React93.createElement("path", { d: "M14.828 9.172l-5.656 5.656m0 0h4.95m-4.95 0v-4.95M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef92 = React93.forwardRef(SvgArrowBlSquare);
var ArrowBlSquare_default = ForwardRef92;

// node_modules/iconoir-react/dist/esm/ArrowBl.mjs
var React94 = __toESM(require_react(), 1);
var __assign93 = function() {
  __assign93 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign93.apply(this, arguments);
};
function SvgArrowBl(passedProps, svgRef) {
  var context = React94.useContext(IconoirContext);
  var props = __assign93(__assign93({}, context), passedProps);
  return React94.createElement(
    "svg",
    __assign93({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React94.createElement("path", { d: "M19 6L6 19m0 0V6.52M6 19h12.48", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef93 = React94.forwardRef(SvgArrowBl);
var ArrowBl_default = ForwardRef93;

// node_modules/iconoir-react/dist/esm/ArrowBrCircle.mjs
var React95 = __toESM(require_react(), 1);
var __assign94 = function() {
  __assign94 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign94.apply(this, arguments);
};
function SvgArrowBrCircle(passedProps, svgRef) {
  var context = React95.useContext(IconoirContext);
  var props = __assign94(__assign94({}, context), passedProps);
  return React95.createElement(
    "svg",
    __assign94({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React95.createElement("path", { d: "M9.171 9.172l5.657 5.656m0 0h-4.95m4.95 0v-4.95M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef94 = React95.forwardRef(SvgArrowBrCircle);
var ArrowBrCircle_default = ForwardRef94;

// node_modules/iconoir-react/dist/esm/ArrowBrSquare.mjs
var React96 = __toESM(require_react(), 1);
var __assign95 = function() {
  __assign95 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign95.apply(this, arguments);
};
function SvgArrowBrSquare(passedProps, svgRef) {
  var context = React96.useContext(IconoirContext);
  var props = __assign95(__assign95({}, context), passedProps);
  return React96.createElement(
    "svg",
    __assign95({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React96.createElement("path", { d: "M9.171 9.172l5.657 5.656m0 0h-4.95m4.95 0v-4.95M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef95 = React96.forwardRef(SvgArrowBrSquare);
var ArrowBrSquare_default = ForwardRef95;

// node_modules/iconoir-react/dist/esm/ArrowBr.mjs
var React97 = __toESM(require_react(), 1);
var __assign96 = function() {
  __assign96 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign96.apply(this, arguments);
};
function SvgArrowBr(passedProps, svgRef) {
  var context = React97.useContext(IconoirContext);
  var props = __assign96(__assign96({}, context), passedProps);
  return React97.createElement(
    "svg",
    __assign96({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React97.createElement("path", { d: "M6 6l13 13m0 0V6.52M19 19H6.52", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef96 = React97.forwardRef(SvgArrowBr);
var ArrowBr_default = ForwardRef96;

// node_modules/iconoir-react/dist/esm/ArrowDownCircle.mjs
var React98 = __toESM(require_react(), 1);
var __assign97 = function() {
  __assign97 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign97.apply(this, arguments);
};
function SvgArrowDownCircle(passedProps, svgRef) {
  var context = React98.useContext(IconoirContext);
  var props = __assign97(__assign97({}, context), passedProps);
  return React98.createElement(
    "svg",
    __assign97({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React98.createElement("path", { d: "M12 8v8m0 0l3.5-3.5M12 16l-3.5-3.5M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef97 = React98.forwardRef(SvgArrowDownCircle);
var ArrowDownCircle_default = ForwardRef97;

// node_modules/iconoir-react/dist/esm/ArrowDown.mjs
var React99 = __toESM(require_react(), 1);
var __assign98 = function() {
  __assign98 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign98.apply(this, arguments);
};
function SvgArrowDown(passedProps, svgRef) {
  var context = React99.useContext(IconoirContext);
  var props = __assign98(__assign98({}, context), passedProps);
  return React99.createElement(
    "svg",
    __assign98({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React99.createElement("path", { d: "M12 3v18m0 0l8.5-8.5M12 21l-8.5-8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef98 = React99.forwardRef(SvgArrowDown);
var ArrowDown_default = ForwardRef98;

// node_modules/iconoir-react/dist/esm/ArrowEmailForward.mjs
var React100 = __toESM(require_react(), 1);
var __assign99 = function() {
  __assign99 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign99.apply(this, arguments);
};
function SvgArrowEmailForward(passedProps, svgRef) {
  var context = React100.useContext(IconoirContext);
  var props = __assign99(__assign99({}, context), passedProps);
  return React100.createElement(
    "svg",
    __assign99({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React100.createElement("path", { d: "M22 10H8c-8 0-8 11 0 11m14-11l-7-7m7 7l-7 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef99 = React100.forwardRef(SvgArrowEmailForward);
var ArrowEmailForward_default = ForwardRef99;

// node_modules/iconoir-react/dist/esm/ArrowLeftCircle.mjs
var React101 = __toESM(require_react(), 1);
var __assign100 = function() {
  __assign100 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign100.apply(this, arguments);
};
function SvgArrowLeftCircle(passedProps, svgRef) {
  var context = React101.useContext(IconoirContext);
  var props = __assign100(__assign100({}, context), passedProps);
  return React101.createElement(
    "svg",
    __assign100({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React101.createElement("path", { d: "M16 12H8m0 0l3.5 3.5M8 12l3.5-3.5M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef100 = React101.forwardRef(SvgArrowLeftCircle);
var ArrowLeftCircle_default = ForwardRef100;

// node_modules/iconoir-react/dist/esm/ArrowLeft.mjs
var React102 = __toESM(require_react(), 1);
var __assign101 = function() {
  __assign101 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign101.apply(this, arguments);
};
function SvgArrowLeft(passedProps, svgRef) {
  var context = React102.useContext(IconoirContext);
  var props = __assign101(__assign101({}, context), passedProps);
  return React102.createElement(
    "svg",
    __assign101({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React102.createElement("path", { d: "M21 12H3m0 0l8.5-8.5M3 12l8.5 8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef101 = React102.forwardRef(SvgArrowLeft);
var ArrowLeft_default = ForwardRef101;

// node_modules/iconoir-react/dist/esm/ArrowRightCircle.mjs
var React103 = __toESM(require_react(), 1);
var __assign102 = function() {
  __assign102 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign102.apply(this, arguments);
};
function SvgArrowRightCircle(passedProps, svgRef) {
  var context = React103.useContext(IconoirContext);
  var props = __assign102(__assign102({}, context), passedProps);
  return React103.createElement(
    "svg",
    __assign102({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React103.createElement("path", { d: "M8 12h8m0 0l-3.5-3.5M16 12l-3.5 3.5M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef102 = React103.forwardRef(SvgArrowRightCircle);
var ArrowRightCircle_default = ForwardRef102;

// node_modules/iconoir-react/dist/esm/ArrowRight.mjs
var React104 = __toESM(require_react(), 1);
var __assign103 = function() {
  __assign103 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign103.apply(this, arguments);
};
function SvgArrowRight(passedProps, svgRef) {
  var context = React104.useContext(IconoirContext);
  var props = __assign103(__assign103({}, context), passedProps);
  return React104.createElement(
    "svg",
    __assign103({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React104.createElement("path", { d: "M3 12h18m0 0l-8.5-8.5M21 12l-8.5 8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef103 = React104.forwardRef(SvgArrowRight);
var ArrowRight_default = ForwardRef103;

// node_modules/iconoir-react/dist/esm/ArrowSeparateVertical.mjs
var React105 = __toESM(require_react(), 1);
var __assign104 = function() {
  __assign104 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign104.apply(this, arguments);
};
function SvgArrowSeparateVertical(passedProps, svgRef) {
  var context = React105.useContext(IconoirContext);
  var props = __assign104(__assign104({}, context), passedProps);
  return React105.createElement(
    "svg",
    __assign104({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React105.createElement("path", { d: "M17 8l-5-5-5 5M17 16l-5 5-5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef104 = React105.forwardRef(SvgArrowSeparateVertical);
var ArrowSeparateVertical_default = ForwardRef104;

// node_modules/iconoir-react/dist/esm/ArrowSeparate.mjs
var React106 = __toESM(require_react(), 1);
var __assign105 = function() {
  __assign105 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign105.apply(this, arguments);
};
function SvgArrowSeparate(passedProps, svgRef) {
  var context = React106.useContext(IconoirContext);
  var props = __assign105(__assign105({}, context), passedProps);
  return React106.createElement(
    "svg",
    __assign105({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React106.createElement("path", { d: "M8 7l-5 5 5 5M16 7l5 5-5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef105 = React106.forwardRef(SvgArrowSeparate);
var ArrowSeparate_default = ForwardRef105;

// node_modules/iconoir-react/dist/esm/ArrowTlCircle.mjs
var React107 = __toESM(require_react(), 1);
var __assign106 = function() {
  __assign106 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign106.apply(this, arguments);
};
function SvgArrowTlCircle(passedProps, svgRef) {
  var context = React107.useContext(IconoirContext);
  var props = __assign106(__assign106({}, context), passedProps);
  return React107.createElement(
    "svg",
    __assign106({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React107.createElement("path", { d: "M14.828 14.828L9.172 9.172m0 0h4.95m-4.95 0v4.95M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef106 = React107.forwardRef(SvgArrowTlCircle);
var ArrowTlCircle_default = ForwardRef106;

// node_modules/iconoir-react/dist/esm/ArrowTlSquare.mjs
var React108 = __toESM(require_react(), 1);
var __assign107 = function() {
  __assign107 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign107.apply(this, arguments);
};
function SvgArrowTlSquare(passedProps, svgRef) {
  var context = React108.useContext(IconoirContext);
  var props = __assign107(__assign107({}, context), passedProps);
  return React108.createElement(
    "svg",
    __assign107({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React108.createElement("path", { d: "M14.828 14.828L9.172 9.172m0 0h4.95m-4.95 0v4.95M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef107 = React108.forwardRef(SvgArrowTlSquare);
var ArrowTlSquare_default = ForwardRef107;

// node_modules/iconoir-react/dist/esm/ArrowTl.mjs
var React109 = __toESM(require_react(), 1);
var __assign108 = function() {
  __assign108 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign108.apply(this, arguments);
};
function SvgArrowTl(passedProps, svgRef) {
  var context = React109.useContext(IconoirContext);
  var props = __assign108(__assign108({}, context), passedProps);
  return React109.createElement(
    "svg",
    __assign108({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React109.createElement("path", { d: "M19 19L6 6m0 0v12.48M6 6h12.48", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef108 = React109.forwardRef(SvgArrowTl);
var ArrowTl_default = ForwardRef108;

// node_modules/iconoir-react/dist/esm/ArrowTrCircle.mjs
var React110 = __toESM(require_react(), 1);
var __assign109 = function() {
  __assign109 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign109.apply(this, arguments);
};
function SvgArrowTrCircle(passedProps, svgRef) {
  var context = React110.useContext(IconoirContext);
  var props = __assign109(__assign109({}, context), passedProps);
  return React110.createElement(
    "svg",
    __assign109({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React110.createElement("path", { d: "M9.171 14.828l5.657-5.656m0 0h-4.95m4.95 0v4.95M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef109 = React110.forwardRef(SvgArrowTrCircle);
var ArrowTrCircle_default = ForwardRef109;

// node_modules/iconoir-react/dist/esm/ArrowTrSquare.mjs
var React111 = __toESM(require_react(), 1);
var __assign110 = function() {
  __assign110 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign110.apply(this, arguments);
};
function SvgArrowTrSquare(passedProps, svgRef) {
  var context = React111.useContext(IconoirContext);
  var props = __assign110(__assign110({}, context), passedProps);
  return React111.createElement(
    "svg",
    __assign110({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React111.createElement("path", { d: "M9.171 14.828l5.657-5.656m0 0h-4.95m4.95 0v4.95M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef110 = React111.forwardRef(SvgArrowTrSquare);
var ArrowTrSquare_default = ForwardRef110;

// node_modules/iconoir-react/dist/esm/ArrowTr.mjs
var React112 = __toESM(require_react(), 1);
var __assign111 = function() {
  __assign111 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign111.apply(this, arguments);
};
function SvgArrowTr(passedProps, svgRef) {
  var context = React112.useContext(IconoirContext);
  var props = __assign111(__assign111({}, context), passedProps);
  return React112.createElement(
    "svg",
    __assign111({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React112.createElement("path", { d: "M6 19L19 6m0 0v12.48M19 6H6.52", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef111 = React112.forwardRef(SvgArrowTr);
var ArrowTr_default = ForwardRef111;

// node_modules/iconoir-react/dist/esm/ArrowUnionVertical.mjs
var React113 = __toESM(require_react(), 1);
var __assign112 = function() {
  __assign112 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign112.apply(this, arguments);
};
function SvgArrowUnionVertical(passedProps, svgRef) {
  var context = React113.useContext(IconoirContext);
  var props = __assign112(__assign112({}, context), passedProps);
  return React113.createElement(
    "svg",
    __assign112({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React113.createElement("path", { d: "M17 4l-5 5-5-5M17 20l-5-5-5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef112 = React113.forwardRef(SvgArrowUnionVertical);
var ArrowUnionVertical_default = ForwardRef112;

// node_modules/iconoir-react/dist/esm/ArrowUnion.mjs
var React114 = __toESM(require_react(), 1);
var __assign113 = function() {
  __assign113 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign113.apply(this, arguments);
};
function SvgArrowUnion(passedProps, svgRef) {
  var context = React114.useContext(IconoirContext);
  var props = __assign113(__assign113({}, context), passedProps);
  return React114.createElement(
    "svg",
    __assign113({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React114.createElement("path", { d: "M20 7l-5 5 5 5M4 7l5 5-5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef113 = React114.forwardRef(SvgArrowUnion);
var ArrowUnion_default = ForwardRef113;

// node_modules/iconoir-react/dist/esm/ArrowUpCircle.mjs
var React115 = __toESM(require_react(), 1);
var __assign114 = function() {
  __assign114 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign114.apply(this, arguments);
};
function SvgArrowUpCircle(passedProps, svgRef) {
  var context = React115.useContext(IconoirContext);
  var props = __assign114(__assign114({}, context), passedProps);
  return React115.createElement(
    "svg",
    __assign114({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React115.createElement("path", { d: "M12 16V8m0 0l3.5 3.5M12 8l-3.5 3.5M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef114 = React115.forwardRef(SvgArrowUpCircle);
var ArrowUpCircle_default = ForwardRef114;

// node_modules/iconoir-react/dist/esm/ArrowUp.mjs
var React116 = __toESM(require_react(), 1);
var __assign115 = function() {
  __assign115 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign115.apply(this, arguments);
};
function SvgArrowUp(passedProps, svgRef) {
  var context = React116.useContext(IconoirContext);
  var props = __assign115(__assign115({}, context), passedProps);
  return React116.createElement(
    "svg",
    __assign115({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React116.createElement("path", { d: "M12 21V3m0 0l8.5 8.5M12 3l-8.5 8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef115 = React116.forwardRef(SvgArrowUp);
var ArrowUp_default = ForwardRef115;

// node_modules/iconoir-react/dist/esm/ArrowsUpFromLine.mjs
var React117 = __toESM(require_react(), 1);
var __assign116 = function() {
  __assign116 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign116.apply(this, arguments);
};
function SvgArrowsUpFromLine(passedProps, svgRef) {
  var context = React117.useContext(IconoirContext);
  var props = __assign116(__assign116({}, context), passedProps);
  return React117.createElement(
    "svg",
    __assign116({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React117.createElement("path", { d: "M3 20h18M6 17V4m0 0L2 8m4-4l4 4M18 17V4m0 0l-4 4m4-4l4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef116 = React117.forwardRef(SvgArrowsUpFromLine);
var ArrowsUpFromLine_default = ForwardRef116;

// node_modules/iconoir-react/dist/esm/Asana.mjs
var React118 = __toESM(require_react(), 1);
var __assign117 = function() {
  __assign117 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign117.apply(this, arguments);
};
function SvgAsana(passedProps, svgRef) {
  var context = React118.useContext(IconoirContext);
  var props = __assign117(__assign117({}, context), passedProps);
  return React118.createElement(
    "svg",
    __assign117({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React118.createElement("path", { d: "M12 11.5a4 4 0 100-8 4 4 0 000 8zM7 20.5a4 4 0 100-8 4 4 0 000 8zM17 20.5a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef117 = React118.forwardRef(SvgAsana);
var Asana_default = ForwardRef117;

// node_modules/iconoir-react/dist/esm/AtSignCircle.mjs
var React119 = __toESM(require_react(), 1);
var __assign118 = function() {
  __assign118 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign118.apply(this, arguments);
};
function SvgAtSignCircle(passedProps, svgRef) {
  var context = React119.useContext(IconoirContext);
  var props = __assign118(__assign118({}, context), passedProps);
  return React119.createElement(
    "svg",
    __assign118({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React119.createElement("path", { d: "M16.278 17.541A7 7 0 1119 12c0 4.278-5 3.722-5 1V8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React119.createElement("path", { d: "M14 12v-.5a2.5 2.5 0 00-5 0v.5M14 12v.5a2.5 2.5 0 01-5 0V12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React119.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef118 = React119.forwardRef(SvgAtSignCircle);
var AtSignCircle_default = ForwardRef118;

// node_modules/iconoir-react/dist/esm/AtSign.mjs
var React120 = __toESM(require_react(), 1);
var __assign119 = function() {
  __assign119 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign119.apply(this, arguments);
};
function SvgAtSign(passedProps, svgRef) {
  var context = React120.useContext(IconoirContext);
  var props = __assign119(__assign119({}, context), passedProps);
  return React120.createElement(
    "svg",
    __assign119({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React120.createElement("path", { d: "M17.5 19.125A9 9 0 1121 12c0 5.5-6 5.5-6 2V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React120.createElement("path", { d: "M15 12v-1.5C15 9.12 13.657 8 12 8s-3 1.12-3 2.5V12M15 12v1.5c0 1.38-1.343 2.5-3 2.5s-3-1.12-3-2.5V12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef119 = React120.forwardRef(SvgAtSign);
var AtSign_default = ForwardRef119;

// node_modules/iconoir-react/dist/esm/Atom.mjs
var React121 = __toESM(require_react(), 1);
var __assign120 = function() {
  __assign120 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign120.apply(this, arguments);
};
function SvgAtom(passedProps, svgRef) {
  var context = React121.useContext(IconoirContext);
  var props = __assign120(__assign120({}, context), passedProps);
  return React121.createElement(
    "svg",
    __assign120({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React121.createElement("path", { d: "M4.404 13.61C3.515 13.145 3 12.592 3 12c0-1.657 4.03-3 9-3s9 1.343 9 3c0 .714-.75 1.37-2 1.886M12 11.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React121.createElement("path", { d: "M16.883 6c-.005-1.023-.263-1.747-.797-2.02-1.477-.751-4.503 2.23-6.76 6.658-2.256 4.429-2.889 8.629-1.412 9.381.527.269 1.252.061 2.07-.519", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React121.createElement("path", { d: "M9.6 4.252c-.66-.386-1.243-.497-1.686-.271-1.477.752-.844 4.952 1.413 9.38 2.256 4.43 5.282 7.41 6.758 6.658 1.313-.669.959-4.061-.72-7.917", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef120 = React121.forwardRef(SvgAtom);
var Atom_default = ForwardRef120;

// node_modules/iconoir-react/dist/esm/Attachment.mjs
var React122 = __toESM(require_react(), 1);
var __assign121 = function() {
  __assign121 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign121.apply(this, arguments);
};
function SvgAttachment(passedProps, svgRef) {
  var context = React122.useContext(IconoirContext);
  var props = __assign121(__assign121({}, context), passedProps);
  return React122.createElement(
    "svg",
    __assign121({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React122.createElement("path", { d: "M21.438 11.662l-9.19 9.19a6.003 6.003 0 11-8.49-8.49l9.19-9.19a4.002 4.002 0 015.66 5.66l-9.2 9.19a2.001 2.001 0 11-2.83-2.83l8.49-8.48", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef121 = React122.forwardRef(SvgAttachment);
var Attachment_default = ForwardRef121;

// node_modules/iconoir-react/dist/esm/AugmentedReality.mjs
var React123 = __toESM(require_react(), 1);
var __assign122 = function() {
  __assign122 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign122.apply(this, arguments);
};
function SvgAugmentedReality(passedProps, svgRef) {
  var context = React123.useContext(IconoirContext);
  var props = __assign122(__assign122({}, context), passedProps);
  return React123.createElement(
    "svg",
    __assign122({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React123.createElement("path", { d: "M5.5 15.5l.614-1.718M10.5 15.5l-.614-1.718m-3.772 0L8 8.5l1.886 5.282m-3.772 0h3.772M13 15.5v-2.8m2.857 0c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H13v4.2m2.857 0H13m2.857 0L18 15.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React123.createElement("path", { d: "M2 18.4V5.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef122 = React123.forwardRef(SvgAugmentedReality);
var AugmentedReality_default = ForwardRef122;

// node_modules/iconoir-react/dist/esm/AutoFlash.mjs
var React124 = __toESM(require_react(), 1);
var __assign123 = function() {
  __assign123 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign123.apply(this, arguments);
};
function SvgAutoFlash(passedProps, svgRef) {
  var context = React124.useContext(IconoirContext);
  var props = __assign123(__assign123({}, context), passedProps);
  return React124.createElement(
    "svg",
    __assign123({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React124.createElement("path", { d: "M16 9.5l.692-1.5M22 9.5L21.308 8m0 0L19 3l-2.308 5m4.616 0h-4.616M13 10h-3V3L2 14h6v7l6-8.25", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef123 = React124.forwardRef(SvgAutoFlash);
var AutoFlash_default = ForwardRef123;

// node_modules/iconoir-react/dist/esm/AviFormat.mjs
var React125 = __toESM(require_react(), 1);
var __assign124 = function() {
  __assign124 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign124.apply(this, arguments);
};
function SvgAviFormat(passedProps, svgRef) {
  var context = React125.useContext(IconoirContext);
  var props = __assign124(__assign124({}, context), passedProps);
  return React125.createElement(
    "svg",
    __assign124({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React125.createElement("path", { d: "M12 9l1.5 6L15 9M18 15V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React125.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React125.createElement("path", { d: "M6 15v-3m0 0v-1.5A1.5 1.5 0 017.5 9v0A1.5 1.5 0 019 10.5V12m-3 0h3m0 0v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef124 = React125.forwardRef(SvgAviFormat);
var AviFormat_default = ForwardRef124;

// node_modules/iconoir-react/dist/esm/Axes.mjs
var React126 = __toESM(require_react(), 1);
var __assign125 = function() {
  __assign125 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign125.apply(this, arguments);
};
function SvgAxes(passedProps, svgRef) {
  var context = React126.useContext(IconoirContext);
  var props = __assign125(__assign125({}, context), passedProps);
  return React126.createElement(
    "svg",
    __assign125({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React126.createElement("path", { d: "M21 19.452l-9-6.61m0 0V3m0 9.843l-9 6.609M20.438 16.71L21 19.452 18.187 20M9.75 5.194L12 3l2.25 2.194M5.813 20L3 19.452l.563-2.742", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef125 = React126.forwardRef(SvgAxes);
var Axes_default = ForwardRef125;

// node_modules/iconoir-react/dist/esm/Backward15Seconds.mjs
var React127 = __toESM(require_react(), 1);
var __assign126 = function() {
  __assign126 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign126.apply(this, arguments);
};
function SvgBackward15Seconds(passedProps, svgRef) {
  var context = React127.useContext(IconoirContext);
  var props = __assign126(__assign126({}, context), passedProps);
  return React127.createElement(
    "svg",
    __assign126({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React127.createElement("path", { d: "M3 13a9 9 0 109-9M9 9v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React127.createElement("path", { d: "M15 9h-2a1 1 0 00-1 1v1.5a1 1 0 001 1h1a1 1 0 011 1V15a1 1 0 01-1 1h-2M12 4H4.5m0 0l2-2m-2 2l2 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef126 = React127.forwardRef(SvgBackward15Seconds);
var Backward15Seconds_default = ForwardRef126;

// node_modules/iconoir-react/dist/esm/Bag.mjs
var React128 = __toESM(require_react(), 1);
var __assign127 = function() {
  __assign127 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign127.apply(this, arguments);
};
function SvgBag(passedProps, svgRef) {
  var context = React128.useContext(IconoirContext);
  var props = __assign127(__assign127({}, context), passedProps);
  return React128.createElement(
    "svg",
    __assign127({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React128.createElement("path", { d: "M4.508 20h14.984a.6.6 0 00.592-.501l1.8-10.8A.6.6 0 0021.292 8H2.708a.6.6 0 00-.592.699l1.8 10.8a.6.6 0 00.592.501z", stroke: "currentColor" }),
    React128.createElement("path", { d: "M7 8V6a2 2 0 012-2h6a2 2 0 012 2v2", stroke: "currentColor" })
  );
}
var ForwardRef127 = React128.forwardRef(SvgBag);
var Bag_default = ForwardRef127;

// node_modules/iconoir-react/dist/esm/Balcony.mjs
var React129 = __toESM(require_react(), 1);
var __assign128 = function() {
  __assign128 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign128.apply(this, arguments);
};
function SvgBalcony(passedProps, svgRef) {
  var context = React129.useContext(IconoirContext);
  var props = __assign128(__assign128({}, context), passedProps);
  return React129.createElement(
    "svg",
    __assign128({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React129.createElement("path", { d: "M4 13v8M8 13v8M16 13v8M12 13v8M20 13v8M2 21h20M2 13h20M18 10V3.6a.6.6 0 00-.6-.6H6.6a.6.6 0 00-.6.6V10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef128 = React129.forwardRef(SvgBalcony);
var Balcony_default = ForwardRef128;

// node_modules/iconoir-react/dist/esm/Bank.mjs
var React130 = __toESM(require_react(), 1);
var __assign129 = function() {
  __assign129 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign129.apply(this, arguments);
};
function SvgBank(passedProps, svgRef) {
  var context = React130.useContext(IconoirContext);
  var props = __assign129(__assign129({}, context), passedProps);
  return React130.createElement(
    "svg",
    __assign129({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React130.createElement("path", { d: "M3 9.5L12 4l9 5.5M5 20h14M10 9h4M6 17v-5M10 17v-5M14 17v-5M18 17v-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef129 = React130.forwardRef(SvgBank);
var Bank_default = ForwardRef129;

// node_modules/iconoir-react/dist/esm/Barcode.mjs
var React131 = __toESM(require_react(), 1);
var __assign130 = function() {
  __assign130 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign130.apply(this, arguments);
};
function SvgBarcode(passedProps, svgRef) {
  var context = React131.useContext(IconoirContext);
  var props = __assign130(__assign130({}, context), passedProps);
  return React131.createElement(
    "svg",
    __assign130({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React131.createElement("path", { d: "M5 19V5h1M12 19V5h1M9 5v14M16 5v14M19 5v14M6 5v14H5M13 5v14h-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef130 = React131.forwardRef(SvgBarcode);
var Barcode_default = ForwardRef130;

// node_modules/iconoir-react/dist/esm/BasketballAlt.mjs
var React132 = __toESM(require_react(), 1);
var __assign131 = function() {
  __assign131 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign131.apply(this, arguments);
};
function SvgBasketballAlt(passedProps, svgRef) {
  var context = React132.useContext(IconoirContext);
  var props = __assign131(__assign131({}, context), passedProps);
  return React132.createElement(
    "svg",
    __assign131({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React132.createElement(
      "g",
      { clipPath: "url(#basketball-alt_svg__clip0)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React132.createElement("path", { d: "M17.736 20.192c4.524-3.168 5.623-9.404 2.455-13.928C17.024 1.74 10.788.641 6.264 3.81 1.74 6.976.641 13.212 3.808 17.736c3.168 4.524 9.404 5.623 13.928 2.456zM17.736 20.192L6.264 3.809M19.577 5.473c-3.77 5.896-8.508 9.214-16.302 11.415M13.06 2.056c.413 5.24 3.392 9.494 8.646 12.35M2.293 9.595c4.783 2.18 7.761 6.434 8.647 12.349" })
    ),
    React132.createElement(
      "defs",
      null,
      React132.createElement(
        "clipPath",
        { id: "basketball-alt_svg__clip0" },
        React132.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef131 = React132.forwardRef(SvgBasketballAlt);
var BasketballAlt_default = ForwardRef131;

// node_modules/iconoir-react/dist/esm/BasketballField.mjs
var React133 = __toESM(require_react(), 1);
var __assign132 = function() {
  __assign132 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign132.apply(this, arguments);
};
function SvgBasketballField(passedProps, svgRef) {
  var context = React133.useContext(IconoirContext);
  var props = __assign132(__assign132({}, context), passedProps);
  return React133.createElement(
    "svg",
    __assign132({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React133.createElement("path", { d: "M12 5h9.4a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H12m0-14H2.6a.6.6 0 00-.6.6v12.8a.6.6 0 00.6.6H12m0-14v14", stroke: "currentColor" }),
    React133.createElement("path", { d: "M12 15a3 3 0 110-6 3 3 0 010 6zM2 17A5 5 0 002 7M22 17a5 5 0 010-10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef132 = React133.forwardRef(SvgBasketballField);
var BasketballField_default = ForwardRef132;

// node_modules/iconoir-react/dist/esm/Basketball.mjs
var React134 = __toESM(require_react(), 1);
var __assign133 = function() {
  __assign133 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign133.apply(this, arguments);
};
function SvgBasketball(passedProps, svgRef) {
  var context = React134.useContext(IconoirContext);
  var props = __assign133(__assign133({}, context), passedProps);
  return React134.createElement(
    "svg",
    __assign133({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React134.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM12 22V2M21.95 11c-6.47 2.667-12.254 2.667-19.9 0M18.572 4.462c-2.667 4.53-2.667 9.723 0 15.076M5.428 4.462c2.667 4.53 2.667 9.723 0 15.076", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef133 = React134.forwardRef(SvgBasketball);
var Basketball_default = ForwardRef133;

// node_modules/iconoir-react/dist/esm/Bathroom.mjs
var React135 = __toESM(require_react(), 1);
var __assign134 = function() {
  __assign134 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign134.apply(this, arguments);
};
function SvgBathroom(passedProps, svgRef) {
  var context = React135.useContext(IconoirContext);
  var props = __assign134(__assign134({}, context), passedProps);
  return React135.createElement(
    "svg",
    __assign134({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React135.createElement("path", { d: "M21 13v3a4 4 0 01-4 4H7a4 4 0 01-4-4v-2.4a.6.6 0 01.6-.6H21zM16 20l1 2M8 20l-1 2M21 13V7a4 4 0 00-4-4h-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React135.createElement("path", { d: "M15.4 8H8.6c-.331 0-.596-.268-.56-.598C8.186 6.075 8.863 3 12 3s3.814 3.075 3.96 4.402c.036.33-.229.598-.56.598z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef134 = React135.forwardRef(SvgBathroom);
var Bathroom_default = ForwardRef134;

// node_modules/iconoir-react/dist/esm/Battery25.mjs
var React136 = __toESM(require_react(), 1);
var __assign135 = function() {
  __assign135 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign135.apply(this, arguments);
};
function SvgBattery25(passedProps, svgRef) {
  var context = React136.useContext(IconoirContext);
  var props = __assign135(__assign135({}, context), passedProps);
  return React136.createElement(
    "svg",
    __assign135({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React136.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React136.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React136.createElement("path", { d: "M4 14.4V9.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef135 = React136.forwardRef(SvgBattery25);
var Battery25_default = ForwardRef135;

// node_modules/iconoir-react/dist/esm/Battery50.mjs
var React137 = __toESM(require_react(), 1);
var __assign136 = function() {
  __assign136 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign136.apply(this, arguments);
};
function SvgBattery50(passedProps, svgRef) {
  var context = React137.useContext(IconoirContext);
  var props = __assign136(__assign136({}, context), passedProps);
  return React137.createElement(
    "svg",
    __assign136({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React137.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React137.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React137.createElement("path", { d: "M4 14.4V9.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef136 = React137.forwardRef(SvgBattery50);
var Battery50_default = ForwardRef136;

// node_modules/iconoir-react/dist/esm/Battery75.mjs
var React138 = __toESM(require_react(), 1);
var __assign137 = function() {
  __assign137 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign137.apply(this, arguments);
};
function SvgBattery75(passedProps, svgRef) {
  var context = React138.useContext(IconoirContext);
  var props = __assign137(__assign137({}, context), passedProps);
  return React138.createElement(
    "svg",
    __assign137({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React138.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React138.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React138.createElement("path", { d: "M4 14.4V9.6a.6.6 0 01.6-.6h8.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef137 = React138.forwardRef(SvgBattery75);
var Battery75_default = ForwardRef137;

// node_modules/iconoir-react/dist/esm/BatteryCharging.mjs
var React139 = __toESM(require_react(), 1);
var __assign138 = function() {
  __assign138 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign138.apply(this, arguments);
};
function SvgBatteryCharging(passedProps, svgRef) {
  var context = React139.useContext(IconoirContext);
  var props = __assign138(__assign138({}, context), passedProps);
  return React139.createElement(
    "svg",
    __assign138({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React139.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React139.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React139.createElement("path", { d: "M10.167 9L8.5 12h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef138 = React139.forwardRef(SvgBatteryCharging);
var BatteryCharging_default = ForwardRef138;

// node_modules/iconoir-react/dist/esm/BatteryEmpty.mjs
var React140 = __toESM(require_react(), 1);
var __assign139 = function() {
  __assign139 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign139.apply(this, arguments);
};
function SvgBatteryEmpty(passedProps, svgRef) {
  var context = React140.useContext(IconoirContext);
  var props = __assign139(__assign139({}, context), passedProps);
  return React140.createElement(
    "svg",
    __assign139({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React140.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React140.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" })
  );
}
var ForwardRef139 = React140.forwardRef(SvgBatteryEmpty);
var BatteryEmpty_default = ForwardRef139;

// node_modules/iconoir-react/dist/esm/BatteryFull.mjs
var React141 = __toESM(require_react(), 1);
var __assign140 = function() {
  __assign140 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign140.apply(this, arguments);
};
function SvgBatteryFull(passedProps, svgRef) {
  var context = React141.useContext(IconoirContext);
  var props = __assign140(__assign140({}, context), passedProps);
  return React141.createElement(
    "svg",
    __assign140({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React141.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React141.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React141.createElement("path", { d: "M4 14.4V9.6a.6.6 0 01.6-.6h11.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef140 = React141.forwardRef(SvgBatteryFull);
var BatteryFull_default = ForwardRef140;

// node_modules/iconoir-react/dist/esm/BatteryIndicator.mjs
var React142 = __toESM(require_react(), 1);
var __assign141 = function() {
  __assign141 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign141.apply(this, arguments);
};
function SvgBatteryIndicator(passedProps, svgRef) {
  var context = React142.useContext(IconoirContext);
  var props = __assign141(__assign141({}, context), passedProps);
  return React142.createElement(
    "svg",
    __assign141({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React142.createElement("path", { d: "M14 13h4M6 13h2m2 0H8m0 0v-2m0 2v2M6 7H2.6a.6.6 0 00-.6.6v10.8a.6.6 0 00.6.6h18.8a.6.6 0 00.6-.6V7.6a.6.6 0 00-.6-.6H18M6 7V5h2v2M6 7h2m0 0h8m0 0V5h2v2m-2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef141 = React142.forwardRef(SvgBatteryIndicator);
var BatteryIndicator_default = ForwardRef141;

// node_modules/iconoir-react/dist/esm/BatteryWarning.mjs
var React143 = __toESM(require_react(), 1);
var __assign142 = function() {
  __assign142 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign142.apply(this, arguments);
};
function SvgBatteryWarning(passedProps, svgRef) {
  var context = React143.useContext(IconoirContext);
  var props = __assign142(__assign142({}, context), passedProps);
  return React143.createElement(
    "svg",
    __assign142({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React143.createElement("path", { d: "M23 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React143.createElement("path", { d: "M1 16V8a2 2 0 012-2h15a2 2 0 012 2v8a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React143.createElement("path", { d: "M10.5 9v2M10.5 15.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef142 = React143.forwardRef(SvgBatteryWarning);
var BatteryWarning_default = ForwardRef142;

// node_modules/iconoir-react/dist/esm/Bbq.mjs
var React144 = __toESM(require_react(), 1);
var __assign143 = function() {
  __assign143 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign143.apply(this, arguments);
};
function SvgBbq(passedProps, svgRef) {
  var context = React144.useContext(IconoirContext);
  var props = __assign143(__assign143({}, context), passedProps);
  return React144.createElement(
    "svg",
    __assign143({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React144.createElement("path", { d: "M8.5 14.5L5 22M8 6s1-1.061 1-2c0-1.333-1-2-1-2M12 6s1-1.061 1-2c0-1.333-1-2-1-2M16 6s1-1.061 1-2c0-1.333-1-2-1-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React144.createElement("path", { d: "M16.5 17.5h-9", stroke: "currentColor", strokeLinejoin: "round" }),
    React144.createElement("path", { d: "M15.5 14.5l2.1 4.5M18.5 22a1.5 1.5 0 100-3 1.5 1.5 0 000 3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React144.createElement("path", { d: "M12 15a7 7 0 006.975-6.4.563.563 0 00-.575-.6H5.6a.563.563 0 00-.575.6A7 7 0 0012 15z", stroke: "currentColor" })
  );
}
var ForwardRef143 = React144.forwardRef(SvgBbq);
var Bbq_default = ForwardRef143;

// node_modules/iconoir-react/dist/esm/BeachBagBig.mjs
var React145 = __toESM(require_react(), 1);
var __assign144 = function() {
  __assign144 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign144.apply(this, arguments);
};
function SvgBeachBagBig(passedProps, svgRef) {
  var context = React145.useContext(IconoirContext);
  var props = __assign144(__assign144({}, context), passedProps);
  return React145.createElement(
    "svg",
    __assign144({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React145.createElement("path", { d: "M2.77 12l-.633-3.287A.6.6 0 012.727 8h18.547a.6.6 0 01.589.713L21.23 12M2.769 12h18.462M2.769 12l.616 4m17.846-4l-.616 4m0 0l-.537 3.491a.6.6 0 01-.593.509H4.515a.6.6 0 01-.593-.509L3.385 16m17.23 0H3.385M5 8V6a2 2 0 012-2h10a2 2 0 012 2v2", stroke: "currentColor" })
  );
}
var ForwardRef144 = React145.forwardRef(SvgBeachBagBig);
var BeachBagBig_default = ForwardRef144;

// node_modules/iconoir-react/dist/esm/BeachBag.mjs
var React146 = __toESM(require_react(), 1);
var __assign145 = function() {
  __assign145 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign145.apply(this, arguments);
};
function SvgBeachBag(passedProps, svgRef) {
  var context = React146.useContext(IconoirContext);
  var props = __assign145(__assign145({}, context), passedProps);
  return React146.createElement(
    "svg",
    __assign145({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React146.createElement("path", { d: "M2.77 13l-.633-3.287A.6.6 0 012.727 9h18.547a.6.6 0 01.589.713L21.23 13M2.769 13h18.462M2.769 13l.616 4m17.846-4l-.616 4m0 0l-.537 3.491a.6.6 0 01-.593.509H4.515a.6.6 0 01-.593-.509L3.385 17m17.23 0H3.385", stroke: "currentColor" }),
    React146.createElement("path", { d: "M8 9V5a2 2 0 012-2h4a2 2 0 012 2v4", stroke: "currentColor" })
  );
}
var ForwardRef145 = React146.forwardRef(SvgBeachBag);
var BeachBag_default = ForwardRef145;

// node_modules/iconoir-react/dist/esm/BedReady.mjs
var React147 = __toESM(require_react(), 1);
var __assign146 = function() {
  __assign146 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign146.apply(this, arguments);
};
function SvgBedReady(passedProps, svgRef) {
  var context = React147.useContext(IconoirContext);
  var props = __assign146(__assign146({}, context), passedProps);
  return React147.createElement(
    "svg",
    __assign146({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React147.createElement("path", { d: "M21 16V4a2 2 0 00-2-2H5a2 2 0 00-2 2v16a2 2 0 002 2h9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React147.createElement("path", { d: "M3 8h8V6M21 8h-8V6M16 20l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef146 = React147.forwardRef(SvgBedReady);
var BedReady_default = ForwardRef146;

// node_modules/iconoir-react/dist/esm/Bed.mjs
var React148 = __toESM(require_react(), 1);
var __assign147 = function() {
  __assign147 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign147.apply(this, arguments);
};
function SvgBed(passedProps, svgRef) {
  var context = React148.useContext(IconoirContext);
  var props = __assign147(__assign147({}, context), passedProps);
  return React148.createElement(
    "svg",
    __assign147({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React148.createElement("path", { d: "M21 4v16a2 2 0 01-2 2H5a2 2 0 01-2-2V4a2 2 0 012-2h14a2 2 0 012 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React148.createElement("path", { d: "M3 8h8V6M21 8h-8V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef147 = React148.forwardRef(SvgBed);
var Bed_default = ForwardRef147;

// node_modules/iconoir-react/dist/esm/BehanceTag.mjs
var React149 = __toESM(require_react(), 1);
var __assign148 = function() {
  __assign148 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign148.apply(this, arguments);
};
function SvgBehanceTag(passedProps, svgRef) {
  var context = React149.useContext(IconoirContext);
  var props = __assign148(__assign148({}, context), passedProps);
  return React149.createElement(
    "svg",
    __assign148({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React149.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React149.createElement("path", { d: "M9.099 11.826c2.535 0 2.535 4.174 0 4.174H6v-4.174m3.099 0H6m3.099 0c2.535 0 2.535-3.826 0-3.826H6v3.826M15.5 11a2.5 2.5 0 00-2.5 2.5h5a2.5 2.5 0 00-2.5-2.5zM13 13.5a2.5 2.5 0 002.5 2.5c.928 0 1.49-.322 1.813-.62M17 8.5h-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef148 = React149.forwardRef(SvgBehanceTag);
var BehanceTag_default = ForwardRef148;

// node_modules/iconoir-react/dist/esm/Behance.mjs
var React150 = __toESM(require_react(), 1);
var __assign149 = function() {
  __assign149 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign149.apply(this, arguments);
};
function SvgBehance(passedProps, svgRef) {
  var context = React150.useContext(IconoirContext);
  var props = __assign149(__assign149({}, context), passedProps);
  return React150.createElement(
    "svg",
    __assign149({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React150.createElement("path", { d: "M8.197 11.217c5.07 0 5.07 6.783 0 6.783H2v-6.783m6.197 0H2m6.197 0c5.07 0 5.07-6.217 0-6.217H2v6.217M18 9c-2.21 0-4 2.015-4 4.5h8c0-2.485-1.79-4.5-4-4.5zM14 13.5c0 2.485 1.79 4.5 4 4.5 2.755 0 3.5-2 3.5-2M20.5 6h-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef149 = React150.forwardRef(SvgBehance);
var Behance_default = ForwardRef149;

// node_modules/iconoir-react/dist/esm/BellNotification.mjs
var React151 = __toESM(require_react(), 1);
var __assign150 = function() {
  __assign150 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign150.apply(this, arguments);
};
function SvgBellNotification(passedProps, svgRef) {
  var context = React151.useContext(IconoirContext);
  var props = __assign150(__assign150({}, context), passedProps);
  return React151.createElement(
    "svg",
    __assign150({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React151.createElement("path", { d: "M18.134 11C18.715 16.375 21 18 21 18H3s3-2.133 3-9.6c0-1.697.632-3.325 1.757-4.525C8.883 2.675 10.41 2 12 2c.337 0 .672.03 1 .09M19 8a3 3 0 100-6 3 3 0 000 6zM13.73 21a1.999 1.999 0 01-3.46 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef150 = React151.forwardRef(SvgBellNotification);
var BellNotification_default = ForwardRef150;

// node_modules/iconoir-react/dist/esm/BellOff.mjs
var React152 = __toESM(require_react(), 1);
var __assign151 = function() {
  __assign151 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign151.apply(this, arguments);
};
function SvgBellOff(passedProps, svgRef) {
  var context = React152.useContext(IconoirContext);
  var props = __assign151(__assign151({}, context), passedProps);
  return React152.createElement(
    "svg",
    __assign151({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React152.createElement("path", { d: "M6.27 6.5C6.093 7.11 6 7.75 6 8.4 6 15.867 3 18 3 18h15M7.757 3.875C8.883 2.675 10.41 2 12 2c1.591 0 3.117.674 4.243 1.875C17.368 5.075 18 6.703 18 8.4c0 7.467 3 9.6 3 9.6M13.73 21a1.999 1.999 0 01-3.46 0M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef151 = React152.forwardRef(SvgBellOff);
var BellOff_default = ForwardRef151;

// node_modules/iconoir-react/dist/esm/Bell.mjs
var React153 = __toESM(require_react(), 1);
var __assign152 = function() {
  __assign152 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign152.apply(this, arguments);
};
function SvgBell(passedProps, svgRef) {
  var context = React153.useContext(IconoirContext);
  var props = __assign152(__assign152({}, context), passedProps);
  return React153.createElement(
    "svg",
    __assign152({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React153.createElement("path", { d: "M18 8.4c0-1.697-.632-3.325-1.757-4.525C15.117 2.675 13.59 2 12 2c-1.591 0-3.117.674-4.243 1.875C6.632 5.075 6 6.703 6 8.4 6 15.867 3 18 3 18h18s-3-2.133-3-9.6zM13.73 21a1.999 1.999 0 01-3.46 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef152 = React153.forwardRef(SvgBell);
var Bell_default = ForwardRef152;

// node_modules/iconoir-react/dist/esm/Bicycle.mjs
var React154 = __toESM(require_react(), 1);
var __assign153 = function() {
  __assign153 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign153.apply(this, arguments);
};
function SvgBicycle(passedProps, svgRef) {
  var context = React154.useContext(IconoirContext);
  var props = __assign153(__assign153({}, context), passedProps);
  return React154.createElement(
    "svg",
    __assign153({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React154.createElement("path", { d: "M5 19a4 4 0 100-8 4 4 0 000 8zM8.5 7.5h6M19 15l-4-7.5h-.5m0 0l2-3m0 0H14m2.5 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React154.createElement("path", { d: "M5 15l3.5-7.5L12 14h3M8.5 7.5c-.333-1-1.5-3-3.5-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React154.createElement("path", { d: "M19 19a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef153 = React154.forwardRef(SvgBicycle);
var Bicycle_default = ForwardRef153;

// node_modules/iconoir-react/dist/esm/BinAdd.mjs
var React155 = __toESM(require_react(), 1);
var __assign154 = function() {
  __assign154 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign154.apply(this, arguments);
};
function SvgBinAdd(passedProps, svgRef) {
  var context = React155.useContext(IconoirContext);
  var props = __assign154(__assign154({}, context), passedProps);
  return React155.createElement(
    "svg",
    __assign154({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React155.createElement("path", { d: "M8.992 14h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React155.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" })
  );
}
var ForwardRef154 = React155.forwardRef(SvgBinAdd);
var BinAdd_default = ForwardRef154;

// node_modules/iconoir-react/dist/esm/BinFull.mjs
var React156 = __toESM(require_react(), 1);
var __assign155 = function() {
  __assign155 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign155.apply(this, arguments);
};
function SvgBinFull(passedProps, svgRef) {
  var context = React156.useContext(IconoirContext);
  var props = __assign155(__assign155({}, context), passedProps);
  return React156.createElement(
    "svg",
    __assign155({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React156.createElement("path", { d: "M19.262 17.038l1.676-12.575a.6.6 0 00-.372-.636L16 2h-5.5l-.682 1.5L5 2 3.21 3.79a.6.6 0 00-.17.504l1.698 12.744a4 4 0 001.98 2.944l.32.183a10 10 0 009.923 0l.32-.183a4 4 0 001.98-2.944zM16 2l-2 5M9 6.5l.818-3M3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" })
  );
}
var ForwardRef155 = React156.forwardRef(SvgBinFull);
var BinFull_default = ForwardRef155;

// node_modules/iconoir-react/dist/esm/BinHalf.mjs
var React157 = __toESM(require_react(), 1);
var __assign156 = function() {
  __assign156 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign156.apply(this, arguments);
};
function SvgBinHalf(passedProps, svgRef) {
  var context = React157.useContext(IconoirContext);
  var props = __assign156(__assign156({}, context), passedProps);
  return React157.createElement(
    "svg",
    __assign156({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React157.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0M11 18l3-3.5m0 0l5 2.5m-5-2.5l6-3", stroke: "currentColor" }),
    React157.createElement("path", { d: "M4.5 16l3.236-.462a.6.6 0 01.469.133L11 18l3 3M8 15.5l2.615-3.05a.6.6 0 01.84-.071L14 14.5", stroke: "currentColor" })
  );
}
var ForwardRef156 = React157.forwardRef(SvgBinHalf);
var BinHalf_default = ForwardRef156;

// node_modules/iconoir-react/dist/esm/BinMinus.mjs
var React158 = __toESM(require_react(), 1);
var __assign157 = function() {
  __assign157 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign157.apply(this, arguments);
};
function SvgBinMinus(passedProps, svgRef) {
  var context = React158.useContext(IconoirContext);
  var props = __assign157(__assign157({}, context), passedProps);
  return React158.createElement(
    "svg",
    __assign157({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React158.createElement("path", { d: "M8.992 13h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React158.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" })
  );
}
var ForwardRef157 = React158.forwardRef(SvgBinMinus);
var BinMinus_default = ForwardRef157;

// node_modules/iconoir-react/dist/esm/Bin.mjs
var React159 = __toESM(require_react(), 1);
var __assign158 = function() {
  __assign158 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign158.apply(this, arguments);
};
function SvgBin(passedProps, svgRef) {
  var context = React159.useContext(IconoirContext);
  var props = __assign158(__assign158({}, context), passedProps);
  return React159.createElement(
    "svg",
    __assign158({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React159.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" })
  );
}
var ForwardRef158 = React159.forwardRef(SvgBin);
var Bin_default = ForwardRef158;

// node_modules/iconoir-react/dist/esm/Binocular.mjs
var React160 = __toESM(require_react(), 1);
var __assign159 = function() {
  __assign159 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign159.apply(this, arguments);
};
function SvgBinocular(passedProps, svgRef) {
  var context = React160.useContext(IconoirContext);
  var props = __assign159(__assign159({}, context), passedProps);
  return React160.createElement(
    "svg",
    __assign159({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React160.createElement("path", { d: "M21.5 14L20 9s-.5-2-2.5-2c0 0 0-2-2-2s-2 2-2 2h-3s0-2-2-2-2 2-2 2C4.5 7 4 9 4 9l-1.5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React160.createElement("path", { d: "M6 20a4 4 0 100-8 4 4 0 000 8zM18 20a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React160.createElement("path", { d: "M12 16a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef159 = React160.forwardRef(SvgBinocular);
var Binocular_default = ForwardRef159;

// node_modules/iconoir-react/dist/esm/BirthdayCake.mjs
var React161 = __toESM(require_react(), 1);
var __assign160 = function() {
  __assign160 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign160.apply(this, arguments);
};
function SvgBirthdayCake(passedProps, svgRef) {
  var context = React161.useContext(IconoirContext);
  var props = __assign160(__assign160({}, context), passedProps);
  return React161.createElement(
    "svg",
    __assign160({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React161.createElement("path", { d: "M4 16.5V20a2 2 0 002 2h12a2 2 0 002-2v-3.5M3 14v-1a2 2 0 012-2h14a2 2 0 012 2v1M12 8v3M12 8c1.262 0 2-.968 2-2.625S12 2 12 2s-2 1.718-2 3.375S10.738 8 12 8zM9 14a3 3 0 11-6 0M15 14a3 3 0 11-6 0M21 14a3 3 0 11-6 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef160 = React161.forwardRef(SvgBirthdayCake);
var BirthdayCake_default = ForwardRef160;

// node_modules/iconoir-react/dist/esm/Bishop.mjs
var React162 = __toESM(require_react(), 1);
var __assign161 = function() {
  __assign161 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign161.apply(this, arguments);
};
function SvgBishop(passedProps, svgRef) {
  var context = React162.useContext(IconoirContext);
  var props = __assign161(__assign161({}, context), passedProps);
  return React162.createElement(
    "svg",
    __assign161({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React162.createElement("path", { d: "M7 17h10M9 12h6M12 3V2M11.554 3.582c-.921 1.251-2.916 4.243-2.497 6.168C9.451 11.558 11.02 12 12 12c.981 0 2.549-.442 2.943-2.25.42-1.925-1.576-4.917-2.497-6.168a.548.548 0 00-.892 0zM17.8 22H6.2a.617.617 0 01-.5-.97c1.316-1.866 4.063-5.986 4.493-8.434.057-.326.326-.596.657-.596h2.3c.331 0 .6.27.657.596.43 2.448 3.177 6.568 4.492 8.434a.617.617 0 01-.499.97z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef161 = React162.forwardRef(SvgBishop);
var Bishop_default = ForwardRef161;

// node_modules/iconoir-react/dist/esm/Bitbucket.mjs
var React163 = __toESM(require_react(), 1);
var __assign162 = function() {
  __assign162 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign162.apply(this, arguments);
};
function SvgBitbucket(passedProps, svgRef) {
  var context = React163.useContext(IconoirContext);
  var props = __assign162(__assign162({}, context), passedProps);
  return React163.createElement(
    "svg",
    __assign162({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React163.createElement("path", { d: "M20.916 4.674l-1.85 14.8a.6.6 0 01-.596.526H5.53a.6.6 0 01-.596-.526l-1.85-14.8A.6.6 0 013.68 4h16.64a.6.6 0 01.596.674z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React163.createElement("path", { d: "M16.75 7.75l-.938 7.97a.6.6 0 01-.595.53H8.784a.6.6 0 01-.596-.53l-.859-7.3a.6.6 0 01.596-.67h8.825zm0 0h3.75", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef162 = React163.forwardRef(SvgBitbucket);
var Bitbucket_default = ForwardRef162;

// node_modules/iconoir-react/dist/esm/BitcoinCircle.mjs
var React164 = __toESM(require_react(), 1);
var __assign163 = function() {
  __assign163 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign163.apply(this, arguments);
};
function SvgBitcoinCircle(passedProps, svgRef) {
  var context = React164.useContext(IconoirContext);
  var props = __assign163(__assign163({}, context), passedProps);
  return React164.createElement(
    "svg",
    __assign163({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React164.createElement("path", { d: "M9 12v4.394c0 .332.269.6.6.602 2.966.018 5.4.076 5.4-2.496 0-2.744-3-2.5-6-2.5zm0 0V7.606c0-.331.269-.6.6-.602C12.566 6.986 15 6.928 15 9.5c0 2.744-3 2.5-6 2.5z", stroke: "currentColor" }),
    React164.createElement("path", { d: "M12 7V5.5M12 18.5V17M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef163 = React164.forwardRef(SvgBitcoinCircle);
var BitcoinCircle_default = ForwardRef163;

// node_modules/iconoir-react/dist/esm/BitcoinRotateOut.mjs
var React165 = __toESM(require_react(), 1);
var __assign164 = function() {
  __assign164 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign164.apply(this, arguments);
};
function SvgBitcoinRotateOut(passedProps, svgRef) {
  var context = React165.useContext(IconoirContext);
  var props = __assign164(__assign164({}, context), passedProps);
  return React165.createElement(
    "svg",
    __assign164({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React165.createElement("path", { d: "M21.168 8A10.003 10.003 0 0012 2C6.815 2 2.55 5.947 2.05 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React165.createElement("path", { d: "M18 8h3.4a.6.6 0 00.6-.6V4M2.881 16c1.544 3.532 5.068 6 9.168 6 5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React165.createElement("path", { d: "M6.05 16h-3.4a.6.6 0 00-.6.6V20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React165.createElement("path", { d: "M9 12v4.394c0 .332.269.6.6.602 2.966.018 5.4.076 5.4-2.496 0-2.744-3-2.5-6-2.5zm0 0V7.606c0-.331.269-.6.6-.602C12.566 6.986 15 6.928 15 9.5c0 2.744-3 2.5-6 2.5z", stroke: "currentColor" }),
    React165.createElement("path", { d: "M12 7V5.5M12 18.5V17", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef164 = React165.forwardRef(SvgBitcoinRotateOut);
var BitcoinRotateOut_default = ForwardRef164;

// node_modules/iconoir-react/dist/esm/BluetoothTag.mjs
var React166 = __toESM(require_react(), 1);
var __assign165 = function() {
  __assign165 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign165.apply(this, arguments);
};
function SvgBluetoothTag(passedProps, svgRef) {
  var context = React166.useContext(IconoirContext);
  var props = __assign165(__assign165({}, context), passedProps);
  return React166.createElement(
    "svg",
    __assign165({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React166.createElement("path", { d: "M9 9.6l6 5.1-3.143 3.3V6L15 9.3l-6 5.1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React166.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" })
  );
}
var ForwardRef165 = React166.forwardRef(SvgBluetoothTag);
var BluetoothTag_default = ForwardRef165;

// node_modules/iconoir-react/dist/esm/Bluetooth.mjs
var React167 = __toESM(require_react(), 1);
var __assign166 = function() {
  __assign166 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign166.apply(this, arguments);
};
function SvgBluetooth(passedProps, svgRef) {
  var context = React167.useContext(IconoirContext);
  var props = __assign166(__assign166({}, context), passedProps);
  return React167.createElement(
    "svg",
    __assign166({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React167.createElement("path", { d: "M6.75 8l10.5 8.5-5.5 5.5V2l5.5 5.5L6.75 16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef166 = React167.forwardRef(SvgBluetooth);
var Bluetooth_default = ForwardRef166;

// node_modules/iconoir-react/dist/esm/BoldSquare.mjs
var React168 = __toESM(require_react(), 1);
var __assign167 = function() {
  __assign167 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign167.apply(this, arguments);
};
function SvgBoldSquare(passedProps, svgRef) {
  var context = React168.useContext(IconoirContext);
  var props = __assign167(__assign167({}, context), passedProps);
  return React168.createElement(
    "svg",
    __assign167({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React168.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React168.createElement("path", { d: "M12 12H9m3 0s2.5 0 2.5-2.5S12 7 12 7s0 0 0 0H9.6a.6.6 0 00-.6.6V12m3 0s3 0 3 2.75-3 2.75-3 2.75 0 0 0 0H9.6a.6.6 0 01-.6-.6V12", stroke: "currentColor" })
  );
}
var ForwardRef167 = React168.forwardRef(SvgBoldSquare);
var BoldSquare_default = ForwardRef167;

// node_modules/iconoir-react/dist/esm/Bold.mjs
var React169 = __toESM(require_react(), 1);
var __assign168 = function() {
  __assign168 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign168.apply(this, arguments);
};
function SvgBold(passedProps, svgRef) {
  var context = React169.useContext(IconoirContext);
  var props = __assign168(__assign168({}, context), passedProps);
  return React169.createElement(
    "svg",
    __assign168({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React169.createElement("path", { d: "M12 11.667H8m4 0s3.333 0 3.333-3.334C15.333 5 12 5 12 5s0 0 0 0H8.6a.6.6 0 00-.6.6v6.067m4 0s4 0 4 3.666C16 19 12 19 12 19s0 0 0 0H8.6a.6.6 0 01-.6-.6v-6.733", stroke: "currentColor" })
  );
}
var ForwardRef168 = React169.forwardRef(SvgBold);
var Bold_default = ForwardRef168;

// node_modules/iconoir-react/dist/esm/Bonfire.mjs
var React170 = __toESM(require_react(), 1);
var __assign169 = function() {
  __assign169 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign169.apply(this, arguments);
};
function SvgBonfire(passedProps, svgRef) {
  var context = React170.useContext(IconoirContext);
  var props = __assign169(__assign169({}, context), passedProps);
  return React170.createElement(
    "svg",
    __assign169({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React170.createElement("path", { d: "M9 14c0 1.61 1.377 2 3.076 2 2.89 0 3.845-1.667 1.922-5-2.691 3-3.076-1.667-2.691-3C10.153 10 9 11.879 9 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React170.createElement("path", { d: "M12 16c3.156 0 5-2.098 5-5.688S12 3 12 3s-5 3.723-5 7.313S8.844 16 12 16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React170.createElement("path", { d: "M4.273 21.07l15.454-4.14M4.273 16.93L12 19M19.727 21.07l-3.863-1.035", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef169 = React170.forwardRef(SvgBonfire);
var Bonfire_default = ForwardRef169;

// node_modules/iconoir-react/dist/esm/BookStack.mjs
var React171 = __toESM(require_react(), 1);
var __assign170 = function() {
  __assign170 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign170.apply(this, arguments);
};
function SvgBookStack(passedProps, svgRef) {
  var context = React171.useContext(IconoirContext);
  var props = __assign170(__assign170({}, context), passedProps);
  return React171.createElement(
    "svg",
    __assign170({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React171.createElement("path", { d: "M5 19.5V5a2 2 0 012-2h11.4a.6.6 0 01.6.6V21M9 7h6M6.5 15H19M6.5 18H19M6.5 21H19", stroke: "currentColor", strokeLinecap: "round" }),
    React171.createElement("path", { d: "M6.5 18c-1 0-1.5-.672-1.5-1.5S5.5 15 6.5 15M6.5 21c-1 0-1.5-.672-1.5-1.5S5.5 18 6.5 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef170 = React171.forwardRef(SvgBookStack);
var BookStack_default = ForwardRef170;

// node_modules/iconoir-react/dist/esm/Book.mjs
var React172 = __toESM(require_react(), 1);
var __assign171 = function() {
  __assign171 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign171.apply(this, arguments);
};
function SvgBook(passedProps, svgRef) {
  var context = React172.useContext(IconoirContext);
  var props = __assign171(__assign171({}, context), passedProps);
  return React172.createElement(
    "svg",
    __assign171({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React172.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114M6 17h14M6 21h14", stroke: "currentColor", strokeLinecap: "round" }),
    React172.createElement("path", { d: "M6 21a2 2 0 110-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React172.createElement("path", { d: "M9 7h6", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef171 = React172.forwardRef(SvgBook);
var Book_default = ForwardRef171;

// node_modules/iconoir-react/dist/esm/BookmarkBook.mjs
var React173 = __toESM(require_react(), 1);
var __assign172 = function() {
  __assign172 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign172.apply(this, arguments);
};
function SvgBookmarkBook(passedProps, svgRef) {
  var context = React173.useContext(IconoirContext);
  var props = __assign172(__assign172({}, context), passedProps);
  return React173.createElement(
    "svg",
    __assign172({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React173.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114", stroke: "currentColor", strokeLinecap: "round" }),
    React173.createElement("path", { d: "M8 3v8l2.5-1.6L13 11V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React173.createElement("path", { d: "M6 17h14M6 21h14", stroke: "currentColor", strokeLinecap: "round" }),
    React173.createElement("path", { d: "M6 21a2 2 0 110-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef172 = React173.forwardRef(SvgBookmarkBook);
var BookmarkBook_default = ForwardRef172;

// node_modules/iconoir-react/dist/esm/BookmarkCircle.mjs
var React174 = __toESM(require_react(), 1);
var __assign173 = function() {
  __assign173 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign173.apply(this, arguments);
};
function SvgBookmarkCircle(passedProps, svgRef) {
  var context = React174.useContext(IconoirContext);
  var props = __assign173(__assign173({}, context), passedProps);
  return React174.createElement(
    "svg",
    __assign173({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React174.createElement("path", { d: "M9 16v-6a2 2 0 012-2h2a2 2 0 012 2v6l-1.89-1.26a2 2 0 00-2.22 0L9 16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React174.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef173 = React174.forwardRef(SvgBookmarkCircle);
var BookmarkCircle_default = ForwardRef173;

// node_modules/iconoir-react/dist/esm/BookmarkEmpty.mjs
var React175 = __toESM(require_react(), 1);
var __assign174 = function() {
  __assign174 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign174.apply(this, arguments);
};
function SvgBookmarkEmpty(passedProps, svgRef) {
  var context = React175.useContext(IconoirContext);
  var props = __assign174(__assign174({}, context), passedProps);
  return React175.createElement(
    "svg",
    __assign174({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React175.createElement("path", { d: "M5 21V5a2 2 0 012-2h10a2 2 0 012 2v16l-5.918-3.805a2 2 0 00-2.164 0L5 21z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef174 = React175.forwardRef(SvgBookmarkEmpty);
var BookmarkEmpty_default = ForwardRef174;

// node_modules/iconoir-react/dist/esm/BorderBl.mjs
var React176 = __toESM(require_react(), 1);
var __assign175 = function() {
  __assign175 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign175.apply(this, arguments);
};
function SvgBorderBl(passedProps, svgRef) {
  var context = React176.useContext(IconoirContext);
  var props = __assign175(__assign175({}, context), passedProps);
  return React176.createElement(
    "svg",
    __assign175({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React176.createElement("path", { d: "M4 4v16h16M20.01 16l-.011.01M20.01 12l-.011.01M20.01 8l-.011.01M20.01 4l-.011.01M8.01 4l-.011.01M12.01 4l-.011.01M16.01 4l-.011.01", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef175 = React176.forwardRef(SvgBorderBl);
var BorderBl_default = ForwardRef175;

// node_modules/iconoir-react/dist/esm/BorderBottom.mjs
var React177 = __toESM(require_react(), 1);
var __assign176 = function() {
  __assign176 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign176.apply(this, arguments);
};
function SvgBorderBottom(passedProps, svgRef) {
  var context = React177.useContext(IconoirContext);
  var props = __assign176(__assign176({}, context), passedProps);
  return React177.createElement(
    "svg",
    __assign176({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React177.createElement("path", { d: "M20 4.01l.01-.011M16 4.01l.01-.011M12 4.01l.01-.011M8 4.01l.01-.011M4 4.01l.01-.011M4 8.01l.01-.011M4 12.01l.01-.011M12 12.01l.01-.011M4 16.01l.01-.011M20 8.01l.01-.011M20 12.01l.01-.011M20 16.01l.01-.011M4 20h16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef176 = React177.forwardRef(SvgBorderBottom);
var BorderBottom_default = ForwardRef176;

// node_modules/iconoir-react/dist/esm/BorderBr.mjs
var React178 = __toESM(require_react(), 1);
var __assign177 = function() {
  __assign177 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign177.apply(this, arguments);
};
function SvgBorderBr(passedProps, svgRef) {
  var context = React178.useContext(IconoirContext);
  var props = __assign177(__assign177({}, context), passedProps);
  return React178.createElement(
    "svg",
    __assign177({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React178.createElement("path", { d: "M20.01 4v16h-16M4 16l.011.01M4 12l.011.01M4 8l.011.01M4 4l.011.01M16 4l.011.01M12 4l.011.01M8 4l.011.01", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef177 = React178.forwardRef(SvgBorderBr);
var BorderBr_default = ForwardRef177;

// node_modules/iconoir-react/dist/esm/BorderInner.mjs
var React179 = __toESM(require_react(), 1);
var __assign178 = function() {
  __assign178 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign178.apply(this, arguments);
};
function SvgBorderInner(passedProps, svgRef) {
  var context = React179.useContext(IconoirContext);
  var props = __assign178(__assign178({}, context), passedProps);
  return React179.createElement(
    "svg",
    __assign178({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React179.createElement("path", { d: "M4 20.01l.01-.011M4 16.01l.01-.011M4 8.01l.01-.011M4 4.01l.01-.011M8 4.01l.01-.011M16 4.01l.01-.011M20 4.01l.01-.011M20 8.01l.01-.011M8 20.01l.01-.011M16 20.01l.01-.011M20 20.01l.01-.011M20 16.01l.01-.011M4 12h8m8 0h-8m0 0V4m0 8v8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef178 = React179.forwardRef(SvgBorderInner);
var BorderInner_default = ForwardRef178;

// node_modules/iconoir-react/dist/esm/BorderLeft.mjs
var React180 = __toESM(require_react(), 1);
var __assign179 = function() {
  __assign179 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign179.apply(this, arguments);
};
function SvgBorderLeft(passedProps, svgRef) {
  var context = React180.useContext(IconoirContext);
  var props = __assign179(__assign179({}, context), passedProps);
  return React180.createElement(
    "svg",
    __assign179({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React180.createElement("path", { d: "M20.01 20l-.011.01M20.01 16l-.011.01M20.01 12l-.011.01M20.01 8l-.011.01M20.01 4l-.011.01M8.01 4l-.011.01M12.01 4l-.011.01M12.01 12l-.011.01M16.01 4l-.011.01M8.01 20l-.011.01M12.01 20l-.011.01M16.01 20l-.011.01M4 4v16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef179 = React180.forwardRef(SvgBorderLeft);
var BorderLeft_default = ForwardRef179;

// node_modules/iconoir-react/dist/esm/BorderOut.mjs
var React181 = __toESM(require_react(), 1);
var __assign180 = function() {
  __assign180 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign180.apply(this, arguments);
};
function SvgBorderOut(passedProps, svgRef) {
  var context = React181.useContext(IconoirContext);
  var props = __assign180(__assign180({}, context), passedProps);
  return React181.createElement(
    "svg",
    __assign180({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React181.createElement("path", { d: "M12.01 16l-.01.011M12.01 12l-.01.011M12.01 8l-.01.011M8.01 12l-.01.011M16.01 12l-.01.011M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef180 = React181.forwardRef(SvgBorderOut);
var BorderOut_default = ForwardRef180;

// node_modules/iconoir-react/dist/esm/BorderRight.mjs
var React182 = __toESM(require_react(), 1);
var __assign181 = function() {
  __assign181 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign181.apply(this, arguments);
};
function SvgBorderRight(passedProps, svgRef) {
  var context = React182.useContext(IconoirContext);
  var props = __assign181(__assign181({}, context), passedProps);
  return React182.createElement(
    "svg",
    __assign181({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React182.createElement("path", { d: "M4 20l.01.01M4 16l.01.01M4 12l.01.01M4 8l.01.01M4 4l.01.01M16 4l.01.01M12 4l.01.01M12 12l.01.01M8 4l.01.01M16 20l.01.01M12 20l.01.01M8 20l.01.01M20.01 4v16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef181 = React182.forwardRef(SvgBorderRight);
var BorderRight_default = ForwardRef181;

// node_modules/iconoir-react/dist/esm/BorderTl.mjs
var React183 = __toESM(require_react(), 1);
var __assign182 = function() {
  __assign182 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign182.apply(this, arguments);
};
function SvgBorderTl(passedProps, svgRef) {
  var context = React183.useContext(IconoirContext);
  var props = __assign182(__assign182({}, context), passedProps);
  return React183.createElement(
    "svg",
    __assign182({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React183.createElement("path", { d: "M8 20.01l.01-.011M12 20.01l.01-.011M16 20.01l.01-.011M20 20.01l.01-.011M20 16.01l.01-.011M20 12.01l.01-.011M20 8.01l.01-.011M4 20V4h16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef182 = React183.forwardRef(SvgBorderTl);
var BorderTl_default = ForwardRef182;

// node_modules/iconoir-react/dist/esm/BorderTop.mjs
var React184 = __toESM(require_react(), 1);
var __assign183 = function() {
  __assign183 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign183.apply(this, arguments);
};
function SvgBorderTop(passedProps, svgRef) {
  var context = React184.useContext(IconoirContext);
  var props = __assign183(__assign183({}, context), passedProps);
  return React184.createElement(
    "svg",
    __assign183({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React184.createElement("path", { d: "M20 20.01l.01-.011M16 20.01l.01-.011M12 20.01l.01-.011M8 20.01l.01-.011M4 20.01l.01-.011M4 8.01l.01-.011M4 12.01l.01-.011M12 12.01l.01-.011M4 16.01l.01-.011M20 8.01l.01-.011M20 12.01l.01-.011M20 16.01l.01-.011M4 4h16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef183 = React184.forwardRef(SvgBorderTop);
var BorderTop_default = ForwardRef183;

// node_modules/iconoir-react/dist/esm/BorderTr.mjs
var React185 = __toESM(require_react(), 1);
var __assign184 = function() {
  __assign184 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign184.apply(this, arguments);
};
function SvgBorderTr(passedProps, svgRef) {
  var context = React185.useContext(IconoirContext);
  var props = __assign184(__assign184({}, context), passedProps);
  return React185.createElement(
    "svg",
    __assign184({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React185.createElement("path", { d: "M20.01 20V4h-16M4 8l.01-.01M4 12l.01-.01M4 16l.01-.01M4 20l.01-.01M16 20l.01-.01M12 20l.01-.01M8 20l.01-.01", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef184 = React185.forwardRef(SvgBorderTr);
var BorderTr_default = ForwardRef184;

// node_modules/iconoir-react/dist/esm/BounceLeft.mjs
var React186 = __toESM(require_react(), 1);
var __assign185 = function() {
  __assign185 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign185.apply(this, arguments);
};
function SvgBounceLeft(passedProps, svgRef) {
  var context = React186.useContext(IconoirContext);
  var props = __assign185(__assign185({}, context), passedProps);
  return React186.createElement(
    "svg",
    __assign185({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React186.createElement("path", { d: "M6 7a2 2 0 110-4 2 2 0 010 4zM21 15.5c-3-1-5.5-.5-8 4.5-.5-3-2-7.5-3.5-10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef185 = React186.forwardRef(SvgBounceLeft);
var BounceLeft_default = ForwardRef185;

// node_modules/iconoir-react/dist/esm/BounceRight.mjs
var React187 = __toESM(require_react(), 1);
var __assign186 = function() {
  __assign186 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign186.apply(this, arguments);
};
function SvgBounceRight(passedProps, svgRef) {
  var context = React187.useContext(IconoirContext);
  var props = __assign186(__assign186({}, context), passedProps);
  return React187.createElement(
    "svg",
    __assign186({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React187.createElement("path", { d: "M19 7a2 2 0 110-4 2 2 0 010 4zM4 15.5c3-1 5.5-.5 8 4.5.5-3 2-7.5 3.5-10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef186 = React187.forwardRef(SvgBounceRight);
var BounceRight_default = ForwardRef186;

// node_modules/iconoir-react/dist/esm/BowlingBall.mjs
var React188 = __toESM(require_react(), 1);
var __assign187 = function() {
  __assign187 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign187.apply(this, arguments);
};
function SvgBowlingBall(passedProps, svgRef) {
  var context = React188.useContext(IconoirContext);
  var props = __assign187(__assign187({}, context), passedProps);
  return React188.createElement(
    "svg",
    __assign187({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React188.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React188.createElement("path", { d: "M11.5 8a.5.5 0 100-1 .5.5 0 000 1zM7.5 11a.5.5 0 100-1 .5.5 0 000 1zM11.5 13a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef187 = React188.forwardRef(SvgBowlingBall);
var BowlingBall_default = ForwardRef187;

// node_modules/iconoir-react/dist/esm/BoxIso.mjs
var React189 = __toESM(require_react(), 1);
var __assign188 = function() {
  __assign188 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign188.apply(this, arguments);
};
function SvgBoxIso(passedProps, svgRef) {
  var context = React189.useContext(IconoirContext);
  var props = __assign188(__assign188({}, context), passedProps);
  return React189.createElement(
    "svg",
    __assign188({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React189.createElement("path", { d: "M2.695 7.185l9 4 .61-1.37-9-4-.61 1.37zM12.75 21.5v-11h-1.5v11h1.5zm-.445-10.315l9-4-.61-1.37-9 4 .61 1.37z", fill: "currentColor" }),
    React189.createElement("path", { d: "M3 17.11V6.89a.6.6 0 01.356-.548l8.4-3.734a.6.6 0 01.488 0l8.4 3.734A.6.6 0 0121 6.89v10.22a.6.6 0 01-.356.548l-8.4 3.734a.6.6 0 01-.488 0l-8.4-3.734A.6.6 0 013 17.11z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React189.createElement("path", { d: "M7.5 4.5l8.644 3.842a.6.6 0 01.356.548v3.61", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef188 = React189.forwardRef(SvgBoxIso);
var BoxIso_default = ForwardRef188;

// node_modules/iconoir-react/dist/esm/Box.mjs
var React190 = __toESM(require_react(), 1);
var __assign189 = function() {
  __assign189 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign189.apply(this, arguments);
};
function SvgBox(passedProps, svgRef) {
  var context = React190.useContext(IconoirContext);
  var props = __assign189(__assign189({}, context), passedProps);
  return React190.createElement(
    "svg",
    __assign189({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React190.createElement("path", { d: "M10 12h4M3 3h18M21 7v13.4a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef189 = React190.forwardRef(SvgBox);
var Box_default = ForwardRef189;

// node_modules/iconoir-react/dist/esm/BoxingGlove.mjs
var React191 = __toESM(require_react(), 1);
var __assign190 = function() {
  __assign190 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign190.apply(this, arguments);
};
function SvgBoxingGlove(passedProps, svgRef) {
  var context = React191.useContext(IconoirContext);
  var props = __assign190(__assign190({}, context), passedProps);
  return React191.createElement(
    "svg",
    __assign190({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React191.createElement("path", { d: "M8.489 17.727h9.867m-9.867 0V21h9.867v-3.273m-9.867 0C5.2 15.546 3.556 10.091 4.104 8.455c.438-1.31 2.375-.91 3.289-.546C7.393 4.091 9.037 3 13.423 3 17.806 3 20 4.09 20 9.545c0 4.364-1.096 7.273-1.644 8.182", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React191.createElement("path", { d: "M7.393 7.91C7.758 8.272 8.818 9 10.133 9h4.934M7.393 7.91c0 3.817 1.644 4.363 2.74 4.363", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef190 = React191.forwardRef(SvgBoxingGlove);
var BoxingGlove_default = ForwardRef190;

// node_modules/iconoir-react/dist/esm/BrainElectricity.mjs
var React192 = __toESM(require_react(), 1);
var __assign191 = function() {
  __assign191 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign191.apply(this, arguments);
};
function SvgBrainElectricity(passedProps, svgRef) {
  var context = React192.useContext(IconoirContext);
  var props = __assign191(__assign191({}, context), passedProps);
  return React192.createElement(
    "svg",
    __assign191({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React192.createElement("path", { d: "M7 14a3 3 0 101 5.83M4.264 15.605a4 4 0 01-.874-6.636M3.42 8.888A2.5 2.5 0 017 5.5M7.238 5.565A2.5 2.5 0 1112 4.5V20M8 20a2 2 0 104 0M12 7a3 3 0 003 3M20.61 8.969A3.99 3.99 0 0122 12c0 .703-.181 1.364-.5 1.938M20.58 8.888A2.5 2.5 0 0017 5.5M12 4.5a2.5 2.5 0 114.762 1.065M14 22a2 2 0 01-2-2M18.667 16L17 19h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef191 = React192.forwardRef(SvgBrainElectricity);
var BrainElectricity_default = ForwardRef191;

// node_modules/iconoir-react/dist/esm/BrainResearch.mjs
var React193 = __toESM(require_react(), 1);
var __assign192 = function() {
  __assign192 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign192.apply(this, arguments);
};
function SvgBrainResearch(passedProps, svgRef) {
  var context = React193.useContext(IconoirContext);
  var props = __assign192(__assign192({}, context), passedProps);
  return React193.createElement(
    "svg",
    __assign192({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React193.createElement("path", { d: "M7 14a3 3 0 101 5.83M4.264 15.605a4 4 0 01-.874-6.636M3.42 8.888A2.5 2.5 0 017 5.5M7.238 5.565A2.5 2.5 0 1112 4.5V20M8 20a2 2 0 104 0M12 7a3 3 0 003 3M20.61 8.969A3.99 3.99 0 0122 12c0 .703-.181 1.364-.5 1.938M20.58 8.888A2.5 2.5 0 0017 5.5M12 4.5a2.5 2.5 0 114.762 1.065M14 22a2 2 0 01-2-2M20.5 20.5L22 22M16 18.5a2.5 2.5 0 105 0 2.5 2.5 0 00-5 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef192 = React193.forwardRef(SvgBrainResearch);
var BrainResearch_default = ForwardRef192;

// node_modules/iconoir-react/dist/esm/BrainWarning.mjs
var React194 = __toESM(require_react(), 1);
var __assign193 = function() {
  __assign193 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign193.apply(this, arguments);
};
function SvgBrainWarning(passedProps, svgRef) {
  var context = React194.useContext(IconoirContext);
  var props = __assign193(__assign193({}, context), passedProps);
  return React194.createElement(
    "svg",
    __assign193({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React194.createElement("path", { d: "M7 14a3 3 0 101 5.83M4.264 15.605a4 4 0 01-.874-6.636M3.42 8.888A2.5 2.5 0 017 5.5M12 4.5a2.5 2.5 0 10-4.762 1.065M8 20a2 2 0 104 0M17 14a3 3 0 11-1 5.83M19.736 15.605a4 4 0 00.874-6.636M20.58 8.888A2.5 2.5 0 0017 5.5M12 4.5a2.5 2.5 0 114.762 1.065M16 20a2 2 0 11-4 0M12 8v4M12 16.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef193 = React194.forwardRef(SvgBrainWarning);
var BrainWarning_default = ForwardRef193;

// node_modules/iconoir-react/dist/esm/Brain.mjs
var React195 = __toESM(require_react(), 1);
var __assign194 = function() {
  __assign194 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign194.apply(this, arguments);
};
function SvgBrain(passedProps, svgRef) {
  var context = React195.useContext(IconoirContext);
  var props = __assign194(__assign194({}, context), passedProps);
  return React195.createElement(
    "svg",
    __assign194({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React195.createElement("path", { d: "M7 14a3 3 0 101 5.83M4.264 15.605a4 4 0 01-.874-6.636M3.42 8.888A2.5 2.5 0 017 5.5M7.238 5.565A2.5 2.5 0 1112 4.5V20M8 20a2 2 0 104 0M12 7a3 3 0 003 3M17 14a3 3 0 11-1 5.83M19.736 15.605a4 4 0 00.874-6.636M20.58 8.888A2.5 2.5 0 0017 5.5M12 4.5a2.5 2.5 0 114.762 1.065M16 20a2 2 0 11-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef194 = React195.forwardRef(SvgBrain);
var Brain_default = ForwardRef194;

// node_modules/iconoir-react/dist/esm/BreadSlice.mjs
var React196 = __toESM(require_react(), 1);
var __assign195 = function() {
  __assign195 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign195.apply(this, arguments);
};
function SvgBreadSlice(passedProps, svgRef) {
  var context = React196.useContext(IconoirContext);
  var props = __assign195(__assign195({}, context), passedProps);
  return React196.createElement(
    "svg",
    __assign195({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React196.createElement("path", { d: "M7 20V9S3 4 9.5 4H17c7 0 3 5 3 5v9a2 2 0 01-2 2H7z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React196.createElement("path", { d: "M7 20H6a2 2 0 01-2-2V9S0 4 6.5 4H10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef195 = React196.forwardRef(SvgBreadSlice);
var BreadSlice_default = ForwardRef195;

// node_modules/iconoir-react/dist/esm/BrightCrown.mjs
var React197 = __toESM(require_react(), 1);
var __assign196 = function() {
  __assign196 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign196.apply(this, arguments);
};
function SvgBrightCrown(passedProps, svgRef) {
  var context = React197.useContext(IconoirContext);
  var props = __assign196(__assign196({}, context), passedProps);
  return React197.createElement(
    "svg",
    __assign196({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React197.createElement(
      "g",
      { clipPath: "url(#bright-crown_svg__clip0_3057_14630)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React197.createElement("path", { d: "M22 12h1M12 2V1M12 23v-1M20 20l-1-1M20 4l-1 1M4 20l1-1M4 4l1 1M1 12h1M16.8 15.5l1.2-7-4.2 2.1L12 8.5l-1.8 2.1L6 8.5l1.2 7h9.6z" })
    ),
    React197.createElement(
      "defs",
      null,
      React197.createElement(
        "clipPath",
        { id: "bright-crown_svg__clip0_3057_14630" },
        React197.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef196 = React197.forwardRef(SvgBrightCrown);
var BrightCrown_default = ForwardRef196;

// node_modules/iconoir-react/dist/esm/BrightStar.mjs
var React198 = __toESM(require_react(), 1);
var __assign197 = function() {
  __assign197 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign197.apply(this, arguments);
};
function SvgBrightStar(passedProps, svgRef) {
  var context = React198.useContext(IconoirContext);
  var props = __assign197(__assign197({}, context), passedProps);
  return React198.createElement(
    "svg",
    __assign197({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React198.createElement(
      "g",
      { clipPath: "url(#bright-star_svg__clip0_3057_14628)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React198.createElement("path", { d: "M9.952 9.623l1.559-3.305a.535.535 0 01.978 0l1.559 3.305 3.485.533c.447.068.625.644.302.974l-2.522 2.57.595 3.631c.077.467-.391.822-.791.602L12 16.218l-3.117 1.715c-.4.22-.868-.135-.791-.602l.595-3.63-2.522-2.571c-.323-.33-.145-.906.302-.974l3.485-.533zM22 12h1M12 2V1M12 23v-1M20 20l-1-1M20 4l-1 1M4 20l1-1M4 4l1 1M1 12h1" })
    ),
    React198.createElement(
      "defs",
      null,
      React198.createElement(
        "clipPath",
        { id: "bright-star_svg__clip0_3057_14628" },
        React198.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef197 = React198.forwardRef(SvgBrightStar);
var BrightStar_default = ForwardRef197;

// node_modules/iconoir-react/dist/esm/BrightnessWindow.mjs
var React199 = __toESM(require_react(), 1);
var __assign198 = function() {
  __assign198 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign198.apply(this, arguments);
};
function SvgBrightnessWindow(passedProps, svgRef) {
  var context = React199.useContext(IconoirContext);
  var props = __assign198(__assign198({}, context), passedProps);
  return React199.createElement(
    "svg",
    __assign198({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React199.createElement("path", { d: "M12 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v7", stroke: "currentColor", strokeLinecap: "round" }),
    React199.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React199.createElement("path", { d: "M18 14l1.225 1.044 1.603.128.128 1.603L22 18l-1.044 1.225-.128 1.603-1.603.128L18 22l-1.225-1.044-1.603-.128-.128-1.603L14 18l1.044-1.225.128-1.603 1.603-.128L18 14z", stroke: "currentColor" }),
    React199.createElement("path", { d: "M16.775 20.956L18 22v-8l-1.225 1.044-1.603.128-.128 1.603L14 18l1.044 1.225.128 1.603 1.603.128z", fill: "currentColor" })
  );
}
var ForwardRef198 = React199.forwardRef(SvgBrightnessWindow);
var BrightnessWindow_default = ForwardRef198;

// node_modules/iconoir-react/dist/esm/Brightness.mjs
var React200 = __toESM(require_react(), 1);
var __assign199 = function() {
  __assign199 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign199.apply(this, arguments);
};
function SvgBrightness(passedProps, svgRef) {
  var context = React200.useContext(IconoirContext);
  var props = __assign199(__assign199({}, context), passedProps);
  return React200.createElement(
    "svg",
    __assign199({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React200.createElement("path", { d: "M12 7l1.53 1.304 2.006.16.16 2.005L17 12l-1.305 1.53-.16 2.006-2.004.16L12 17l-1.53-1.305-2.006-.16-.16-2.004L7 12l1.304-1.53.16-2.006 2.005-.16L12 7z", stroke: "currentColor" }),
    React200.createElement("path", { d: "M10.47 15.695L12 17V7l-1.53 1.304-2.006.16-.16 2.005L7 12l1.304 1.53.16 2.006 2.005.16z", fill: "currentColor" }),
    React200.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef199 = React200.forwardRef(SvgBrightness);
var Brightness_default = ForwardRef199;

// node_modules/iconoir-react/dist/esm/BubbleDownload.mjs
var React201 = __toESM(require_react(), 1);
var __assign200 = function() {
  __assign200 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign200.apply(this, arguments);
};
function SvgBubbleDownload(passedProps, svgRef) {
  var context = React201.useContext(IconoirContext);
  var props = __assign200(__assign200({}, context), passedProps);
  return React201.createElement(
    "svg",
    __assign200({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React201.createElement("path", { d: "M19 2v6m0 0l3-3m-3 3l-3-3M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef200 = React201.forwardRef(SvgBubbleDownload);
var BubbleDownload_default = ForwardRef200;

// node_modules/iconoir-react/dist/esm/BubbleError.mjs
var React202 = __toESM(require_react(), 1);
var __assign201 = function() {
  __assign201 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign201.apply(this, arguments);
};
function SvgBubbleError(passedProps, svgRef) {
  var context = React202.useContext(IconoirContext);
  var props = __assign201(__assign201({}, context), passedProps);
  return React202.createElement(
    "svg",
    __assign201({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React202.createElement("path", { d: "M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1M17.121 7.364l2.121-2.121m0 0l2.122-2.122m-2.122 2.122l-2.12-2.122m2.12 2.122l2.122 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef201 = React202.forwardRef(SvgBubbleError);
var BubbleError_default = ForwardRef201;

// node_modules/iconoir-react/dist/esm/BubbleIncome.mjs
var React203 = __toESM(require_react(), 1);
var __assign202 = function() {
  __assign202 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign202.apply(this, arguments);
};
function SvgBubbleIncome(passedProps, svgRef) {
  var context = React203.useContext(IconoirContext);
  var props = __assign202(__assign202({}, context), passedProps);
  return React203.createElement(
    "svg",
    __assign202({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React203.createElement("path", { d: "M22 5h-6m0 0l3-3m-3 3l3 3M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef202 = React203.forwardRef(SvgBubbleIncome);
var BubbleIncome_default = ForwardRef202;

// node_modules/iconoir-react/dist/esm/BubbleOutcome.mjs
var React204 = __toESM(require_react(), 1);
var __assign203 = function() {
  __assign203 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign203.apply(this, arguments);
};
function SvgBubbleOutcome(passedProps, svgRef) {
  var context = React204.useContext(IconoirContext);
  var props = __assign203(__assign203({}, context), passedProps);
  return React204.createElement(
    "svg",
    __assign203({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React204.createElement("path", { d: "M16 5h6m0 0l-3 3m3-3l-3-3M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef203 = React204.forwardRef(SvgBubbleOutcome);
var BubbleOutcome_default = ForwardRef203;

// node_modules/iconoir-react/dist/esm/BubbleSearch.mjs
var React205 = __toESM(require_react(), 1);
var __assign204 = function() {
  __assign204 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign204.apply(this, arguments);
};
function SvgBubbleSearch(passedProps, svgRef) {
  var context = React205.useContext(IconoirContext);
  var props = __assign204(__assign204({}, context), passedProps);
  return React205.createElement(
    "svg",
    __assign204({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React205.createElement("path", { d: "M20.5 6.5L22 8M16 4.5a2.5 2.5 0 105 0 2.5 2.5 0 00-5 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React205.createElement("path", { d: "M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef204 = React205.forwardRef(SvgBubbleSearch);
var BubbleSearch_default = ForwardRef204;

// node_modules/iconoir-react/dist/esm/BubbleStar.mjs
var React206 = __toESM(require_react(), 1);
var __assign205 = function() {
  __assign205 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign205.apply(this, arguments);
};
function SvgBubbleStar(passedProps, svgRef) {
  var context = React206.useContext(IconoirContext);
  var props = __assign205(__assign205({}, context), passedProps);
  return React206.createElement(
    "svg",
    __assign205({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React206.createElement("path", { d: "M17.306 4.113l.909-1.927a.312.312 0 01.57 0l.91 1.927 2.032.311c.261.04.365.376.177.568l-1.471 1.5.347 2.118c.044.272-.229.48-.462.351l-1.818-1-1.818 1c-.233.128-.506-.079-.462-.351l.347-2.118-1.47-1.5c-.19-.192-.085-.528.176-.568l2.033-.31z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React206.createElement("path", { d: "M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef205 = React206.forwardRef(SvgBubbleStar);
var BubbleStar_default = ForwardRef205;

// node_modules/iconoir-react/dist/esm/BubbleUpload.mjs
var React207 = __toESM(require_react(), 1);
var __assign206 = function() {
  __assign206 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign206.apply(this, arguments);
};
function SvgBubbleUpload(passedProps, svgRef) {
  var context = React207.useContext(IconoirContext);
  var props = __assign206(__assign206({}, context), passedProps);
  return React207.createElement(
    "svg",
    __assign206({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React207.createElement("path", { d: "M19 8V2m0 0l3 3m-3-3l-3 3M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef206 = React207.forwardRef(SvgBubbleUpload);
var BubbleUpload_default = ForwardRef206;

// node_modules/iconoir-react/dist/esm/BubbleWarning.mjs
var React208 = __toESM(require_react(), 1);
var __assign207 = function() {
  __assign207 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign207.apply(this, arguments);
};
function SvgBubbleWarning(passedProps, svgRef) {
  var context = React208.useContext(IconoirContext);
  var props = __assign207(__assign207({}, context), passedProps);
  return React208.createElement(
    "svg",
    __assign207({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React208.createElement("path", { d: "M18 2v3M18 9.01l.01-.011M13 2.05c-.329-.033-.662-.05-1-.05C6.477 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22c5.523 0 10-4.477 10-10 0-.338-.017-.671-.05-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef207 = React208.forwardRef(SvgBubbleWarning);
var BubbleWarning_default = ForwardRef207;

// node_modules/iconoir-react/dist/esm/Building.mjs
var React209 = __toESM(require_react(), 1);
var __assign208 = function() {
  __assign208 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign208.apply(this, arguments);
};
function SvgBuilding(passedProps, svgRef) {
  var context = React209.useContext(IconoirContext);
  var props = __assign208(__assign208({}, context), passedProps);
  return React209.createElement(
    "svg",
    __assign208({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React209.createElement("path", { d: "M10 9.01l.01-.011M14 9.01l.01-.011M10 13.01l.01-.011M14 13.01l.01-.011M10 17.01l.01-.011M14 17.01l.01-.011M6 20.4V5.6a.6.6 0 01.6-.6H12V3.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef208 = React209.forwardRef(SvgBuilding);
var Building_default = ForwardRef208;

// node_modules/iconoir-react/dist/esm/BusStop.mjs
var React210 = __toESM(require_react(), 1);
var __assign209 = function() {
  __assign209 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign209.apply(this, arguments);
};
function SvgBusStop(passedProps, svgRef) {
  var context = React210.useContext(IconoirContext);
  var props = __assign209(__assign209({}, context), passedProps);
  return React210.createElement(
    "svg",
    __assign209({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React210.createElement("path", { d: "M16 16.01l.01-.011M6 16.01l.01-.011M20 22V8m0 0h-2V2h4v6h-2zM16 20H2.6a.6.6 0 01-.6-.6v-6.8a.6.6 0 01.6-.6H16M14 8H6m8-6H6a4 4 0 00-4 4v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React210.createElement("path", { d: "M3.5 20v1.9a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V20M14.5 20v1.9a.6.6 0 00.6.6h.9", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef209 = React210.forwardRef(SvgBusStop);
var BusStop_default = ForwardRef209;

// node_modules/iconoir-react/dist/esm/Bus.mjs
var React211 = __toESM(require_react(), 1);
var __assign210 = function() {
  __assign210 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign210.apply(this, arguments);
};
function SvgBus(passedProps, svgRef) {
  var context = React211.useContext(IconoirContext);
  var props = __assign210(__assign210({}, context), passedProps);
  return React211.createElement(
    "svg",
    __assign210({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React211.createElement("path", { d: "M7 16.01l.01-.011M17 16.01l.01-.011M3 12h18v7a1 1 0 01-1 1H4a1 1 0 01-1-1v-7zM21 8V6a4 4 0 00-4-4H7a4 4 0 00-4 4v2M7 8h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React211.createElement("path", { d: "M4.5 20v1.9a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V20M15.5 20v1.9a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V20", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef210 = React211.forwardRef(SvgBus);
var Bus_default = ForwardRef210;

// node_modules/iconoir-react/dist/esm/CableTag.mjs
var React212 = __toESM(require_react(), 1);
var __assign211 = function() {
  __assign211 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign211.apply(this, arguments);
};
function SvgCableTag(passedProps, svgRef) {
  var context = React212.useContext(IconoirContext);
  var props = __assign211(__assign211({}, context), passedProps);
  return React212.createElement(
    "svg",
    __assign211({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React212.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React212.createElement("path", { d: "M11.667 8L10 12h4l-1.667 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef211 = React212.forwardRef(SvgCableTag);
var CableTag_default = ForwardRef211;

// node_modules/iconoir-react/dist/esm/Calculator.mjs
var React213 = __toESM(require_react(), 1);
var __assign212 = function() {
  __assign212 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign212.apply(this, arguments);
};
function SvgCalculator(passedProps, svgRef) {
  var context = React213.useContext(IconoirContext);
  var props = __assign212(__assign212({}, context), passedProps);
  return React213.createElement(
    "svg",
    __assign212({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React213.createElement("path", { d: "M1 21V3a2 2 0 012-2h18a2 2 0 012 2v18a2 2 0 01-2 2H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React213.createElement("path", { d: "M15 7h4M15 15.5h4M15 18.5h4M5 7h2m2 0H7m0 0V5m0 2v2M5.586 18.414L7 17m1.415-1.414L7 17m0 0l-1.414-1.414M7 17l1.415 1.414", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef212 = React213.forwardRef(SvgCalculator);
var Calculator_default = ForwardRef212;

// node_modules/iconoir-react/dist/esm/CalendarMinus.mjs
var React214 = __toESM(require_react(), 1);
var __assign213 = function() {
  __assign213 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign213.apply(this, arguments);
};
function SvgCalendarMinus(passedProps, svgRef) {
  var context = React214.useContext(IconoirContext);
  var props = __assign213(__assign213({}, context), passedProps);
  return React214.createElement(
    "svg",
    __assign213({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React214.createElement("path", { d: "M13 21H5a2 2 0 01-2-2v-9h18v3m-6-9V2m0 2v2m0-2h-4.5M3 10V6a2 2 0 012-2h2M7 2v4M21 10V6a2 2 0 00-2-2h-.5M14.992 18H21", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef213 = React214.forwardRef(SvgCalendarMinus);
var CalendarMinus_default = ForwardRef213;

// node_modules/iconoir-react/dist/esm/CalendarPlus.mjs
var React215 = __toESM(require_react(), 1);
var __assign214 = function() {
  __assign214 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign214.apply(this, arguments);
};
function SvgCalendarPlus(passedProps, svgRef) {
  var context = React215.useContext(IconoirContext);
  var props = __assign214(__assign214({}, context), passedProps);
  return React215.createElement(
    "svg",
    __assign214({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React215.createElement("path", { d: "M13 21H5a2 2 0 01-2-2v-9h18v3m-6-9V2m0 2v2m0-2h-4.5M3 10V6a2 2 0 012-2h2M7 2v4M21 10V6a2 2 0 00-2-2h-.5M14.992 18h3M21 18h-3.008m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef214 = React215.forwardRef(SvgCalendarPlus);
var CalendarPlus_default = ForwardRef214;

// node_modules/iconoir-react/dist/esm/Calendar.mjs
var React216 = __toESM(require_react(), 1);
var __assign215 = function() {
  __assign215 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign215.apply(this, arguments);
};
function SvgCalendar(passedProps, svgRef) {
  var context = React216.useContext(IconoirContext);
  var props = __assign215(__assign215({}, context), passedProps);
  return React216.createElement(
    "svg",
    __assign215({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React216.createElement("path", { d: "M15 4V2m0 2v2m0-2h-4.5M3 10v9a2 2 0 002 2h14a2 2 0 002-2v-9H3zM3 10V6a2 2 0 012-2h2M7 2v4M21 10V6a2 2 0 00-2-2h-.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef215 = React216.forwardRef(SvgCalendar);
var Calendar_default = ForwardRef215;

// node_modules/iconoir-react/dist/esm/Camera.mjs
var React217 = __toESM(require_react(), 1);
var __assign216 = function() {
  __assign216 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign216.apply(this, arguments);
};
function SvgCamera(passedProps, svgRef) {
  var context = React217.useContext(IconoirContext);
  var props = __assign216(__assign216({}, context), passedProps);
  return React217.createElement(
    "svg",
    __assign216({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React217.createElement("path", { d: "M2 19V9a2 2 0 012-2h.5a2 2 0 001.6-.8l2.22-2.96A.6.6 0 018.8 3h6.4a.6.6 0 01.48.24L17.9 6.2a2 2 0 001.6.8h.5a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React217.createElement("path", { d: "M12 17a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef216 = React217.forwardRef(SvgCamera);
var Camera_default = ForwardRef216;

// node_modules/iconoir-react/dist/esm/Cancel.mjs
var React218 = __toESM(require_react(), 1);
var __assign217 = function() {
  __assign217 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign217.apply(this, arguments);
};
function SvgCancel(passedProps, svgRef) {
  var context = React218.useContext(IconoirContext);
  var props = __assign217(__assign217({}, context), passedProps);
  return React218.createElement(
    "svg",
    __assign217({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React218.createElement("path", { d: "M6.758 17.243L12.001 12m5.243-5.243L12 12m0 0L6.758 6.757M12.001 12l5.243 5.243", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef217 = React218.forwardRef(SvgCancel);
var Cancel_default = ForwardRef217;

// node_modules/iconoir-react/dist/esm/CandlestickChart.mjs
var React219 = __toESM(require_react(), 1);
var __assign218 = function() {
  __assign218 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign218.apply(this, arguments);
};
function SvgCandlestickChart(passedProps, svgRef) {
  var context = React219.useContext(IconoirContext);
  var props = __assign218(__assign218({}, context), passedProps);
  return React219.createElement(
    "svg",
    __assign218({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React219.createElement("path", { d: "M5 16v-2M12 21v-2M19 13v-2M5 8V6M12 13v-2M19 5V3M7 8.6v4.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V8.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6zM14 13.6v4.8a.6.6 0 01-.6.6h-2.8a.6.6 0 01-.6-.6v-4.8a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6zM21 5.6v4.8a.6.6 0 01-.6.6h-2.8a.6.6 0 01-.6-.6V5.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef218 = React219.forwardRef(SvgCandlestickChart);
var CandlestickChart_default = ForwardRef218;

// node_modules/iconoir-react/dist/esm/Car.mjs
var React220 = __toESM(require_react(), 1);
var __assign219 = function() {
  __assign219 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign219.apply(this, arguments);
};
function SvgCar(passedProps, svgRef) {
  var context = React220.useContext(IconoirContext);
  var props = __assign219(__assign219({}, context), passedProps);
  return React220.createElement(
    "svg",
    __assign219({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React220.createElement("path", { d: "M8 10h8M7 14h1M16 14h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React220.createElement("path", { d: "M3 18v-6.59a2 2 0 01.162-.787l2.319-5.41A2 2 0 017.319 4h9.362a2 2 0 011.838 1.212l2.32 5.41a2 2 0 01.161.789V18M3 18v2.4a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V18m-4 0h4m14 0v2.4a.6.6 0 01-.6.6h-2.8a.6.6 0 01-.6-.6V18m4 0h-4M7 18h10", stroke: "currentColor" })
  );
}
var ForwardRef219 = React220.forwardRef(SvgCar);
var Car_default = ForwardRef219;

// node_modules/iconoir-react/dist/esm/Carbon.mjs
var React221 = __toESM(require_react(), 1);
var __assign220 = function() {
  __assign220 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign220.apply(this, arguments);
};
function SvgCarbon(passedProps, svgRef) {
  var context = React221.useContext(IconoirContext);
  var props = __assign220(__assign220({}, context), passedProps);
  return React221.createElement(
    "svg",
    __assign220({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React221.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React221.createElement("path", { d: "M14 10v-.2A1.8 1.8 0 0012.2 8h-.4A1.8 1.8 0 0010 9.8v4.4a1.8 1.8 0 001.8 1.8h.4a1.8 1.8 0 001.8-1.8V14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef220 = React221.forwardRef(SvgCarbon);
var Carbon_default = ForwardRef220;

// node_modules/iconoir-react/dist/esm/CardIssue.mjs
var React222 = __toESM(require_react(), 1);
var __assign221 = function() {
  __assign221 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign221.apply(this, arguments);
};
function SvgCardIssue(passedProps, svgRef) {
  var context = React222.useContext(IconoirContext);
  var props = __assign221(__assign221({}, context), passedProps);
  return React222.createElement(
    "svg",
    __assign221({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React222.createElement("path", { d: "M22 9V7a2 2 0 00-2-2H4a2 2 0 00-2 2v10a2 2 0 002 2h8M22 9H6m16 0v4M21 16.05A3.5 3.5 0 1016 20.95m4.998-4.9A3.5 3.5 0 1116 20.95m5-4.9l-5 4.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef221 = React222.forwardRef(SvgCardIssue);
var CardIssue_default = ForwardRef221;

// node_modules/iconoir-react/dist/esm/CardLocked.mjs
var React223 = __toESM(require_react(), 1);
var __assign222 = function() {
  __assign222 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign222.apply(this, arguments);
};
function SvgCardLocked(passedProps, svgRef) {
  var context = React223.useContext(IconoirContext);
  var props = __assign222(__assign222({}, context), passedProps);
  return React223.createElement(
    "svg",
    __assign222({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React223.createElement("path", { d: "M22 9V7a2 2 0 00-2-2H4a2 2 0 00-2 2v10a2 2 0 002 2h10m8-10H6m16 0v4M21.167 18.5h.233a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 01.6-.6h.233m3.334 0v-1.75c0-.583-.334-1.75-1.667-1.75s-1.667 1.167-1.667 1.75v1.75m3.334 0h-3.334", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef222 = React223.forwardRef(SvgCardLocked);
var CardLocked_default = ForwardRef222;

// node_modules/iconoir-react/dist/esm/CardReader.mjs
var React224 = __toESM(require_react(), 1);
var __assign223 = function() {
  __assign223 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign223.apply(this, arguments);
};
function SvgCardReader(passedProps, svgRef) {
  var context = React224.useContext(IconoirContext);
  var props = __assign223(__assign223({}, context), passedProps);
  return React224.createElement(
    "svg",
    __assign223({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React224.createElement("path", { d: "M5 19V3h14v16a2 2 0 01-2 2H7a2 2 0 01-2-2z", stroke: "currentColor" }),
    React224.createElement("path", { d: "M5 6H3.5A1.5 1.5 0 012 4.5v0A1.5 1.5 0 013.5 3h17A1.5 1.5 0 0122 4.5v0A1.5 1.5 0 0120.5 6H19", stroke: "currentColor" }),
    React224.createElement("path", { d: "M15 3v18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef223 = React224.forwardRef(SvgCardReader);
var CardReader_default = ForwardRef223;

// node_modules/iconoir-react/dist/esm/CardSecurity.mjs
var React225 = __toESM(require_react(), 1);
var __assign224 = function() {
  __assign224 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign224.apply(this, arguments);
};
function SvgCardSecurity(passedProps, svgRef) {
  var context = React225.useContext(IconoirContext);
  var props = __assign224(__assign224({}, context), passedProps);
  return React225.createElement(
    "svg",
    __assign224({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React225.createElement("path", { d: "M22 9V7a2 2 0 00-2-2H4a2 2 0 00-2 2v10a2 2 0 002 2h8M22 9H6m16 0v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React225.createElement("path", { d: "M18.992 14.125l2.556.649c.266.068.453.31.445.584C21.821 21.116 18.5 22 18.5 22s-3.321-.884-3.493-6.642a.588.588 0 01.445-.584l2.556-.649c.323-.082.661-.082.984 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef224 = React225.forwardRef(SvgCardSecurity);
var CardSecurity_default = ForwardRef224;

// node_modules/iconoir-react/dist/esm/CardWallet.mjs
var React226 = __toESM(require_react(), 1);
var __assign225 = function() {
  __assign225 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign225.apply(this, arguments);
};
function SvgCardWallet(passedProps, svgRef) {
  var context = React226.useContext(IconoirContext);
  var props = __assign225(__assign225({}, context), passedProps);
  return React226.createElement(
    "svg",
    __assign225({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React226.createElement("path", { d: "M19 20H5a2 2 0 01-2-2V9a2 2 0 012-2h14a2 2 0 012 2v9a2 2 0 01-2 2zM7 7V3.6a.6.6 0 01.6-.6h8.8a.6.6 0 01.6.6V7M10 3v4M12 3v4", stroke: "currentColor" }),
    React226.createElement("path", { d: "M16.5 14a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef225 = React226.forwardRef(SvgCardWallet);
var CardWallet_default = ForwardRef225;

// node_modules/iconoir-react/dist/esm/CartAlt.mjs
var React227 = __toESM(require_react(), 1);
var __assign226 = function() {
  __assign226 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign226.apply(this, arguments);
};
function SvgCartAlt(passedProps, svgRef) {
  var context = React227.useContext(IconoirContext);
  var props = __assign226(__assign226({}, context), passedProps);
  return React227.createElement(
    "svg",
    __assign226({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React227.createElement("path", { d: "M19.5 22a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM9.5 22a1.5 1.5 0 100-3 1.5 1.5 0 000 3z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React227.createElement("path", { d: "M16.5 4H22l-2 11h-4.5m1-11l-1 11m1-11h-5.75m4.75 11h-4m-.75-11H5l2 11h4.5m-.75-11l.75 11M5 4c-.167-.667-1-2-3-2M20 15H5.23c-1.784 0-2.73.781-2.73 2 0 1.219.946 2 2.73 2H19.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef226 = React227.forwardRef(SvgCartAlt);
var CartAlt_default = ForwardRef226;

// node_modules/iconoir-react/dist/esm/Cart.mjs
var React228 = __toESM(require_react(), 1);
var __assign227 = function() {
  __assign227 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign227.apply(this, arguments);
};
function SvgCart(passedProps, svgRef) {
  var context = React228.useContext(IconoirContext);
  var props = __assign227(__assign227({}, context), passedProps);
  return React228.createElement(
    "svg",
    __assign227({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React228.createElement("path", { d: "M19.5 22a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM9.5 22a1.5 1.5 0 100-3 1.5 1.5 0 000 3z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React228.createElement("path", { d: "M5 4h17l-2 11H7L5 4zm0 0c-.167-.667-1-2-3-2M20 15H5.23c-1.784 0-2.73.781-2.73 2 0 1.219.946 2 2.73 2H19.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef227 = React228.forwardRef(SvgCart);
var Cart_default = ForwardRef227;

// node_modules/iconoir-react/dist/esm/Cash.mjs
var React229 = __toESM(require_react(), 1);
var __assign228 = function() {
  __assign228 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign228.apply(this, arguments);
};
function SvgCash(passedProps, svgRef) {
  var context = React229.useContext(IconoirContext);
  var props = __assign228(__assign228({}, context), passedProps);
  return React229.createElement(
    "svg",
    __assign228({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React229.createElement("path", { d: "M2 17V7a2 2 0 012-2h16a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React229.createElement("path", { d: "M12 15a3 3 0 110-6 3 3 0 010 6zM18.5 12.01l.01-.011M5.5 12.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef228 = React229.forwardRef(SvgCash);
var Cash_default = ForwardRef228;

// node_modules/iconoir-react/dist/esm/Cell2X2.mjs
var React230 = __toESM(require_react(), 1);
var __assign229 = function() {
  __assign229 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign229.apply(this, arguments);
};
function SvgCell2X2(passedProps, svgRef) {
  var context = React230.useContext(IconoirContext);
  var props = __assign229(__assign229({}, context), passedProps);
  return React230.createElement(
    "svg",
    __assign229({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React230.createElement("path", { d: "M21 3.6V12h-9V3h8.4a.6.6 0 01.6.6zM21 20.4V12h-9v9h8.4a.6.6 0 00.6-.6zM3 12V3.6a.6.6 0 01.6-.6H12v9H3zM3 12v8.4a.6.6 0 00.6.6H12v-9H3z", stroke: "currentColor" })
  );
}
var ForwardRef229 = React230.forwardRef(SvgCell2X2);
var Cell2X2_default = ForwardRef229;

// node_modules/iconoir-react/dist/esm/Cellar.mjs
var React231 = __toESM(require_react(), 1);
var __assign230 = function() {
  __assign230 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign230.apply(this, arguments);
};
function SvgCellar(passedProps, svgRef) {
  var context = React231.useContext(IconoirContext);
  var props = __assign230(__assign230({}, context), passedProps);
  return React231.createElement(
    "svg",
    __assign230({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React231.createElement("path", { d: "M3 21h18v-9a9 9 0 10-18 0v9zM3 17h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React231.createElement("path", { d: "M9 17v-4h12M13 13V9h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef230 = React231.forwardRef(SvgCellar);
var Cellar_default = ForwardRef230;

// node_modules/iconoir-react/dist/esm/CenterAlign.mjs
var React232 = __toESM(require_react(), 1);
var __assign231 = function() {
  __assign231 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign231.apply(this, arguments);
};
function SvgCenterAlign(passedProps, svgRef) {
  var context = React232.useContext(IconoirContext);
  var props = __assign231(__assign231({}, context), passedProps);
  return React232.createElement(
    "svg",
    __assign231({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React232.createElement("path", { d: "M4 16.01l.01-.011M4 20.01l.01-.011M4 8.01l.01-.011M4 4.01l.01-.011M4 12.01l.01-.011M8 20.01l.01-.011M12 20.01l.01-.011M16 20.01l.01-.011M20 20.01l.01-.011M20 16.01l.01-.011M20 12.01l.01-.011M20 8.01l.01-.011M20 4.01l.01-.011M16 4.01l.01-.011M12 4.01l.01-.011M8 4.01l.01-.011M8 16V8h8v8H8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef231 = React232.forwardRef(SvgCenterAlign);
var CenterAlign_default = ForwardRef231;

// node_modules/iconoir-react/dist/esm/ChatAdd.mjs
var React233 = __toESM(require_react(), 1);
var __assign232 = function() {
  __assign232 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign232.apply(this, arguments);
};
function SvgChatAdd(passedProps, svgRef) {
  var context = React233.useContext(IconoirContext);
  var props = __assign232(__assign232({}, context), passedProps);
  return React233.createElement(
    "svg",
    __assign232({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React233.createElement("path", { d: "M9 12h3m3 0h-3m0 0V9m0 3v3M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef232 = React233.forwardRef(SvgChatAdd);
var ChatAdd_default = ForwardRef232;

// node_modules/iconoir-react/dist/esm/ChatBubbleCheck1.mjs
var React234 = __toESM(require_react(), 1);
var __assign233 = function() {
  __assign233 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign233.apply(this, arguments);
};
function SvgChatBubbleCheck1(passedProps, svgRef) {
  var context = React234.useContext(IconoirContext);
  var props = __assign233(__assign233({}, context), passedProps);
  return React234.createElement(
    "svg",
    __assign233({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React234.createElement("path", { d: "M8 12l3 3 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React234.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef233 = React234.forwardRef(SvgChatBubbleCheck1);
var ChatBubbleCheck1_default = ForwardRef233;

// node_modules/iconoir-react/dist/esm/ChatBubbleCheck.mjs
var React235 = __toESM(require_react(), 1);
var __assign234 = function() {
  __assign234 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign234.apply(this, arguments);
};
function SvgChatBubbleCheck(passedProps, svgRef) {
  var context = React235.useContext(IconoirContext);
  var props = __assign234(__assign234({}, context), passedProps);
  return React235.createElement(
    "svg",
    __assign234({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React235.createElement("path", { d: "M8 12l3 3 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React235.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef234 = React235.forwardRef(SvgChatBubbleCheck);
var ChatBubbleCheck_default = ForwardRef234;

// node_modules/iconoir-react/dist/esm/ChatBubbleEmpty.mjs
var React236 = __toESM(require_react(), 1);
var __assign235 = function() {
  __assign235 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign235.apply(this, arguments);
};
function SvgChatBubbleEmpty(passedProps, svgRef) {
  var context = React236.useContext(IconoirContext);
  var props = __assign235(__assign235({}, context), passedProps);
  return React236.createElement(
    "svg",
    __assign235({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React236.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef235 = React236.forwardRef(SvgChatBubbleEmpty);
var ChatBubbleEmpty_default = ForwardRef235;

// node_modules/iconoir-react/dist/esm/ChatBubbleError.mjs
var React237 = __toESM(require_react(), 1);
var __assign236 = function() {
  __assign236 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign236.apply(this, arguments);
};
function SvgChatBubbleError(passedProps, svgRef) {
  var context = React237.useContext(IconoirContext);
  var props = __assign236(__assign236({}, context), passedProps);
  return React237.createElement(
    "svg",
    __assign236({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React237.createElement("path", { d: "M9.5 14.5l2.493-2.5M14.5 9.5L11.993 12m0 0L9.5 9.5m2.493 2.5l2.507 2.5M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef236 = React237.forwardRef(SvgChatBubbleError);
var ChatBubbleError_default = ForwardRef236;

// node_modules/iconoir-react/dist/esm/ChatBubbleQuestion.mjs
var React238 = __toESM(require_react(), 1);
var __assign237 = function() {
  __assign237 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign237.apply(this, arguments);
};
function SvgChatBubbleQuestion(passedProps, svgRef) {
  var context = React238.useContext(IconoirContext);
  var props = __assign237(__assign237({}, context), passedProps);
  return React238.createElement(
    "svg",
    __assign237({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React238.createElement("path", { d: "M9 9c0-3.5 5.5-3.5 5.5 0 0 2.5-2.5 2-2.5 5M12 18.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React238.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef237 = React238.forwardRef(SvgChatBubbleQuestion);
var ChatBubbleQuestion_default = ForwardRef237;

// node_modules/iconoir-react/dist/esm/ChatBubbleTranslate.mjs
var React239 = __toESM(require_react(), 1);
var __assign238 = function() {
  __assign238 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign238.apply(this, arguments);
};
function SvgChatBubbleTranslate(passedProps, svgRef) {
  var context = React239.useContext(IconoirContext);
  var props = __assign238(__assign238({}, context), passedProps);
  return React239.createElement(
    "svg",
    __assign238({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React239.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React239.createElement("path", { d: "M7 8.517h5m5 0h-1.786m-3.214 0h3.214m-3.214 0V7m3.214 1.517c-.586 2.075-1.813 4.037-3.214 5.76M8.429 18C9.56 16.97 10.84 15.705 12 14.277m0 0c-.714-.829-1.714-2.17-2-2.777m2 2.777l2.143 2.206", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef238 = React239.forwardRef(SvgChatBubbleTranslate);
var ChatBubbleTranslate_default = ForwardRef238;

// node_modules/iconoir-react/dist/esm/ChatBubbleWarning.mjs
var React240 = __toESM(require_react(), 1);
var __assign239 = function() {
  __assign239 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign239.apply(this, arguments);
};
function SvgChatBubbleWarning(passedProps, svgRef) {
  var context = React240.useContext(IconoirContext);
  var props = __assign239(__assign239({}, context), passedProps);
  return React240.createElement(
    "svg",
    __assign239({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React240.createElement("path", { d: "M12 8v4M12 16.01l.01-.011M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef239 = React240.forwardRef(SvgChatBubbleWarning);
var ChatBubbleWarning_default = ForwardRef239;

// node_modules/iconoir-react/dist/esm/ChatBubble.mjs
var React241 = __toESM(require_react(), 1);
var __assign240 = function() {
  __assign240 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign240.apply(this, arguments);
};
function SvgChatBubble(passedProps, svgRef) {
  var context = React241.useContext(IconoirContext);
  var props = __assign240(__assign240({}, context), passedProps);
  return React241.createElement(
    "svg",
    __assign240({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React241.createElement("path", { d: "M17 12.5a.5.5 0 100-1 .5.5 0 000 1zM12 12.5a.5.5 0 100-1 .5.5 0 000 1zM7 12.5a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React241.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef240 = React241.forwardRef(SvgChatBubble);
var ChatBubble_default = ForwardRef240;

// node_modules/iconoir-react/dist/esm/ChatLines.mjs
var React242 = __toESM(require_react(), 1);
var __assign241 = function() {
  __assign241 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign241.apply(this, arguments);
};
function SvgChatLines(passedProps, svgRef) {
  var context = React242.useContext(IconoirContext);
  var props = __assign241(__assign241({}, context), passedProps);
  return React242.createElement(
    "svg",
    __assign241({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React242.createElement("path", { d: "M8 10h8M8 14h4M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef241 = React242.forwardRef(SvgChatLines);
var ChatLines_default = ForwardRef241;

// node_modules/iconoir-react/dist/esm/ChatRemove.mjs
var React243 = __toESM(require_react(), 1);
var __assign242 = function() {
  __assign242 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign242.apply(this, arguments);
};
function SvgChatRemove(passedProps, svgRef) {
  var context = React243.useContext(IconoirContext);
  var props = __assign242(__assign242({}, context), passedProps);
  return React243.createElement(
    "svg",
    __assign242({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React243.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22zM9 12h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef242 = React243.forwardRef(SvgChatRemove);
var ChatRemove_default = ForwardRef242;

// node_modules/iconoir-react/dist/esm/CheckCircle.mjs
var React244 = __toESM(require_react(), 1);
var __assign243 = function() {
  __assign243 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign243.apply(this, arguments);
};
function SvgCheckCircle(passedProps, svgRef) {
  var context = React244.useContext(IconoirContext);
  var props = __assign243(__assign243({}, context), passedProps);
  return React244.createElement(
    "svg",
    __assign243({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React244.createElement("path", { d: "M7 12.5l3 3 7-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React244.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef243 = React244.forwardRef(SvgCheckCircle);
var CheckCircle_default = ForwardRef243;

// node_modules/iconoir-react/dist/esm/CheckWindow.mjs
var React245 = __toESM(require_react(), 1);
var __assign244 = function() {
  __assign244 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign244.apply(this, arguments);
};
function SvgCheckWindow(passedProps, svgRef) {
  var context = React245.useContext(IconoirContext);
  var props = __assign244(__assign244({}, context), passedProps);
  return React245.createElement(
    "svg",
    __assign244({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React245.createElement("path", { d: "M13 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v10", stroke: "currentColor", strokeLinecap: "round" }),
    React245.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M16 20l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef244 = React245.forwardRef(SvgCheckWindow);
var CheckWindow_default = ForwardRef244;

// node_modules/iconoir-react/dist/esm/Check.mjs
var React246 = __toESM(require_react(), 1);
var __assign245 = function() {
  __assign245 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign245.apply(this, arguments);
};
function SvgCheck(passedProps, svgRef) {
  var context = React246.useContext(IconoirContext);
  var props = __assign245(__assign245({}, context), passedProps);
  return React246.createElement(
    "svg",
    __assign245({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React246.createElement("path", { d: "M5 13l4 4L19 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef245 = React246.forwardRef(SvgCheck);
var Check_default = ForwardRef245;

// node_modules/iconoir-react/dist/esm/Chocolate.mjs
var React247 = __toESM(require_react(), 1);
var __assign246 = function() {
  __assign246 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign246.apply(this, arguments);
};
function SvgChocolate(passedProps, svgRef) {
  var context = React247.useContext(IconoirContext);
  var props = __assign246(__assign246({}, context), passedProps);
  return React247.createElement(
    "svg",
    __assign246({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React247.createElement("path", { d: "M19 6.5c-3 0-4.5-.5-4.5-3.5H5v18h14V6.5zM19 15H5M5 9h14M12 21V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef246 = React247.forwardRef(SvgChocolate);
var Chocolate_default = ForwardRef246;

// node_modules/iconoir-react/dist/esm/ChromecastActive.mjs
var React248 = __toESM(require_react(), 1);
var __assign247 = function() {
  __assign247 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign247.apply(this, arguments);
};
function SvgChromecastActive(passedProps, svgRef) {
  var context = React248.useContext(IconoirContext);
  var props = __assign247(__assign247({}, context), passedProps);
  return React248.createElement(
    "svg",
    __assign247({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React248.createElement("path", { d: "M2 20.01l.01-.011M15 20h5a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v1M2 16c2 .5 3.5 2 4 4M2 12c4 .5 7.5 4 8 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React248.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M5.002 7.63a.6.6 0 01.6-.6h12.804a.6.6 0 01.6.6v8.832a.6.6 0 01-.6.6H13.44a.617.617 0 01-.556-.355c-.422-.892-1.622-3.26-3.07-4.707-1.42-1.419-3.572-2.444-4.435-2.82a.624.624 0 01-.378-.569v-.98z", fill: "currentColor" })
  );
}
var ForwardRef247 = React248.forwardRef(SvgChromecastActive);
var ChromecastActive_default = ForwardRef247;

// node_modules/iconoir-react/dist/esm/Chromecast.mjs
var React249 = __toESM(require_react(), 1);
var __assign248 = function() {
  __assign248 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign248.apply(this, arguments);
};
function SvgChromecast(passedProps, svgRef) {
  var context = React249.useContext(IconoirContext);
  var props = __assign248(__assign248({}, context), passedProps);
  return React249.createElement(
    "svg",
    __assign248({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React249.createElement("path", { d: "M2 20.01l.01-.011M15 20h5a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v1M2 16c2 .5 3.5 2 4 4M2 12c4 .5 7.5 4 8 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef248 = React249.forwardRef(SvgChromecast);
var Chromecast_default = ForwardRef248;

// node_modules/iconoir-react/dist/esm/ChurchAlt.mjs
var React250 = __toESM(require_react(), 1);
var __assign249 = function() {
  __assign249 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign249.apply(this, arguments);
};
function SvgChurchAlt(passedProps, svgRef) {
  var context = React250.useContext(IconoirContext);
  var props = __assign249(__assign249({}, context), passedProps);
  return React250.createElement(
    "svg",
    __assign249({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React250.createElement("path", { d: "M7.576 7.424a.6.6 0 01.848 0l3.4 3.4a.6.6 0 01.176.425V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6V11.249a.6.6 0 01.176-.425l3.4-3.4zM8 7V4m0-2v2m0 0H6m2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React250.createElement("path", { d: "M12 22h7.4a.6.6 0 00.6-.6V10.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 7H8M8 22v-5M8 13.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef249 = React250.forwardRef(SvgChurchAlt);
var ChurchAlt_default = ForwardRef249;

// node_modules/iconoir-react/dist/esm/Church.mjs
var React251 = __toESM(require_react(), 1);
var __assign250 = function() {
  __assign250 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign250.apply(this, arguments);
};
function SvgChurch(passedProps, svgRef) {
  var context = React251.useContext(IconoirContext);
  var props = __assign250(__assign250({}, context), passedProps);
  return React251.createElement(
    "svg",
    __assign250({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React251.createElement("path", { d: "M12 6l-7.718 4.824a.6.6 0 00-.282.508V21.4a.6.6 0 00.6.6H12m0-16l7.718 4.824a.6.6 0 01.282.508V21.4a.6.6 0 01-.6.6H12m0-16V4m0-2v2m-2 0h2m0 0h2m-2 18v-5M16 17.01l.01-.011M16 13.01l.01-.011M12 13.01l.01-.011M8 13.01l.01-.011M8 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef250 = React251.forwardRef(SvgChurch);
var Church_default = ForwardRef250;

// node_modules/iconoir-react/dist/esm/CinemaOld.mjs
var React252 = __toESM(require_react(), 1);
var __assign251 = function() {
  __assign251 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign251.apply(this, arguments);
};
function SvgCinemaOld(passedProps, svgRef) {
  var context = React252.useContext(IconoirContext);
  var props = __assign251(__assign251({}, context), passedProps);
  return React252.createElement(
    "svg",
    __assign251({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React252.createElement("path", { d: "M7 14a2 2 0 100-4 2 2 0 000 4zM17 14a2 2 0 100-4 2 2 0 000 4zM12 9a2 2 0 100-4 2 2 0 000 4zM12 19a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React252.createElement("path", { d: "M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12zm0 0v10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef251 = React252.forwardRef(SvgCinemaOld);
var CinemaOld_default = ForwardRef251;

// node_modules/iconoir-react/dist/esm/Circle.mjs
var React253 = __toESM(require_react(), 1);
var __assign252 = function() {
  __assign252 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign252.apply(this, arguments);
};
function SvgCircle(passedProps, svgRef) {
  var context = React253.useContext(IconoirContext);
  var props = __assign252(__assign252({}, context), passedProps);
  return React253.createElement(
    "svg",
    __assign252({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React253.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef252 = React253.forwardRef(SvgCircle);
var Circle_default = ForwardRef252;

// node_modules/iconoir-react/dist/esm/City.mjs
var React254 = __toESM(require_react(), 1);
var __assign253 = function() {
  __assign253 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign253.apply(this, arguments);
};
function SvgCity(passedProps, svgRef) {
  var context = React254.useContext(IconoirContext);
  var props = __assign253(__assign253({}, context), passedProps);
  return React254.createElement(
    "svg",
    __assign253({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React254.createElement("path", { d: "M7 9.01l.01-.011M11 9.01l.01-.011M7 13.01l.01-.011M11 13.01l.01-.011M7 17.01l.01-.011M11 17.01l.01-.011M15 21H3.6a.6.6 0 01-.6-.6V5.6a.6.6 0 01.6-.6H9V3.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6V9m0 12h5.4a.6.6 0 00.6-.6V9.6a.6.6 0 00-.6-.6H15m0 12v-4m0-8v4m0 0h2m-2 0v4m0 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef253 = React254.forwardRef(SvgCity);
var City_default = ForwardRef253;

// node_modules/iconoir-react/dist/esm/CleanWater.mjs
var React255 = __toESM(require_react(), 1);
var __assign254 = function() {
  __assign254 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign254.apply(this, arguments);
};
function SvgCleanWater(passedProps, svgRef) {
  var context = React255.useContext(IconoirContext);
  var props = __assign254(__assign254({}, context), passedProps);
  return React255.createElement(
    "svg",
    __assign254({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React255.createElement(
      "g",
      { clipPath: "url(#clean-water_svg__clip0_2032_8261)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React255.createElement("path", { d: "M13 21.57A8.132 8.132 0 016.25 7.75l5.326-5.326a.6.6 0 01.848 0L17.75 7.75A8.131 8.131 0 0119.74 16M16 20l2 2 4-4" })
    ),
    React255.createElement(
      "defs",
      null,
      React255.createElement(
        "clipPath",
        { id: "clean-water_svg__clip0_2032_8261" },
        React255.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef254 = React255.forwardRef(SvgCleanWater);
var CleanWater_default = ForwardRef254;

// node_modules/iconoir-react/dist/esm/ClipboardCheck.mjs
var React256 = __toESM(require_react(), 1);
var __assign255 = function() {
  __assign255 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign255.apply(this, arguments);
};
function SvgClipboardCheck(passedProps, svgRef) {
  var context = React256.useContext(IconoirContext);
  var props = __assign255(__assign255({}, context), passedProps);
  return React256.createElement(
    "svg",
    __assign255({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React256.createElement("path", { d: "M8.5 4H6a2 2 0 00-2 2v14a2 2 0 002 2h6M15.5 4H18a2 2 0 012 2v9", stroke: "currentColor", strokeLinecap: "round" }),
    React256.createElement("path", { d: "M8 6.4V4.5a.5.5 0 01.5-.5c.276 0 .504-.224.552-.496C9.2 2.652 9.774 1 12 1s2.8 1.652 2.948 2.504c.048.272.276.496.552.496a.5.5 0 01.5.5v1.9a.6.6 0 01-.6.6H8.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round" }),
    React256.createElement("path", { d: "M15.5 20.5l2 2 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef255 = React256.forwardRef(SvgClipboardCheck);
var ClipboardCheck_default = ForwardRef255;

// node_modules/iconoir-react/dist/esm/ClockRotateRight.mjs
var React257 = __toESM(require_react(), 1);
var __assign256 = function() {
  __assign256 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign256.apply(this, arguments);
};
function SvgClockRotateRight(passedProps, svgRef) {
  var context = React257.useContext(IconoirContext);
  var props = __assign256(__assign256({}, context), passedProps);
  return React257.createElement(
    "svg",
    __assign256({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React257.createElement("path", { d: "M12 6v6h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React257.createElement("path", { d: "M21.888 10.5C21.164 5.689 17.013 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.1 0 7.625-2.468 9.168-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React257.createElement("path", { d: "M17 16h4.4a.6.6 0 01.6.6V21", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef256 = React257.forwardRef(SvgClockRotateRight);
var ClockRotateRight_default = ForwardRef256;

// node_modules/iconoir-react/dist/esm/Clock.mjs
var React258 = __toESM(require_react(), 1);
var __assign257 = function() {
  __assign257 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign257.apply(this, arguments);
};
function SvgClock(passedProps, svgRef) {
  var context = React258.useContext(IconoirContext);
  var props = __assign257(__assign257({}, context), passedProps);
  return React258.createElement(
    "svg",
    __assign257({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React258.createElement("path", { d: "M12 6v6h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React258.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef257 = React258.forwardRef(SvgClock);
var Clock_default = ForwardRef257;

// node_modules/iconoir-react/dist/esm/ClosedCaptions.mjs
var React259 = __toESM(require_react(), 1);
var __assign258 = function() {
  __assign258 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign258.apply(this, arguments);
};
function SvgClosedCaptions(passedProps, svgRef) {
  var context = React259.useContext(IconoirContext);
  var props = __assign258(__assign258({}, context), passedProps);
  return React259.createElement(
    "svg",
    __assign258({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React259.createElement("path", { d: "M1 15V9a6 6 0 016-6h10a6 6 0 016 6v6a6 6 0 01-6 6H7a6 6 0 01-6-6z", stroke: "currentColor" }),
    React259.createElement("path", { d: "M10.5 10l-.172-.172a2.828 2.828 0 00-2-.828v0A2.828 2.828 0 005.5 11.828v.344A2.828 2.828 0 008.328 15v0c.75 0 1.47-.298 2-.828L10.5 14M18.5 10l-.172-.172a2.828 2.828 0 00-2-.828v0a2.828 2.828 0 00-2.828 2.828v.344A2.828 2.828 0 0016.328 15v0c.75 0 1.47-.298 2-.828L18.5 14", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef258 = React259.forwardRef(SvgClosedCaptions);
var ClosedCaptions_default = ForwardRef258;

// node_modules/iconoir-react/dist/esm/Closet.mjs
var React260 = __toESM(require_react(), 1);
var __assign259 = function() {
  __assign259 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign259.apply(this, arguments);
};
function SvgCloset(passedProps, svgRef) {
  var context = React260.useContext(IconoirContext);
  var props = __assign259(__assign259({}, context), passedProps);
  return React260.createElement(
    "svg",
    __assign259({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React260.createElement("path", { d: "M9 14H8M16 14h-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React260.createElement("path", { d: "M12 2h8.4a.6.6 0 01.6.6v18.8a.6.6 0 01-.6.6H12m0-20H3.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H12m0-20v20", stroke: "currentColor" })
  );
}
var ForwardRef259 = React260.forwardRef(SvgCloset);
var Closet_default = ForwardRef259;

// node_modules/iconoir-react/dist/esm/CloudBookAlt.mjs
var React261 = __toESM(require_react(), 1);
var __assign260 = function() {
  __assign260 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign260.apply(this, arguments);
};
function SvgCloudBookAlt(passedProps, svgRef) {
  var context = React261.useContext(IconoirContext);
  var props = __assign260(__assign260({}, context), passedProps);
  return React261.createElement(
    "svg",
    __assign260({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React261.createElement("path", { d: "M8.5 12h7v10L12 20l-3.5 2V12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React261.createElement("path", { d: "M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef260 = React261.forwardRef(SvgCloudBookAlt);
var CloudBookAlt_default = ForwardRef260;

// node_modules/iconoir-react/dist/esm/CloudCheck.mjs
var React262 = __toESM(require_react(), 1);
var __assign261 = function() {
  __assign261 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign261.apply(this, arguments);
};
function SvgCloudCheck(passedProps, svgRef) {
  var context = React262.useContext(IconoirContext);
  var props = __assign261(__assign261({}, context), passedProps);
  return React262.createElement(
    "svg",
    __assign261({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React262.createElement("path", { d: "M8 18l3 3 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React262.createElement("path", { d: "M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef261 = React262.forwardRef(SvgCloudCheck);
var CloudCheck_default = ForwardRef261;

// node_modules/iconoir-react/dist/esm/CloudDesync.mjs
var React263 = __toESM(require_react(), 1);
var __assign262 = function() {
  __assign262 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign262.apply(this, arguments);
};
function SvgCloudDesync(passedProps, svgRef) {
  var context = React263.useContext(IconoirContext);
  var props = __assign262(__assign262({}, context), passedProps);
  return React263.createElement(
    "svg",
    __assign262({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React263.createElement("path", { d: "M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607M16.42 19.487l-1.768 1.768a4 4 0 01-5.656 0l-.354-.353", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React263.createElement("path", { d: "M16.067 21.962l.353-2.475-2.475.354 2.122 2.121zM7.58 16.902l1.768-1.768a4 4 0 015.657 0l.354.353", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React263.createElement("path", { d: "M7.934 14.427l-.353 2.475 2.474-.354-2.12-2.121z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef262 = React263.forwardRef(SvgCloudDesync);
var CloudDesync_default = ForwardRef262;

// node_modules/iconoir-react/dist/esm/CloudDownload.mjs
var React264 = __toESM(require_react(), 1);
var __assign263 = function() {
  __assign263 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign263.apply(this, arguments);
};
function SvgCloudDownload(passedProps, svgRef) {
  var context = React264.useContext(IconoirContext);
  var props = __assign263(__assign263({}, context), passedProps);
  return React264.createElement(
    "svg",
    __assign263({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React264.createElement("path", { d: "M12 13v9m0 0l3.5-3.5M12 22l-3.5-3.5M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef263 = React264.forwardRef(SvgCloudDownload);
var CloudDownload_default = ForwardRef263;

// node_modules/iconoir-react/dist/esm/CloudError.mjs
var React265 = __toESM(require_react(), 1);
var __assign264 = function() {
  __assign264 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign264.apply(this, arguments);
};
function SvgCloudError(passedProps, svgRef) {
  var context = React265.useContext(IconoirContext);
  var props = __assign264(__assign264({}, context), passedProps);
  return React265.createElement(
    "svg",
    __assign264({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React265.createElement("path", { d: "M9 22l3-3m3-3l-3 3m0 0l-3-3m3 3l3 3M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef264 = React265.forwardRef(SvgCloudError);
var CloudError_default = ForwardRef264;

// node_modules/iconoir-react/dist/esm/CloudSunny.mjs
var React266 = __toESM(require_react(), 1);
var __assign265 = function() {
  __assign265 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign265.apply(this, arguments);
};
function SvgCloudSunny(passedProps, svgRef) {
  var context = React266.useContext(IconoirContext);
  var props = __assign265(__assign265({}, context), passedProps);
  return React266.createElement(
    "svg",
    __assign265({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React266.createElement("path", { d: "M6 13c-1.667 0-5 1-5 5s3.333 5 5 5h12c1.667 0 5-1 5-5s-3.333-5-5-5M12 12a3 3 0 100-6 3 3 0 000 6zM19 9h1M12 2V1M18.5 3.5l-1 1M5.5 3.5l1 1M4 9h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef265 = React266.forwardRef(SvgCloudSunny);
var CloudSunny_default = ForwardRef265;

// node_modules/iconoir-react/dist/esm/CloudSync.mjs
var React267 = __toESM(require_react(), 1);
var __assign266 = function() {
  __assign266 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign266.apply(this, arguments);
};
function SvgCloudSync(passedProps, svgRef) {
  var context = React267.useContext(IconoirContext);
  var props = __assign266(__assign266({}, context), passedProps);
  return React267.createElement(
    "svg",
    __assign266({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React267.createElement("path", { d: "M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607M7.58 19.487l1.768 1.768a4 4 0 005.657 0l.354-.353", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React267.createElement("path", { d: "M7.934 21.962l-.353-2.475 2.474.354-2.12 2.121zM16.298 16.902l-1.768-1.768a4 4 0 00-5.657 0l-.353.353", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React267.createElement("path", { d: "M15.944 14.427l.354 2.475-2.475-.354 2.121-2.121z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef266 = React267.forwardRef(SvgCloudSync);
var CloudSync_default = ForwardRef266;

// node_modules/iconoir-react/dist/esm/CloudUpload.mjs
var React268 = __toESM(require_react(), 1);
var __assign267 = function() {
  __assign267 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign267.apply(this, arguments);
};
function SvgCloudUpload(passedProps, svgRef) {
  var context = React268.useContext(IconoirContext);
  var props = __assign267(__assign267({}, context), passedProps);
  return React268.createElement(
    "svg",
    __assign267({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React268.createElement("path", { d: "M12 22v-9m0 0l3.5 3.5M12 13l-3.5 3.5M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef267 = React268.forwardRef(SvgCloudUpload);
var CloudUpload_default = ForwardRef267;

// node_modules/iconoir-react/dist/esm/Cloud.mjs
var React269 = __toESM(require_react(), 1);
var __assign268 = function() {
  __assign268 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign268.apply(this, arguments);
};
function SvgCloud(passedProps, svgRef) {
  var context = React269.useContext(IconoirContext);
  var props = __assign268(__assign268({}, context), passedProps);
  return React269.createElement(
    "svg",
    __assign268({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React269.createElement("path", { d: "M12 4c-6 0-6 4-6 6-1.667 0-5 1-5 5s3.333 5 5 5h12c1.667 0 5-1 5-5s-3.333-5-5-5c0-2 0-6-6-6z", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef268 = React269.forwardRef(SvgCloud);
var Cloud_default = ForwardRef268;

// node_modules/iconoir-react/dist/esm/Clutery.mjs
var React270 = __toESM(require_react(), 1);
var __assign269 = function() {
  __assign269 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign269.apply(this, arguments);
};
function SvgClutery(passedProps, svgRef) {
  var context = React270.useContext(IconoirContext);
  var props = __assign269(__assign269({}, context), passedProps);
  return React270.createElement(
    "svg",
    __assign269({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React270.createElement("path", { d: "M6 20h3m3 0H9m0 0v-5M17 20v-8s2.5-1 2.5-3V4.5M17 8.5v-4M4.5 11c1 2.128 4.5 4 4.5 4s3.5-1.872 4.5-4c1.08-2.297 0-6.5 0-6.5h-9s-1.08 4.203 0 6.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef269 = React270.forwardRef(SvgClutery);
var Clutery_default = ForwardRef269;

// node_modules/iconoir-react/dist/esm/CodeBracketsSquare.mjs
var React271 = __toESM(require_react(), 1);
var __assign270 = function() {
  __assign270 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign270.apply(this, arguments);
};
function SvgCodeBracketsSquare(passedProps, svgRef) {
  var context = React271.useContext(IconoirContext);
  var props = __assign270(__assign270({}, context), passedProps);
  return React271.createElement(
    "svg",
    __assign270({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React271.createElement("path", { d: "M10 17h-.667a2 2 0 01-2-2v-1.889C7.333 12.556 6 12 6 12s1.333-.556 1.333-1.111V9a2 2 0 012-2H10M14 17h.667a2 2 0 002-2v-1.889C16.667 12.556 18 12 18 12s-1.333-.556-1.333-1.111V9a2 2 0 00-2-2H14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React271.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef270 = React271.forwardRef(SvgCodeBracketsSquare);
var CodeBracketsSquare_default = ForwardRef270;

// node_modules/iconoir-react/dist/esm/CodeBrackets.mjs
var React272 = __toESM(require_react(), 1);
var __assign271 = function() {
  __assign271 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign271.apply(this, arguments);
};
function SvgCodeBrackets(passedProps, svgRef) {
  var context = React272.useContext(IconoirContext);
  var props = __assign271(__assign271({}, context), passedProps);
  return React272.createElement(
    "svg",
    __assign271({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React272.createElement("path", { d: "M9 21H8c-1.105 0-2-.894-2-1.999V14c0-1-1.5-2-1.5-2S6 11 6 10V5a2 2 0 012-2h1M15 21h1c1.105 0 2-.894 2-1.999V14c0-1 1.5-2 1.5-2S18 11 18 10V5a2 2 0 00-2-2h-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef271 = React272.forwardRef(SvgCodeBrackets);
var CodeBrackets_default = ForwardRef271;

// node_modules/iconoir-react/dist/esm/Code.mjs
var React273 = __toESM(require_react(), 1);
var __assign272 = function() {
  __assign272 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign272.apply(this, arguments);
};
function SvgCode(passedProps, svgRef) {
  var context = React273.useContext(IconoirContext);
  var props = __assign272(__assign272({}, context), passedProps);
  return React273.createElement(
    "svg",
    __assign272({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React273.createElement("path", { d: "M13.5 6L10 18.5M6.5 8.5L3 12l3.5 3.5M17.5 8.5L21 12l-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef272 = React273.forwardRef(SvgCode);
var Code_default = ForwardRef272;

// node_modules/iconoir-react/dist/esm/Codepen.mjs
var React274 = __toESM(require_react(), 1);
var __assign273 = function() {
  __assign273 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign273.apply(this, arguments);
};
function SvgCodepen(passedProps, svgRef) {
  var context = React274.useContext(IconoirContext);
  var props = __assign273(__assign273({}, context), passedProps);
  return React274.createElement(
    "svg",
    __assign273({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React274.createElement("path", { d: "M21 9v6M3 15V9M12 21v-6M12 3v6M12 15L3 9l9-6 9 6-9 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React274.createElement("path", { d: "M12 21l-9-6 9-6 9 6-9 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef273 = React274.forwardRef(SvgCodepen);
var Codepen_default = ForwardRef273;

// node_modules/iconoir-react/dist/esm/CoffeeCup.mjs
var React275 = __toESM(require_react(), 1);
var __assign274 = function() {
  __assign274 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign274.apply(this, arguments);
};
function SvgCoffeeCup(passedProps, svgRef) {
  var context = React275.useContext(IconoirContext);
  var props = __assign274(__assign274({}, context), passedProps);
  return React275.createElement(
    "svg",
    __assign274({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React275.createElement("path", { d: "M17 11.6V15a6 6 0 01-6 6H9a6 6 0 01-6-6v-3.4a.6.6 0 01.6-.6h12.8a.6.6 0 01.6.6zM12 9c0-1 .714-2 2.143-2v0A2.857 2.857 0 0017 4.143V3.5M8 9v-.5a3 3 0 013-3v0a2 2 0 002-2V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React275.createElement("path", { d: "M16 11h2.5a2.5 2.5 0 010 5H17", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef274 = React275.forwardRef(SvgCoffeeCup);
var CoffeeCup_default = ForwardRef274;

// node_modules/iconoir-react/dist/esm/Coin.mjs
var React276 = __toESM(require_react(), 1);
var __assign275 = function() {
  __assign275 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign275.apply(this, arguments);
};
function SvgCoin(passedProps, svgRef) {
  var context = React276.useContext(IconoirContext);
  var props = __assign275(__assign275({}, context), passedProps);
  return React276.createElement(
    "svg",
    __assign275({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React276.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React276.createElement("path", { d: "M15 8.5c-.685-.685-1.891-1.161-3-1.191M9 15c.644.86 1.843 1.35 3 1.391m0-9.082c-1.32-.036-2.5.561-2.5 2.191 0 3 5.5 1.5 5.5 4.5 0 1.711-1.464 2.446-3 2.391m0-9.082V5.5m0 10.891V18.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef275 = React276.forwardRef(SvgCoin);
var Coin_default = ForwardRef275;

// node_modules/iconoir-react/dist/esm/CoinsSwap.mjs
var React277 = __toESM(require_react(), 1);
var __assign276 = function() {
  __assign276 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign276.apply(this, arguments);
};
function SvgCoinsSwap(passedProps, svgRef) {
  var context = React277.useContext(IconoirContext);
  var props = __assign276(__assign276({}, context), passedProps);
  return React277.createElement(
    "svg",
    __assign276({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React277.createElement("path", { d: "M9.019 9A6.5 6.5 0 1115 14.981M8.5 22a6.5 6.5 0 110-13 6.5 6.5 0 010 13zM22 17a3 3 0 01-3 3h-2m0 0l2-2m-2 2l2 2M2 7a3 3 0 013-3h2m0 0L5 6m2-2L5 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef276 = React277.forwardRef(SvgCoinsSwap);
var CoinsSwap_default = ForwardRef276;

// node_modules/iconoir-react/dist/esm/Coins.mjs
var React278 = __toESM(require_react(), 1);
var __assign277 = function() {
  __assign277 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign277.apply(this, arguments);
};
function SvgCoins(passedProps, svgRef) {
  var context = React278.useContext(IconoirContext);
  var props = __assign277(__assign277({}, context), passedProps);
  return React278.createElement(
    "svg",
    __assign277({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React278.createElement("path", { d: "M16 13c-2.761 0-5-1.12-5-2.5S13.239 8 16 8s5 1.12 5 2.5-2.239 2.5-5 2.5zM11 14.5c0 1.38 2.239 2.5 5 2.5s5-1.12 5-2.5M3 9.5C3 10.88 5.239 12 8 12c1.126 0 2.165-.186 3-.5M3 13c0 1.38 2.239 2.5 5 2.5 1.126 0 2.164-.186 3-.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React278.createElement("path", { d: "M3 5.5v11C3 17.88 5.239 19 8 19c1.126 0 2.164-.186 3-.5M13 8.5v-3M11 10.5v8c0 1.38 2.239 2.5 5 2.5s5-1.12 5-2.5v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React278.createElement("path", { d: "M8 8C5.239 8 3 6.88 3 5.5S5.239 3 8 3s5 1.12 5 2.5S10.761 8 8 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef277 = React278.forwardRef(SvgCoins);
var Coins_default = ForwardRef277;

// node_modules/iconoir-react/dist/esm/CollageFrame.mjs
var React279 = __toESM(require_react(), 1);
var __assign278 = function() {
  __assign278 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign278.apply(this, arguments);
};
function SvgCollageFrame(passedProps, svgRef) {
  var context = React279.useContext(IconoirContext);
  var props = __assign278(__assign278({}, context), passedProps);
  return React279.createElement(
    "svg",
    __assign278({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React279.createElement("path", { d: "M19.4 20H4.6a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6zM11 12V4M4 12h16", stroke: "currentColor" })
  );
}
var ForwardRef278 = React279.forwardRef(SvgCollageFrame);
var CollageFrame_default = ForwardRef278;

// node_modules/iconoir-react/dist/esm/Collapse.mjs
var React280 = __toESM(require_react(), 1);
var __assign279 = function() {
  __assign279 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign279.apply(this, arguments);
};
function SvgCollapse(passedProps, svgRef) {
  var context = React280.useContext(IconoirContext);
  var props = __assign279(__assign279({}, context), passedProps);
  return React280.createElement(
    "svg",
    __assign279({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React280.createElement("path", { d: "M20 20l-5-5m0 0v4m0-4h4M4 20l5-5m0 0v4m0-4H5M20 4l-5 5m0 0V5m0 4h4M4 4l5 5m0 0V5m0 4H5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef279 = React280.forwardRef(SvgCollapse);
var Collapse_default = ForwardRef279;

// node_modules/iconoir-react/dist/esm/ColorFilter.mjs
var React281 = __toESM(require_react(), 1);
var __assign280 = function() {
  __assign280 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign280.apply(this, arguments);
};
function SvgColorFilter(passedProps, svgRef) {
  var context = React281.useContext(IconoirContext);
  var props = __assign280(__assign280({}, context), passedProps);
  return React281.createElement(
    "svg",
    __assign280({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React281.createElement("path", { d: "M12 14.5a6 6 0 100-12 6 6 0 000 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React281.createElement("path", { d: "M16 21.5a6 6 0 100-12 6 6 0 000 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React281.createElement("path", { d: "M8 21.5a6 6 0 100-12 6 6 0 000 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef280 = React281.forwardRef(SvgColorFilter);
var ColorFilter_default = ForwardRef280;

// node_modules/iconoir-react/dist/esm/ColorPickerEmpty.mjs
var React282 = __toESM(require_react(), 1);
var __assign281 = function() {
  __assign281 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign281.apply(this, arguments);
};
function SvgColorPickerEmpty(passedProps, svgRef) {
  var context = React282.useContext(IconoirContext);
  var props = __assign281(__assign281({}, context), passedProps);
  return React282.createElement(
    "svg",
    __assign281({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React282.createElement("path", { d: "M13.879 7.697L16 9.817a1 1 0 010 1.415L8.363 18.87a1.001 1.001 0 01-.326.218L5.54 20.114c-1.233.508-2.466-.725-1.958-1.958L4.61 15.66a.999.999 0 01.218-.327l7.636-7.636a1 1 0 011.415 0zM13.879 3.454L16 5.575m4.243 4.243L18.12 7.697m-2.12-2.122l1.413-1.414a1 1 0 011.414 0l.708.707a1 1 0 010 1.414L18.12 7.697m-2.12-2.122l2.12 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef281 = React282.forwardRef(SvgColorPickerEmpty);
var ColorPickerEmpty_default = ForwardRef281;

// node_modules/iconoir-react/dist/esm/ColorPicker.mjs
var React283 = __toESM(require_react(), 1);
var __assign282 = function() {
  __assign282 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign282.apply(this, arguments);
};
function SvgColorPicker(passedProps, svgRef) {
  var context = React283.useContext(IconoirContext);
  var props = __assign282(__assign282({}, context), passedProps);
  return React283.createElement(
    "svg",
    __assign282({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React283.createElement("path", { d: "M7 13.161l5.464-5.464a1 1 0 011.415 0l2.12 2.12a1 1 0 010 1.415l-1.928 1.929m-7.071 0l-2.172 2.172a.999.999 0 00-.218.327l-1.028 2.496c-.508 1.233.725 2.466 1.958 1.959l2.497-1.028c.122-.05.233-.125.326-.218l5.708-5.708m-7.071 0h7.071M13.878 3.454l2.121 2.121m4.243 4.243l-2.121-2.121m-2.122-2.122l1.414-1.414a1 1 0 011.415 0l.707.707a1 1 0 010 1.414L18.12 7.697m-2.122-2.122l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef282 = React283.forwardRef(SvgColorPicker);
var ColorPicker_default = ForwardRef282;

// node_modules/iconoir-react/dist/esm/ColorWheel.mjs
var React284 = __toESM(require_react(), 1);
var __assign283 = function() {
  __assign283 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign283.apply(this, arguments);
};
function SvgColorWheel(passedProps, svgRef) {
  var context = React284.useContext(IconoirContext);
  var props = __assign283(__assign283({}, context), passedProps);
  return React284.createElement(
    "svg",
    __assign283({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React284.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React284.createElement("path", { d: "M12 16a4 4 0 110-8 4 4 0 010 8zM12 2v6M12 16v6M2 12h6M16 12h6M4.929 4.929L9.172 9.17M14.828 14.829l4.243 4.242M4.929 19.071l4.243-4.242M14.828 9.171l4.243-4.242", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef283 = React284.forwardRef(SvgColorWheel);
var ColorWheel_default = ForwardRef283;

// node_modules/iconoir-react/dist/esm/Combine.mjs
var React285 = __toESM(require_react(), 1);
var __assign284 = function() {
  __assign284 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign284.apply(this, arguments);
};
function SvgCombine(passedProps, svgRef) {
  var context = React285.useContext(IconoirContext);
  var props = __assign284(__assign284({}, context), passedProps);
  return React285.createElement(
    "svg",
    __assign284({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React285.createElement("path", { d: "M21 9.6v10.8a.6.6 0 01-.6.6H9.6a.6.6 0 01-.6-.6V9.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React285.createElement("path", { d: "M15 3.6v10.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef284 = React285.forwardRef(SvgCombine);
var Combine_default = ForwardRef284;

// node_modules/iconoir-react/dist/esm/Commodity.mjs
var React286 = __toESM(require_react(), 1);
var __assign285 = function() {
  __assign285 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign285.apply(this, arguments);
};
function SvgCommodity(passedProps, svgRef) {
  var context = React286.useContext(IconoirContext);
  var props = __assign285(__assign285({}, context), passedProps);
  return React286.createElement(
    "svg",
    __assign285({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React286.createElement("path", { d: "M12.147 18.28l1.184-5.8a.6.6 0 01.588-.48h6.162a.6.6 0 01.588.48l1.184 5.8a.6.6 0 01-.588.72h-8.53a.6.6 0 01-.588-.72z", stroke: "currentColor", strokeLinecap: "round" }),
    React286.createElement("path", { d: "M7.147 11.28l1.184-5.8A.6.6 0 018.918 5h6.164a.6.6 0 01.587.48l1.184 5.8a.6.6 0 01-.588.72h-8.53a.6.6 0 01-.588-.72z", stroke: "currentColor", strokeLinecap: "round" }),
    React286.createElement("path", { d: "M2.147 18.28l1.184-5.8a.6.6 0 01.587-.48h6.163a.6.6 0 01.588.48l1.184 5.8a.6.6 0 01-.588.72h-8.53a.6.6 0 01-.588-.72z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef285 = React286.forwardRef(SvgCommodity);
var Commodity_default = ForwardRef285;

// node_modules/iconoir-react/dist/esm/Community.mjs
var React287 = __toESM(require_react(), 1);
var __assign286 = function() {
  __assign286 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign286.apply(this, arguments);
};
function SvgCommunity(passedProps, svgRef) {
  var context = React287.useContext(IconoirContext);
  var props = __assign286(__assign286({}, context), passedProps);
  return React287.createElement(
    "svg",
    __assign286({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React287.createElement("path", { d: "M7 18v-1a5 5 0 015-5v0a5 5 0 015 5v1M1 18v-1a3 3 0 013-3v0M23 18v-1a3 3 0 00-3-3v0M12 12a3 3 0 100-6 3 3 0 000 6zM4 14a2 2 0 100-4 2 2 0 000 4zM20 14a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef286 = React287.forwardRef(SvgCommunity);
var Community_default = ForwardRef286;

// node_modules/iconoir-react/dist/esm/CompactDisc.mjs
var React288 = __toESM(require_react(), 1);
var __assign287 = function() {
  __assign287 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign287.apply(this, arguments);
};
function SvgCompactDisc(passedProps, svgRef) {
  var context = React288.useContext(IconoirContext);
  var props = __assign287(__assign287({}, context), passedProps);
  return React288.createElement(
    "svg",
    __assign287({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React288.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React288.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef287 = React288.forwardRef(SvgCompactDisc);
var CompactDisc_default = ForwardRef287;

// node_modules/iconoir-react/dist/esm/Compass.mjs
var React289 = __toESM(require_react(), 1);
var __assign288 = function() {
  __assign288 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign288.apply(this, arguments);
};
function SvgCompass(passedProps, svgRef) {
  var context = React289.useContext(IconoirContext);
  var props = __assign288(__assign288({}, context), passedProps);
  return React289.createElement(
    "svg",
    __assign288({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React289.createElement("path", { d: "M10.586 10.586L16.95 7.05l-3.536 6.364L7.05 16.95l3.536-6.364z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React289.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef288 = React289.forwardRef(SvgCompass);
var Compass_default = ForwardRef288;

// node_modules/iconoir-react/dist/esm/CompressLines.mjs
var React290 = __toESM(require_react(), 1);
var __assign289 = function() {
  __assign289 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign289.apply(this, arguments);
};
function SvgCompressLines(passedProps, svgRef) {
  var context = React290.useContext(IconoirContext);
  var props = __assign289(__assign289({}, context), passedProps);
  return React290.createElement(
    "svg",
    __assign289({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React290.createElement("path", { d: "M18 2H6M18 22H6M12 5v5m0 0l3-3m-3 3L9 7M12 19v-5m0 0l3 3m-3-3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef289 = React290.forwardRef(SvgCompressLines);
var CompressLines_default = ForwardRef289;

// node_modules/iconoir-react/dist/esm/Compress.mjs
var React291 = __toESM(require_react(), 1);
var __assign290 = function() {
  __assign290 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign290.apply(this, arguments);
};
function SvgCompress(passedProps, svgRef) {
  var context = React291.useContext(IconoirContext);
  var props = __assign290(__assign290({}, context), passedProps);
  return React291.createElement(
    "svg",
    __assign290({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React291.createElement("path", { d: "M18 12H6M12 22v-6m0 0l3 3m-3-3l-3 3M12 2v6m0 0l3-3m-3 3L9 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef290 = React291.forwardRef(SvgCompress);
var Compress_default = ForwardRef290;

// node_modules/iconoir-react/dist/esm/Computer.mjs
var React292 = __toESM(require_react(), 1);
var __assign291 = function() {
  __assign291 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign291.apply(this, arguments);
};
function SvgComputer(passedProps, svgRef) {
  var context = React292.useContext(IconoirContext);
  var props = __assign291(__assign291({}, context), passedProps);
  return React292.createElement(
    "svg",
    __assign291({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React292.createElement("path", { d: "M2 21h15M21 21h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React292.createElement("path", { d: "M2 16.4V3.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef291 = React292.forwardRef(SvgComputer);
var Computer_default = ForwardRef291;

// node_modules/iconoir-react/dist/esm/Consumable.mjs
var React293 = __toESM(require_react(), 1);
var __assign292 = function() {
  __assign292 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign292.apply(this, arguments);
};
function SvgConsumable(passedProps, svgRef) {
  var context = React293.useContext(IconoirContext);
  var props = __assign292(__assign292({}, context), passedProps);
  return React293.createElement(
    "svg",
    __assign292({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React293.createElement("path", { d: "M22.003 3v4.497A.503.503 0 0121.5 8v0a.52.52 0 01-.466-.3A10 10 0 0012.003 2c-5.185 0-9.449 3.947-9.95 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React293.createElement("path", { d: "M17 10v5a2 2 0 01-2 2H9a2 2 0 01-2-2v-5a2 2 0 012-2h6a2 2 0 012 2zM12 11V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React293.createElement("path", { d: "M2.05 21v-4.497c0-.278.226-.503.504-.503v0c.2 0 .38.119.466.3a10.001 10.001 0 009.03 5.7c5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef292 = React293.forwardRef(SvgConsumable);
var Consumable_default = ForwardRef292;

// node_modules/iconoir-react/dist/esm/Contactless.mjs
var React294 = __toESM(require_react(), 1);
var __assign293 = function() {
  __assign293 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign293.apply(this, arguments);
};
function SvgContactless(passedProps, svgRef) {
  var context = React294.useContext(IconoirContext);
  var props = __assign293(__assign293({}, context), passedProps);
  return React294.createElement(
    "svg",
    __assign293({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React294.createElement("path", { d: "M15 21.5c4-5.5 4-13.5 0-19M11.5 20c3.5-5 3.5-11 0-16M8.5 18c2.667-3.75 2.667-8.25 0-12M5.5 16c1.5-2.5 1.5-5.5 0-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef293 = React294.forwardRef(SvgContactless);
var Contactless_default = ForwardRef293;

// node_modules/iconoir-react/dist/esm/ControlSlider.mjs
var React295 = __toESM(require_react(), 1);
var __assign294 = function() {
  __assign294 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign294.apply(this, arguments);
};
function SvgControlSlider(passedProps, svgRef) {
  var context = React295.useContext(IconoirContext);
  var props = __assign294(__assign294({}, context), passedProps);
  return React295.createElement(
    "svg",
    __assign294({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React295.createElement("path", { d: "M6.755 17.283l-1.429-10A2 2 0 017.306 5h3.388a2 2 0 011.98 2.283l-1.429 10A2 2 0 019.265 19h-.53a2 2 0 01-1.98-1.717z", stroke: "currentColor" }),
    React295.createElement("path", { d: "M2 12h4m16 0H12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef294 = React295.forwardRef(SvgControlSlider);
var ControlSlider_default = ForwardRef294;

// node_modules/iconoir-react/dist/esm/Cookie.mjs
var React296 = __toESM(require_react(), 1);
var __assign295 = function() {
  __assign295 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign295.apply(this, arguments);
};
function SvgCookie(passedProps, svgRef) {
  var context = React296.useContext(IconoirContext);
  var props = __assign295(__assign295({}, context), passedProps);
  return React296.createElement(
    "svg",
    __assign295({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React296.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React296.createElement("path", { d: "M7.5 11a.5.5 0 110-1 .5.5 0 010 1zM13 18a1 1 0 110-2 1 1 0 010 2zM11 7.01l.01-.011M8 16.01l.01-.011M16 9.01l.01-.011M17 14.01l.01-.011M13 12.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef295 = React296.forwardRef(SvgCookie);
var Cookie_default = ForwardRef295;

// node_modules/iconoir-react/dist/esm/Cooling.mjs
var React297 = __toESM(require_react(), 1);
var __assign296 = function() {
  __assign296 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign296.apply(this, arguments);
};
function SvgCooling(passedProps, svgRef) {
  var context = React297.useContext(IconoirContext);
  var props = __assign296(__assign296({}, context), passedProps);
  return React297.createElement(
    "svg",
    __assign296({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React297.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM12 7v5m0 5v-5m0 0L7.5 9.5M12 12l4.5 2.5M12 12l4.5-2.5M12 12l-4.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef296 = React297.forwardRef(SvgCooling);
var Cooling_default = ForwardRef296;

// node_modules/iconoir-react/dist/esm/Copy.mjs
var React298 = __toESM(require_react(), 1);
var __assign297 = function() {
  __assign297 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign297.apply(this, arguments);
};
function SvgCopy(passedProps, svgRef) {
  var context = React298.useContext(IconoirContext);
  var props = __assign297(__assign297({}, context), passedProps);
  return React298.createElement(
    "svg",
    __assign297({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React298.createElement("path", { d: "M19.4 20H9.6a.6.6 0 01-.6-.6V9.6a.6.6 0 01.6-.6h9.8a.6.6 0 01.6.6v9.8a.6.6 0 01-.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React298.createElement("path", { d: "M15 9V4.6a.6.6 0 00-.6-.6H4.6a.6.6 0 00-.6.6v9.8a.6.6 0 00.6.6H9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef297 = React298.forwardRef(SvgCopy);
var Copy_default = ForwardRef297;

// node_modules/iconoir-react/dist/esm/Copyright.mjs
var React299 = __toESM(require_react(), 1);
var __assign298 = function() {
  __assign298 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign298.apply(this, arguments);
};
function SvgCopyright(passedProps, svgRef) {
  var context = React299.useContext(IconoirContext);
  var props = __assign298(__assign298({}, context), passedProps);
  return React299.createElement(
    "svg",
    __assign298({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React299.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM13.5 9.17a3 3 0 100 5.659", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef298 = React299.forwardRef(SvgCopyright);
var Copyright_default = ForwardRef298;

// node_modules/iconoir-react/dist/esm/CornerBottomLeft.mjs
var React300 = __toESM(require_react(), 1);
var __assign299 = function() {
  __assign299 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign299.apply(this, arguments);
};
function SvgCornerBottomLeft(passedProps, svgRef) {
  var context = React300.useContext(IconoirContext);
  var props = __assign299(__assign299({}, context), passedProps);
  return React300.createElement(
    "svg",
    __assign299({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React300.createElement("path", { d: "M4 8l.01.011M4 4l.01.011M8 4l.01.011M12 4l.01.011M16 4l.01.011M20 4l.01.011M20 8l.01.011M20 12l.01.011M20 16l.01.011M20 20l.01.011M16 20l.01.011M4 12.01v8h8v-8H4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef299 = React300.forwardRef(SvgCornerBottomLeft);
var CornerBottomLeft_default = ForwardRef299;

// node_modules/iconoir-react/dist/esm/CornerBottomRight.mjs
var React301 = __toESM(require_react(), 1);
var __assign300 = function() {
  __assign300 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign300.apply(this, arguments);
};
function SvgCornerBottomRight(passedProps, svgRef) {
  var context = React301.useContext(IconoirContext);
  var props = __assign300(__assign300({}, context), passedProps);
  return React301.createElement(
    "svg",
    __assign300({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React301.createElement("path", { d: "M20.01 8l-.01.011M20.01 4l-.01.011M16.01 4l-.01.011M12.01 4l-.01.011M8.01 4L8 4.011M4.01 4L4 4.011M4.01 8L4 8.011M4.01 12l-.01.011M4.01 16l-.01.011M4.01 20l-.01.011M8.01 20l-.01.011M20.01 12.01v8h-8v-8h8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef300 = React301.forwardRef(SvgCornerBottomRight);
var CornerBottomRight_default = ForwardRef300;

// node_modules/iconoir-react/dist/esm/CornerTopLeft.mjs
var React302 = __toESM(require_react(), 1);
var __assign301 = function() {
  __assign301 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign301.apply(this, arguments);
};
function SvgCornerTopLeft(passedProps, svgRef) {
  var context = React302.useContext(IconoirContext);
  var props = __assign301(__assign301({}, context), passedProps);
  return React302.createElement(
    "svg",
    __assign301({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React302.createElement("path", { d: "M4 16.01l.01-.011M4 20.01l.01-.011M8 20.01l.01-.011M12 20.01l.01-.011M16 20.01l.01-.011M20 20.01l.01-.011M20 16.01l.01-.011M20 12.01l.01-.011M20 8.01l.01-.011M20 4.01l.01-.011M16 4.01l.01-.011M4 12V4h8v8H4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef301 = React302.forwardRef(SvgCornerTopLeft);
var CornerTopLeft_default = ForwardRef301;

// node_modules/iconoir-react/dist/esm/CornerTopRight.mjs
var React303 = __toESM(require_react(), 1);
var __assign302 = function() {
  __assign302 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign302.apply(this, arguments);
};
function SvgCornerTopRight(passedProps, svgRef) {
  var context = React303.useContext(IconoirContext);
  var props = __assign302(__assign302({}, context), passedProps);
  return React303.createElement(
    "svg",
    __assign302({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React303.createElement("path", { d: "M20.01 16.01l-.01-.011M20.01 20.01l-.01-.011M16.01 20.01l-.01-.011M12.01 20.01l-.01-.011M8.01 20.01L8 19.999M4.01 20.01L4 19.999M4.01 16.01L4 15.999M4.01 12.01L4 11.999M4.01 8.01L4 7.999M4.01 4.01L4 3.999M8.01 4.01L8 3.999M20.01 12V4h-8v8h8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef302 = React303.forwardRef(SvgCornerTopRight);
var CornerTopRight_default = ForwardRef302;

// node_modules/iconoir-react/dist/esm/CpuWarning.mjs
var React304 = __toESM(require_react(), 1);
var __assign303 = function() {
  __assign303 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign303.apply(this, arguments);
};
function SvgCpuWarning(passedProps, svgRef) {
  var context = React304.useContext(IconoirContext);
  var props = __assign303(__assign303({}, context), passedProps);
  return React304.createElement(
    "svg",
    __assign303({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React304.createElement("path", { d: "M19 2v4M19 10.01l.01-.011M16 14v1.4a.6.6 0 01-.6.6H8.6a.6.6 0 01-.6-.6V8.6a.6.6 0 01.6-.6H14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React304.createElement("path", { d: "M20 14v5.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6H14M20 17h2M17 20v2M12 20v2M7 20v2M4 17H2M4 12H2M4 7H2M12 4V2M7 4V2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef303 = React304.forwardRef(SvgCpuWarning);
var CpuWarning_default = ForwardRef303;

// node_modules/iconoir-react/dist/esm/Cpu.mjs
var React305 = __toESM(require_react(), 1);
var __assign304 = function() {
  __assign304 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign304.apply(this, arguments);
};
function SvgCpu(passedProps, svgRef) {
  var context = React305.useContext(IconoirContext);
  var props = __assign304(__assign304({}, context), passedProps);
  return React305.createElement(
    "svg",
    __assign304({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React305.createElement("path", { d: "M8 15.4V8.6a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6v6.8a.6.6 0 01-.6.6H8.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React305.createElement("path", { d: "M20 4.6v14.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6zM17 4V2M12 4V2M7 4V2M7 20v2M12 20v2M17 20v2M20 17h2M20 12h2M20 7h2M4 17H2M4 12H2M4 7H2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef304 = React305.forwardRef(SvgCpu);
var Cpu_default = ForwardRef304;

// node_modules/iconoir-react/dist/esm/CrackedEgg.mjs
var React306 = __toESM(require_react(), 1);
var __assign305 = function() {
  __assign305 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign305.apply(this, arguments);
};
function SvgCrackedEgg(passedProps, svgRef) {
  var context = React306.useContext(IconoirContext);
  var props = __assign305(__assign305({}, context), passedProps);
  return React306.createElement(
    "svg",
    __assign305({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React306.createElement("path", { d: "M12 22a8 8 0 008-8c0-4.418-3.582-12-8-12S4 9.582 4 14a8 8 0 008 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React306.createElement("path", { d: "M9.5 3.5L12 8l-2.5 3 2.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef305 = React306.forwardRef(SvgCrackedEgg);
var CrackedEgg_default = ForwardRef305;

// node_modules/iconoir-react/dist/esm/CreativeCommons.mjs
var React307 = __toESM(require_react(), 1);
var __assign306 = function() {
  __assign306 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign306.apply(this, arguments);
};
function SvgCreativeCommons(passedProps, svgRef) {
  var context = React307.useContext(IconoirContext);
  var props = __assign306(__assign306({}, context), passedProps);
  return React307.createElement(
    "svg",
    __assign306({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React307.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM10.5 9.17a3 3 0 100 5.659M16.75 9.17a3 3 0 100 5.659", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef306 = React307.forwardRef(SvgCreativeCommons);
var CreativeCommons_default = ForwardRef306;

// node_modules/iconoir-react/dist/esm/CreditCard.mjs
var React308 = __toESM(require_react(), 1);
var __assign307 = function() {
  __assign307 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign307.apply(this, arguments);
};
function SvgCreditCard(passedProps, svgRef) {
  var context = React308.useContext(IconoirContext);
  var props = __assign307(__assign307({}, context), passedProps);
  return React308.createElement(
    "svg",
    __assign307({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React308.createElement("path", { d: "M22 9v8a2 2 0 01-2 2H4a2 2 0 01-2-2V7a2 2 0 012-2h16a2 2 0 012 2v2zm0 0H6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef307 = React308.forwardRef(SvgCreditCard);
var CreditCard_default = ForwardRef307;

// node_modules/iconoir-react/dist/esm/CreditCards.mjs
var React309 = __toESM(require_react(), 1);
var __assign308 = function() {
  __assign308 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign308.apply(this, arguments);
};
function SvgCreditCards(passedProps, svgRef) {
  var context = React309.useContext(IconoirContext);
  var props = __assign308(__assign308({}, context), passedProps);
  return React309.createElement(
    "svg",
    __assign308({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React309.createElement("path", { d: "M22 11.429V18a2 2 0 01-2 2H7a2 2 0 01-2-2v-1.5m17-5.071V10a2 2 0 00-2-2h-1m3 3.429h-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React309.createElement("path", { d: "M19 8v6.5a2 2 0 01-2 2H4a2 2 0 01-2-2v-8a2 2 0 012-2h13a2 2 0 012 2V8zm0 0H5.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef308 = React309.forwardRef(SvgCreditCards);
var CreditCards_default = ForwardRef308;

// node_modules/iconoir-react/dist/esm/Crib.mjs
var React310 = __toESM(require_react(), 1);
var __assign309 = function() {
  __assign309 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign309.apply(this, arguments);
};
function SvgCrib(passedProps, svgRef) {
  var context = React310.useContext(IconoirContext);
  var props = __assign309(__assign309({}, context), passedProps);
  return React310.createElement(
    "svg",
    __assign309({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React310.createElement("path", { d: "M3 5v16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React310.createElement("path", { d: "M3 16h18M3 7h18M18 16V7M14 16V7M10 16V7M6 16V7M3 19h18", stroke: "currentColor", strokeLinejoin: "round" }),
    React310.createElement("path", { d: "M21 5v16M21 5a1 1 0 100-2 1 1 0 000 2zM3 5a1 1 0 100-2 1 1 0 000 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef309 = React310.forwardRef(SvgCrib);
var Crib_default = ForwardRef309;

// node_modules/iconoir-react/dist/esm/CropRotateBl.mjs
var React311 = __toESM(require_react(), 1);
var __assign310 = function() {
  __assign310 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign310.apply(this, arguments);
};
function SvgCropRotateBl(passedProps, svgRef) {
  var context = React311.useContext(IconoirContext);
  var props = __assign310(__assign310({}, context), passedProps);
  return React311.createElement(
    "svg",
    __assign310({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React311.createElement("path", { d: "M4 14v3a4 4 0 004 4h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React311.createElement("path", { d: "M1.5 16.5L4 14l2.5 2.5M20 11V5a1 1 0 00-1-1h-6M8 4h2M20 16v-2M10 2v11a1 1 0 001 1h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef310 = React311.forwardRef(SvgCropRotateBl);
var CropRotateBl_default = ForwardRef310;

// node_modules/iconoir-react/dist/esm/CropRotateBr.mjs
var React312 = __toESM(require_react(), 1);
var __assign311 = function() {
  __assign311 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign311.apply(this, arguments);
};
function SvgCropRotateBr(passedProps, svgRef) {
  var context = React312.useContext(IconoirContext);
  var props = __assign311(__assign311({}, context), passedProps);
  return React312.createElement(
    "svg",
    __assign311({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React312.createElement("path", { d: "M14 20h3a4 4 0 004-4v-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React312.createElement("path", { d: "M16.5 22.5L14 20l2.5-2.5M14 11V5a1 1 0 00-1-1H7M2 4h2M14 16v-2M4 2v11a1 1 0 001 1h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef311 = React312.forwardRef(SvgCropRotateBr);
var CropRotateBr_default = ForwardRef311;

// node_modules/iconoir-react/dist/esm/CropRotateTl.mjs
var React313 = __toESM(require_react(), 1);
var __assign312 = function() {
  __assign312 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign312.apply(this, arguments);
};
function SvgCropRotateTl(passedProps, svgRef) {
  var context = React313.useContext(IconoirContext);
  var props = __assign312(__assign312({}, context), passedProps);
  return React313.createElement(
    "svg",
    __assign312({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React313.createElement("path", { d: "M10 4H7a4 4 0 00-4 4v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React313.createElement("path", { d: "M7.5 1.5L10 4 7.5 6.5M20 17v-6a1 1 0 00-1-1h-6M8 10h2M20 22v-2M10 8v11a1 1 0 001 1h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef312 = React313.forwardRef(SvgCropRotateTl);
var CropRotateTl_default = ForwardRef312;

// node_modules/iconoir-react/dist/esm/CropRotateTr.mjs
var React314 = __toESM(require_react(), 1);
var __assign313 = function() {
  __assign313 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign313.apply(this, arguments);
};
function SvgCropRotateTr(passedProps, svgRef) {
  var context = React314.useContext(IconoirContext);
  var props = __assign313(__assign313({}, context), passedProps);
  return React314.createElement(
    "svg",
    __assign313({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React314.createElement("path", { d: "M20 10V7a4 4 0 00-4-4h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React314.createElement("path", { d: "M22.5 7.5L20 10l-2.5-2.5M14 17v-6a1 1 0 00-1-1H7M2 10h2M14 22v-2M4 8v11a1 1 0 001 1h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef313 = React314.forwardRef(SvgCropRotateTr);
var CropRotateTr_default = ForwardRef313;

// node_modules/iconoir-react/dist/esm/Crop.mjs
var React315 = __toESM(require_react(), 1);
var __assign314 = function() {
  __assign314 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign314.apply(this, arguments);
};
function SvgCrop(passedProps, svgRef) {
  var context = React315.useContext(IconoirContext);
  var props = __assign314(__assign314({}, context), passedProps);
  return React315.createElement(
    "svg",
    __assign314({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React315.createElement("path", { d: "M21 18H6V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React315.createElement("path", { d: "M3 6h15v15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef314 = React315.forwardRef(SvgCrop);
var Crop_default = ForwardRef314;

// node_modules/iconoir-react/dist/esm/CrownCircle.mjs
var React316 = __toESM(require_react(), 1);
var __assign315 = function() {
  __assign315 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign315.apply(this, arguments);
};
function SvgCrownCircle(passedProps, svgRef) {
  var context = React316.useContext(IconoirContext);
  var props = __assign315(__assign315({}, context), passedProps);
  return React316.createElement(
    "svg",
    __assign315({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React316.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React316.createElement("path", { d: "M16.8 15.5l1.2-7-4.2 2.1L12 8.5l-1.8 2.1L6 8.5l1.2 7h9.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef315 = React316.forwardRef(SvgCrownCircle);
var CrownCircle_default = ForwardRef315;

// node_modules/iconoir-react/dist/esm/Crown.mjs
var React317 = __toESM(require_react(), 1);
var __assign316 = function() {
  __assign316 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign316.apply(this, arguments);
};
function SvgCrown(passedProps, svgRef) {
  var context = React317.useContext(IconoirContext);
  var props = __assign316(__assign316({}, context), passedProps);
  return React317.createElement(
    "svg",
    __assign316({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React317.createElement("path", { d: "M19.2 17L21 7l-6.3 3L12 7l-2.7 3L3 7l1.8 10h14.4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef316 = React317.forwardRef(SvgCrown);
var Crown_default = ForwardRef316;

// node_modules/iconoir-react/dist/esm/Css3.mjs
var React318 = __toESM(require_react(), 1);
var __assign317 = function() {
  __assign317 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign317.apply(this, arguments);
};
function SvgCss3(passedProps, svgRef) {
  var context = React318.useContext(IconoirContext);
  var props = __assign317(__assign317({}, context), passedProps);
  return React318.createElement(
    "svg",
    __assign317({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React318.createElement("path", { d: "M4 3l1.778 17.09L12 22l6.222-1.91L20 3H4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React318.createElement("path", { d: "M7 7h9.5l-1 10-3.5 1-3.5-1-.25-2.5M16 11.5H7.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef317 = React318.forwardRef(SvgCss3);
var Css3_default = ForwardRef317;

// node_modules/iconoir-react/dist/esm/CubeReplaceFace.mjs
var React319 = __toESM(require_react(), 1);
var __assign318 = function() {
  __assign318 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign318.apply(this, arguments);
};
function SvgCubeReplaceFace(passedProps, svgRef) {
  var context = React319.useContext(IconoirContext);
  var props = __assign318(__assign318({}, context), passedProps);
  return React319.createElement(
    "svg",
    __assign318({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React319.createElement(
      "g",
      { clipPath: "url(#cube-replace-face_svg__clip0_3377_18972)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React319.createElement("path", { d: "M19 13.5v5.152a.6.6 0 01-.302.52l-6.4 3.658a.6.6 0 01-.596 0l-6.4-3.657A.6.6 0 015 18.652V13M12 22.5V17M23 8L11 1M13 15L1 8M1 8c3-5 7-2 10-7M13 15c3-5 7-2 10-7" })
    ),
    React319.createElement(
      "defs",
      null,
      React319.createElement(
        "clipPath",
        { id: "cube-replace-face_svg__clip0_3377_18972" },
        React319.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef318 = React319.forwardRef(SvgCubeReplaceFace);
var CubeReplaceFace_default = ForwardRef318;

// node_modules/iconoir-react/dist/esm/CursorPointer.mjs
var React320 = __toESM(require_react(), 1);
var __assign319 = function() {
  __assign319 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign319.apply(this, arguments);
};
function SvgCursorPointer(passedProps, svgRef) {
  var context = React320.useContext(IconoirContext);
  var props = __assign319(__assign319({}, context), passedProps);
  return React320.createElement(
    "svg",
    __assign319({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React320.createElement("path", { clipRule: "evenodd", d: "M19.503 9.97c1.204.489 1.112 2.224-.137 2.583l-6.306 1.813-2.88 5.895c-.57 1.168-2.295.957-2.568-.314L4.677 6.257A1.369 1.369 0 016.53 4.7L19.503 9.97z", stroke: "currentColor" })
  );
}
var ForwardRef319 = React320.forwardRef(SvgCursorPointer);
var CursorPointer_default = ForwardRef319;

// node_modules/iconoir-react/dist/esm/CutAlt.mjs
var React321 = __toESM(require_react(), 1);
var __assign320 = function() {
  __assign320 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign320.apply(this, arguments);
};
function SvgCutAlt(passedProps, svgRef) {
  var context = React321.useContext(IconoirContext);
  var props = __assign320(__assign320({}, context), passedProps);
  return React321.createElement(
    "svg",
    __assign320({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React321.createElement("path", { d: "M6.236 8a3 3 0 10-4.472-4 3 3 0 004.472 4zm0 0L16 16M17 12h1M22 12h1M6.236 16a3 3 0 11-4.472 4 3 3 0 014.472-4zm0 0L16 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef320 = React321.forwardRef(SvgCutAlt);
var CutAlt_default = ForwardRef320;

// node_modules/iconoir-react/dist/esm/CutSolidWithCurve.mjs
var React322 = __toESM(require_react(), 1);
var __assign321 = function() {
  __assign321 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign321.apply(this, arguments);
};
function SvgCutSolidWithCurve(passedProps, svgRef) {
  var context = React322.useContext(IconoirContext);
  var props = __assign321(__assign321({}, context), passedProps);
  return React322.createElement(
    "svg",
    __assign321({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React322.createElement("path", { d: "M3.528 7.293L9 10.333M22 2h-2m-8 10v-2a8.004 8.004 0 015.5-7.602M22 12h-2m-8 10v-2a8.004 8.004 0 015.5-7.602", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React322.createElement("path", { d: "M12 22l-8.691-4.828A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0L15 3.667M12 12L3.528 7.293M12 21v-9M15 13.5V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef321 = React322.forwardRef(SvgCutSolidWithCurve);
var CutSolidWithCurve_default = ForwardRef321;

// node_modules/iconoir-react/dist/esm/Cut.mjs
var React323 = __toESM(require_react(), 1);
var __assign322 = function() {
  __assign322 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign322.apply(this, arguments);
};
function SvgCut(passedProps, svgRef) {
  var context = React323.useContext(IconoirContext);
  var props = __assign322(__assign322({}, context), passedProps);
  return React323.createElement(
    "svg",
    __assign322({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React323.createElement("path", { d: "M17 12h1M22 12h1M6.236 7a3 3 0 10-4.472-4 3 3 0 004.472 4zm0 0L19 18M6.236 17a3 3 0 11-4.472 4 3 3 0 014.472-4zm0 0L19 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef322 = React323.forwardRef(SvgCut);
var Cut_default = ForwardRef322;

// node_modules/iconoir-react/dist/esm/Cycling.mjs
var React324 = __toESM(require_react(), 1);
var __assign323 = function() {
  __assign323 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign323.apply(this, arguments);
};
function SvgCycling(passedProps, svgRef) {
  var context = React324.useContext(IconoirContext);
  var props = __assign323(__assign323({}, context), passedProps);
  return React324.createElement(
    "svg",
    __assign323({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React324.createElement("path", { d: "M14 7a2 2 0 100-4 2 2 0 000 4zM18 21a3 3 0 100-6 3 3 0 000 6zM6 21a3 3 0 100-6 3 3 0 000 6zM11.5 18l1.5-4-4.882-2 3-3.5 3 2.5h3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef323 = React324.forwardRef(SvgCycling);
var Cycling_default = ForwardRef323;

// node_modules/iconoir-react/dist/esm/Cylinder.mjs
var React325 = __toESM(require_react(), 1);
var __assign324 = function() {
  __assign324 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign324.apply(this, arguments);
};
function SvgCylinder(passedProps, svgRef) {
  var context = React325.useContext(IconoirContext);
  var props = __assign324(__assign324({}, context), passedProps);
  return React325.createElement(
    "svg",
    __assign324({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React325.createElement("path", { d: "M12 2c8 0 8 3 8 3s0 3-8 3-8-3-8-3 0-3 8-3zM12 16c8 0 8 3 8 3s0 3-8 3-8-3-8-3 0-3 8-3z", stroke: "currentColor" }),
    React325.createElement("path", { d: "M20 5v14M4 5v14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef324 = React325.forwardRef(SvgCylinder);
var Cylinder_default = ForwardRef324;

// node_modules/iconoir-react/dist/esm/DashFlag.mjs
var React326 = __toESM(require_react(), 1);
var __assign325 = function() {
  __assign325 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign325.apply(this, arguments);
};
function SvgDashFlag(passedProps, svgRef) {
  var context = React326.useContext(IconoirContext);
  var props = __assign325(__assign325({}, context), passedProps);
  return React326.createElement(
    "svg",
    __assign325({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React326.createElement("path", { d: "M5 15l.95-10.454A.6.6 0 016.548 4h13.795a.6.6 0 01.598.654l-.891 9.8a.6.6 0 01-.598.546H5zm0 0l-.6 6M9 7.5l7 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef325 = React326.forwardRef(SvgDashFlag);
var DashFlag_default = ForwardRef325;

// node_modules/iconoir-react/dist/esm/DashboardDots.mjs
var React327 = __toESM(require_react(), 1);
var __assign326 = function() {
  __assign326 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign326.apply(this, arguments);
};
function SvgDashboardDots(passedProps, svgRef) {
  var context = React327.useContext(IconoirContext);
  var props = __assign326(__assign326({}, context), passedProps);
  return React327.createElement(
    "svg",
    __assign326({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React327.createElement("path", { d: "M12 7.01l.01-.011M16 9.01l.01-.011M8 9.01l.01-.011M18 13.01l.01-.011M6 13.01l.01-.011M17 17.01l.01-.011M7 17.01l.01-.011M12 17l1-6M8.5 20.001H4A9.956 9.956 0 012 14C2 8.477 6.477 4 12 4s10 4.477 10 10c0 2.252-.744 4.33-2 6.001L15.5 20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React327.createElement("path", { d: "M12 23a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef326 = React327.forwardRef(SvgDashboardDots);
var DashboardDots_default = ForwardRef326;

// node_modules/iconoir-react/dist/esm/DashboardSpeed.mjs
var React328 = __toESM(require_react(), 1);
var __assign327 = function() {
  __assign327 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign327.apply(this, arguments);
};
function SvgDashboardSpeed(passedProps, svgRef) {
  var context = React328.useContext(IconoirContext);
  var props = __assign327(__assign327({}, context), passedProps);
  return React328.createElement(
    "svg",
    __assign327({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React328.createElement("path", { d: "M12 4v4M4 8l2.5 2.5M17.5 10.5L20 8M3 17h3M12 17l1-6M18 17h3M8.5 20.001H4A9.956 9.956 0 012 14C2 8.477 6.477 4 12 4s10 4.477 10 10c0 2.252-.744 4.33-2 6.001L15.5 20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React328.createElement("path", { d: "M12 23a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef327 = React328.forwardRef(SvgDashboardSpeed);
var DashboardSpeed_default = ForwardRef327;

// node_modules/iconoir-react/dist/esm/Dashboard.mjs
var React329 = __toESM(require_react(), 1);
var __assign328 = function() {
  __assign328 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign328.apply(this, arguments);
};
function SvgDashboard(passedProps, svgRef) {
  var context = React329.useContext(IconoirContext);
  var props = __assign328(__assign328({}, context), passedProps);
  return React329.createElement(
    "svg",
    __assign328({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React329.createElement("path", { d: "M15 15.8c0-1.767-3-4.8-3-4.8s-3 3.033-3 4.8 1.343 3.2 3 3.2 3-1.433 3-3.2z", stroke: "currentColor" }),
    React329.createElement("path", { d: "M12 4v4M3.5 7.5l3 3M17.5 10.5l3-3M2 17h4M18 17h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef328 = React329.forwardRef(SvgDashboard);
var Dashboard_default = ForwardRef328;

// node_modules/iconoir-react/dist/esm/DataTransferBoth.mjs
var React330 = __toESM(require_react(), 1);
var __assign329 = function() {
  __assign329 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign329.apply(this, arguments);
};
function SvgDataTransferBoth(passedProps, svgRef) {
  var context = React330.useContext(IconoirContext);
  var props = __assign329(__assign329({}, context), passedProps);
  return React330.createElement(
    "svg",
    __assign329({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React330.createElement("path", { d: "M17 20V4m0 0l3 3m-3-3l-3 3M7 4v16m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef329 = React330.forwardRef(SvgDataTransferBoth);
var DataTransferBoth_default = ForwardRef329;

// node_modules/iconoir-react/dist/esm/DataTransferCheck.mjs
var React331 = __toESM(require_react(), 1);
var __assign330 = function() {
  __assign330 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign330.apply(this, arguments);
};
function SvgDataTransferCheck(passedProps, svgRef) {
  var context = React331.useContext(IconoirContext);
  var props = __assign330(__assign330({}, context), passedProps);
  return React331.createElement(
    "svg",
    __assign330({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React331.createElement("path", { d: "M14 19l3 3 5-5M17 14V4m0 0l3 3m-3-3l-3 3M7 4v16m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef330 = React331.forwardRef(SvgDataTransferCheck);
var DataTransferCheck_default = ForwardRef330;

// node_modules/iconoir-react/dist/esm/DataTransferDown.mjs
var React332 = __toESM(require_react(), 1);
var __assign331 = function() {
  __assign331 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign331.apply(this, arguments);
};
function SvgDataTransferDown(passedProps, svgRef) {
  var context = React332.useContext(IconoirContext);
  var props = __assign331(__assign331({}, context), passedProps);
  return React332.createElement(
    "svg",
    __assign331({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React332.createElement("path", { d: "M17 20v-1M17 15v-1M7 4v16m0 0l-3-3m3 3l3-3M17 10V4m0 0l-3 3m3-3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef331 = React332.forwardRef(SvgDataTransferDown);
var DataTransferDown_default = ForwardRef331;

// node_modules/iconoir-react/dist/esm/DataTransferUp.mjs
var React333 = __toESM(require_react(), 1);
var __assign332 = function() {
  __assign332 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign332.apply(this, arguments);
};
function SvgDataTransferUp(passedProps, svgRef) {
  var context = React333.useContext(IconoirContext);
  var props = __assign332(__assign332({}, context), passedProps);
  return React333.createElement(
    "svg",
    __assign332({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React333.createElement("path", { d: "M7 4v1M7 9v1M17 20V4m0 0l3 3m-3-3l-3 3M7 14v6m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef332 = React333.forwardRef(SvgDataTransferUp);
var DataTransferUp_default = ForwardRef332;

// node_modules/iconoir-react/dist/esm/DataTransferWarning.mjs
var React334 = __toESM(require_react(), 1);
var __assign333 = function() {
  __assign333 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign333.apply(this, arguments);
};
function SvgDataTransferWarning(passedProps, svgRef) {
  var context = React334.useContext(IconoirContext);
  var props = __assign333(__assign333({}, context), passedProps);
  return React334.createElement(
    "svg",
    __assign333({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React334.createElement("path", { d: "M7 4v1M7 9v1M17 12V4m0 0l3 3m-3-3l-3 3M20 16v2M20 22.01l.01-.011M7 14v6m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef333 = React334.forwardRef(SvgDataTransferWarning);
var DataTransferWarning_default = ForwardRef333;

// node_modules/iconoir-react/dist/esm/DatabaseBackup.mjs
var React335 = __toESM(require_react(), 1);
var __assign334 = function() {
  __assign334 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign334.apply(this, arguments);
};
function SvgDatabaseBackup(passedProps, svgRef) {
  var context = React335.useContext(IconoirContext);
  var props = __assign334(__assign334({}, context), passedProps);
  return React335.createElement(
    "svg",
    __assign334({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React335.createElement("path", { d: "M4 6v6s0 3 7 3c.592 0 1.135-.021 1.631-.06M18 6v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React335.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6M22.666 17.667C22.048 16.097 20.634 15 18.99 15c-1.758 0-3.252 1.255-3.793 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React335.createElement("path", { d: "M20.995 17.667h1.671v0c.185 0 .334-.15.334-.334v-1.888M15.334 20.333C15.952 21.903 17.366 23 19.01 23c1.758 0 3.252-1.255 3.793-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React335.createElement("path", { d: "M17.005 20.333h-1.671v0a.334.334 0 00-.334.334v1.888", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef334 = React335.forwardRef(SvgDatabaseBackup);
var DatabaseBackup_default = ForwardRef334;

// node_modules/iconoir-react/dist/esm/DatabaseExport.mjs
var React336 = __toESM(require_react(), 1);
var __assign335 = function() {
  __assign335 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign335.apply(this, arguments);
};
function SvgDatabaseExport(passedProps, svgRef) {
  var context = React336.useContext(IconoirContext);
  var props = __assign335(__assign335({}, context), passedProps);
  return React336.createElement(
    "svg",
    __assign335({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React336.createElement("path", { d: "M19 16v6m0 0l3-3m-3 3l-3-3M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React336.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef335 = React336.forwardRef(SvgDatabaseExport);
var DatabaseExport_default = ForwardRef335;

// node_modules/iconoir-react/dist/esm/DatabaseMonitor.mjs
var React337 = __toESM(require_react(), 1);
var __assign336 = function() {
  __assign336 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign336.apply(this, arguments);
};
function SvgDatabaseMonitor(passedProps, svgRef) {
  var context = React337.useContext(IconoirContext);
  var props = __assign336(__assign336({}, context), passedProps);
  return React337.createElement(
    "svg",
    __assign336({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React337.createElement("path", { d: "M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React337.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6M18 22h3m-1.5-2.571h2.333V16h-4.666v3.429H19.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef336 = React337.forwardRef(SvgDatabaseMonitor);
var DatabaseMonitor_default = ForwardRef336;

// node_modules/iconoir-react/dist/esm/DatabaseRestore.mjs
var React338 = __toESM(require_react(), 1);
var __assign337 = function() {
  __assign337 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign337.apply(this, arguments);
};
function SvgDatabaseRestore(passedProps, svgRef) {
  var context = React338.useContext(IconoirContext);
  var props = __assign337(__assign337({}, context), passedProps);
  return React338.createElement(
    "svg",
    __assign337({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React338.createElement("path", { d: "M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React338.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6M19 22v-6m0 0l3 3m-3-3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef337 = React338.forwardRef(SvgDatabaseRestore);
var DatabaseRestore_default = ForwardRef337;

// node_modules/iconoir-react/dist/esm/DatabaseScript.mjs
var React339 = __toESM(require_react(), 1);
var __assign338 = function() {
  __assign338 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign338.apply(this, arguments);
};
function SvgDatabaseScript(passedProps, svgRef) {
  var context = React339.useContext(IconoirContext);
  var props = __assign338(__assign338({}, context), passedProps);
  return React339.createElement(
    "svg",
    __assign338({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React339.createElement("path", { d: "M22 14V6a3 3 0 00-3-3H9a3 3 0 00-3 3v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React339.createElement("path", { d: "M12 21H6a4 4 0 010-8h12a4 4 0 104 4v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef338 = React339.forwardRef(SvgDatabaseScript);
var DatabaseScript_default = ForwardRef338;

// node_modules/iconoir-react/dist/esm/DatabaseSettings.mjs
var React340 = __toESM(require_react(), 1);
var __assign339 = function() {
  __assign339 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign339.apply(this, arguments);
};
function SvgDatabaseSettings(passedProps, svgRef) {
  var context = React340.useContext(IconoirContext);
  var props = __assign339(__assign339({}, context), passedProps);
  return React340.createElement(
    "svg",
    __assign339({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React340.createElement("path", { d: "M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React340.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6M19 21a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React340.createElement("path", { d: "M19 22a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "0.3 2" })
  );
}
var ForwardRef339 = React340.forwardRef(SvgDatabaseSettings);
var DatabaseSettings_default = ForwardRef339;

// node_modules/iconoir-react/dist/esm/DatabaseStar.mjs
var React341 = __toESM(require_react(), 1);
var __assign340 = function() {
  __assign340 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign340.apply(this, arguments);
};
function SvgDatabaseStar(passedProps, svgRef) {
  var context = React341.useContext(IconoirContext);
  var props = __assign340(__assign340({}, context), passedProps);
  return React341.createElement(
    "svg",
    __assign340({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React341.createElement("path", { d: "M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React341.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6M17.306 17.113l.909-1.927a.312.312 0 01.57 0l.91 1.927 2.032.311c.261.04.365.376.177.568l-1.471 1.5.347 2.118c.044.272-.229.48-.462.351l-1.818-1-1.818 1c-.233.129-.506-.079-.462-.351l.347-2.118-1.47-1.5c-.19-.192-.085-.528.176-.568l2.033-.31z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef340 = React341.forwardRef(SvgDatabaseStar);
var DatabaseStar_default = ForwardRef340;

// node_modules/iconoir-react/dist/esm/DatabaseStats.mjs
var React342 = __toESM(require_react(), 1);
var __assign341 = function() {
  __assign341 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign341.apply(this, arguments);
};
function SvgDatabaseStats(passedProps, svgRef) {
  var context = React342.useContext(IconoirContext);
  var props = __assign341(__assign341({}, context), passedProps);
  return React342.createElement(
    "svg",
    __assign341({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React342.createElement("path", { d: "M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React342.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React342.createElement("path", { d: "M15 21v-2M18 21v-4M21 21v-6", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef341 = React342.forwardRef(SvgDatabaseStats);
var DatabaseStats_default = ForwardRef341;

// node_modules/iconoir-react/dist/esm/DatabaseTag.mjs
var React343 = __toESM(require_react(), 1);
var __assign342 = function() {
  __assign342 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign342.apply(this, arguments);
};
function SvgDatabaseTag(passedProps, svgRef) {
  var context = React343.useContext(IconoirContext);
  var props = __assign342(__assign342({}, context), passedProps);
  return React343.createElement(
    "svg",
    __assign342({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React343.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React343.createElement("path", { d: "M16.357 12c.714 0 2.143 0 2.143-2s-1.429-2-2.143-2H13.5v4m2.857 0H13.5m2.857 0c.714 0 2.143 0 2.143 2s-1.429 2-2.143 2H13.5v-4M8.357 8H5.5v8h2.857c.714 0 2.143 0 2.143-2v-4c0-2-1.429-2-2.143-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef342 = React343.forwardRef(SvgDatabaseTag);
var DatabaseTag_default = ForwardRef342;

// node_modules/iconoir-react/dist/esm/DbCheck.mjs
var React344 = __toESM(require_react(), 1);
var __assign343 = function() {
  __assign343 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign343.apply(this, arguments);
};
function SvgDbCheck(passedProps, svgRef) {
  var context = React344.useContext(IconoirContext);
  var props = __assign343(__assign343({}, context), passedProps);
  return React344.createElement(
    "svg",
    __assign343({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React344.createElement("path", { d: "M14 19l3 3 5-5M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React344.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef343 = React344.forwardRef(SvgDbCheck);
var DbCheck_default = ForwardRef343;

// node_modules/iconoir-react/dist/esm/DbError.mjs
var React345 = __toESM(require_react(), 1);
var __assign344 = function() {
  __assign344 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign344.apply(this, arguments);
};
function SvgDbError(passedProps, svgRef) {
  var context = React345.useContext(IconoirContext);
  var props = __assign344(__assign344({}, context), passedProps);
  return React345.createElement(
    "svg",
    __assign344({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React345.createElement("path", { d: "M17.121 21.364l2.122-2.121m2.121-2.122l-2.121 2.122m0 0L17.12 17.12m2.122 2.122l2.121 2.121M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React345.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef344 = React345.forwardRef(SvgDbError);
var DbError_default = ForwardRef344;

// node_modules/iconoir-react/dist/esm/DbSearch.mjs
var React346 = __toESM(require_react(), 1);
var __assign345 = function() {
  __assign345 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign345.apply(this, arguments);
};
function SvgDbSearch(passedProps, svgRef) {
  var context = React346.useContext(IconoirContext);
  var props = __assign345(__assign345({}, context), passedProps);
  return React346.createElement(
    "svg",
    __assign345({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React346.createElement("path", { d: "M20.5 20.5L22 22M16 18.5a2.5 2.5 0 105 0 2.5 2.5 0 00-5 0zM4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React346.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef345 = React346.forwardRef(SvgDbSearch);
var DbSearch_default = ForwardRef345;

// node_modules/iconoir-react/dist/esm/DbStar.mjs
var React347 = __toESM(require_react(), 1);
var __assign346 = function() {
  __assign346 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign346.apply(this, arguments);
};
function SvgDbStar(passedProps, svgRef) {
  var context = React347.useContext(IconoirContext);
  var props = __assign346(__assign346({}, context), passedProps);
  return React347.createElement(
    "svg",
    __assign346({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React347.createElement("path", { d: "M4 6s0-3 7-3 7 3 7 3M4 6s0 3 7 3 7-3 7-3M4 6v6m14-6v6s0 3-7 3-7-3-7-3m7 9c-7 0-7-3-7-3v-6M17.306 17.113l.909-1.927a.312.312 0 01.57 0l.91 1.927 2.032.311c.261.04.365.376.177.568l-1.471 1.5.347 2.118c.044.272-.229.48-.462.351l-1.818-1-1.818 1c-.233.129-.506-.079-.462-.351l.347-2.118-1.47-1.5c-.19-.192-.085-.528.176-.568l2.033-.31z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef346 = React347.forwardRef(SvgDbStar);
var DbStar_default = ForwardRef346;

// node_modules/iconoir-react/dist/esm/DbWarning.mjs
var React348 = __toESM(require_react(), 1);
var __assign347 = function() {
  __assign347 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign347.apply(this, arguments);
};
function SvgDbWarning(passedProps, svgRef) {
  var context = React348.useContext(IconoirContext);
  var props = __assign347(__assign347({}, context), passedProps);
  return React348.createElement(
    "svg",
    __assign347({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React348.createElement("path", { d: "M20 16v2M20 22.01l.01-.011M4 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React348.createElement("path", { d: "M11 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3zM11 21c-7 0-7-3-7-3v-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef347 = React348.forwardRef(SvgDbWarning);
var DbWarning_default = ForwardRef347;

// node_modules/iconoir-react/dist/esm/Db.mjs
var React349 = __toESM(require_react(), 1);
var __assign348 = function() {
  __assign348 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign348.apply(this, arguments);
};
function SvgDb(passedProps, svgRef) {
  var context = React349.useContext(IconoirContext);
  var props = __assign348(__assign348({}, context), passedProps);
  return React349.createElement(
    "svg",
    __assign348({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React349.createElement("path", { d: "M5 12v6s0 3 7 3 7-3 7-3v-6", stroke: "currentColor" }),
    React349.createElement("path", { d: "M5 6v6s0 3 7 3 7-3 7-3V6", stroke: "currentColor" }),
    React349.createElement("path", { d: "M12 3c7 0 7 3 7 3s0 3-7 3-7-3-7-3 0-3 7-3z", stroke: "currentColor" })
  );
}
var ForwardRef348 = React349.forwardRef(SvgDb);
var Db_default = ForwardRef348;

// node_modules/iconoir-react/dist/esm/DeCompress.mjs
var React350 = __toESM(require_react(), 1);
var __assign349 = function() {
  __assign349 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign349.apply(this, arguments);
};
function SvgDeCompress(passedProps, svgRef) {
  var context = React350.useContext(IconoirContext);
  var props = __assign349(__assign349({}, context), passedProps);
  return React350.createElement(
    "svg",
    __assign349({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React350.createElement("path", { d: "M18 12H6M12 16v6m0 0l3-3m-3 3l-3-3M12 8V2m0 0l3 3m-3-3L9 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef349 = React350.forwardRef(SvgDeCompress);
var DeCompress_default = ForwardRef349;

// node_modules/iconoir-react/dist/esm/DeleteCircle.mjs
var React351 = __toESM(require_react(), 1);
var __assign350 = function() {
  __assign350 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign350.apply(this, arguments);
};
function SvgDeleteCircle(passedProps, svgRef) {
  var context = React351.useContext(IconoirContext);
  var props = __assign350(__assign350({}, context), passedProps);
  return React351.createElement(
    "svg",
    __assign350({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React351.createElement("path", { d: "M9.172 14.828L12.001 12m2.828-2.828L12.001 12m0 0L9.172 9.172M12.001 12l2.828 2.828M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef350 = React351.forwardRef(SvgDeleteCircle);
var DeleteCircle_default = ForwardRef350;

// node_modules/iconoir-react/dist/esm/DeliveryTruck.mjs
var React352 = __toESM(require_react(), 1);
var __assign351 = function() {
  __assign351 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign351.apply(this, arguments);
};
function SvgDeliveryTruck(passedProps, svgRef) {
  var context = React352.useContext(IconoirContext);
  var props = __assign351(__assign351({}, context), passedProps);
  return React352.createElement(
    "svg",
    __assign351({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React352.createElement("path", { d: "M8 19a2 2 0 100-4 2 2 0 000 4zM18 19a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React352.createElement("path", { d: "M10.05 17H15V6.6a.6.6 0 00-.6-.6H1M5.65 17H3.6a.6.6 0 01-.6-.6v-4.9", stroke: "currentColor", strokeLinecap: "round" }),
    React352.createElement("path", { d: "M2 9h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React352.createElement("path", { d: "M15 9h5.61a.6.6 0 01.548.356l1.79 4.028a.6.6 0 01.052.243V16.4a.6.6 0 01-.6.6h-1.9M15 17h1", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef351 = React352.forwardRef(SvgDeliveryTruck);
var DeliveryTruck_default = ForwardRef351;

// node_modules/iconoir-react/dist/esm/Delivery.mjs
var React353 = __toESM(require_react(), 1);
var __assign352 = function() {
  __assign352 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign352.apply(this, arguments);
};
function SvgDelivery(passedProps, svgRef) {
  var context = React353.useContext(IconoirContext);
  var props = __assign352(__assign352({}, context), passedProps);
  return React353.createElement(
    "svg",
    __assign352({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React353.createElement("path", { d: "M2 4h16a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2v-6M12 9V4M8 8H3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef352 = React353.forwardRef(SvgDelivery);
var Delivery_default = ForwardRef352;

// node_modules/iconoir-react/dist/esm/Depth.mjs
var React354 = __toESM(require_react(), 1);
var __assign353 = function() {
  __assign353 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign353.apply(this, arguments);
};
function SvgDepth(passedProps, svgRef) {
  var context = React354.useContext(IconoirContext);
  var props = __assign353(__assign353({}, context), passedProps);
  return React354.createElement(
    "svg",
    __assign353({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React354.createElement("path", { d: "M2 20h20M5 4h14M3 16.01l.01-.011M21.01 16.01l-.01-.011M4 12.01l.01-.011M20.01 12.01l-.01-.011M5 8.01l.01-.011M19.01 8.01L19 7.999M12 7v10m0-10l-1.5 1.5M12 7l1.5 1.5M12 17l-3-3m3 3l3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef353 = React354.forwardRef(SvgDepth);
var Depth_default = ForwardRef353;

// node_modules/iconoir-react/dist/esm/DesignNib.mjs
var React355 = __toESM(require_react(), 1);
var __assign354 = function() {
  __assign354 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign354.apply(this, arguments);
};
function SvgDesignNib(passedProps, svgRef) {
  var context = React355.useContext(IconoirContext);
  var props = __assign354(__assign354({}, context), passedProps);
  return React355.createElement(
    "svg",
    __assign354({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React355.createElement(
      "g",
      { clipPath: "url(#design-nib_svg__clip0_2585_14438)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React355.createElement("path", { d: "M17.674 11.408l-1.905 5.715a.6.6 0 01-.398.386L3.693 20.98a.6.6 0 01-.74-.765L6.745 8.841a.6.6 0 01.34-.365l5.387-2.218a.6.6 0 01.653.13l4.404 4.405a.6.6 0 01.145.615zM3.296 20.602l6.364-6.364" }),
      React355.createElement("path", { d: "M17.792 11.056l2.828-2.829a2 2 0 000-2.828L18.5 3.277a2 2 0 00-2.829 0l-2.828 2.829M11.781 12.116a1.5 1.5 0 10-2.121 2.122 1.5 1.5 0 002.121-2.122z" })
    ),
    React355.createElement(
      "defs",
      null,
      React355.createElement(
        "clipPath",
        { id: "design-nib_svg__clip0_2585_14438" },
        React355.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef354 = React355.forwardRef(SvgDesignNib);
var DesignNib_default = ForwardRef354;

// node_modules/iconoir-react/dist/esm/DesignPencil.mjs
var React356 = __toESM(require_react(), 1);
var __assign355 = function() {
  __assign355 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign355.apply(this, arguments);
};
function SvgDesignPencil(passedProps, svgRef) {
  var context = React356.useContext(IconoirContext);
  var props = __assign355(__assign355({}, context), passedProps);
  return React356.createElement(
    "svg",
    __assign355({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React356.createElement("path", { d: "M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React356.createElement("path", { d: "M8 21.168V14l4-7 4 7v7.168", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React356.createElement("path", { d: "M8 14s1.127 1 2 1 2-1 2-1 1.127 1 2 1 2-1 2-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef355 = React356.forwardRef(SvgDesignPencil);
var DesignPencil_default = ForwardRef355;

// node_modules/iconoir-react/dist/esm/Desk.mjs
var React357 = __toESM(require_react(), 1);
var __assign356 = function() {
  __assign356 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign356.apply(this, arguments);
};
function SvgDesk(passedProps, svgRef) {
  var context = React357.useContext(IconoirContext);
  var props = __assign356(__assign356({}, context), passedProps);
  return React357.createElement(
    "svg",
    __assign356({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React357.createElement("path", { d: "M4 7v10M1 7h22M4 10h16M14 14h6M20 7v10M14 7v10M17 10v1M17 14v1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef356 = React357.forwardRef(SvgDesk);
var Desk_default = ForwardRef356;

// node_modules/iconoir-react/dist/esm/DevModeLaptop.mjs
var React358 = __toESM(require_react(), 1);
var __assign357 = function() {
  __assign357 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign357.apply(this, arguments);
};
function SvgDevModeLaptop(passedProps, svgRef) {
  var context = React358.useContext(IconoirContext);
  var props = __assign357(__assign357({}, context), passedProps);
  return React358.createElement(
    "svg",
    __assign357({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React358.createElement("path", { d: "M3.2 14.222V4a2 2 0 012-2h13.6a2 2 0 012 2v10.222m-17.6 0h17.6m-17.6 0l-1.48 5.234A2 2 0 003.644 22h16.712a2 2 0 001.924-2.544l-1.48-5.234", stroke: "currentColor" }),
    React358.createElement("path", { d: "M11 19h2M14 6l2 2-2 2M10 6L8 8l2 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef357 = React358.forwardRef(SvgDevModeLaptop);
var DevModeLaptop_default = ForwardRef357;

// node_modules/iconoir-react/dist/esm/DevModePhone.mjs
var React359 = __toESM(require_react(), 1);
var __assign358 = function() {
  __assign358 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign358.apply(this, arguments);
};
function SvgDevModePhone(passedProps, svgRef) {
  var context = React359.useContext(IconoirContext);
  var props = __assign358(__assign358({}, context), passedProps);
  return React359.createElement(
    "svg",
    __assign358({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React359.createElement("path", { d: "M12 19.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React359.createElement("path", { d: "M18 18v3.4a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6V18M18 6V2.6a.6.6 0 00-.6-.6H6.6a.6.6 0 00-.6.6V6", stroke: "currentColor", strokeLinecap: "round" }),
    React359.createElement("path", { d: "M15.5 8.5L19 12l-3.5 3.5M8.5 8.5L5 12l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef358 = React359.forwardRef(SvgDevModePhone);
var DevModePhone_default = ForwardRef358;

// node_modules/iconoir-react/dist/esm/Developer.mjs
var React360 = __toESM(require_react(), 1);
var __assign359 = function() {
  __assign359 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign359.apply(this, arguments);
};
function SvgDeveloper(passedProps, svgRef) {
  var context = React360.useContext(IconoirContext);
  var props = __assign359(__assign359({}, context), passedProps);
  return React360.createElement(
    "svg",
    __assign359({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React360.createElement("path", { d: "M6.818 22v-2.857C6.662 17.592 5.633 16.416 4.682 15m9.772 7v-1.714c4.91 0 4.364-5.714 4.364-5.714s2.182 0 2.182-2.286l-2.182-3.428c0-4.572-3.709-6.816-7.636-6.857-2.2-.023-3.957.53-5.27 1.499", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React360.createElement("path", { d: "M13 7l2 2.5-2 2.5M5 7L3 9.5 5 12M10 6l-2 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef359 = React360.forwardRef(SvgDeveloper);
var Developer_default = ForwardRef359;

// node_modules/iconoir-react/dist/esm/DewPoint.mjs
var React361 = __toESM(require_react(), 1);
var __assign360 = function() {
  __assign360 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign360.apply(this, arguments);
};
function SvgDewPoint(passedProps, svgRef) {
  var context = React361.useContext(IconoirContext);
  var props = __assign360(__assign360({}, context), passedProps);
  return React361.createElement(
    "svg",
    __assign360({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React361.createElement("path", { d: "M5 12a5 5 0 106 0M5 12V3h6v9M11 3h2M11 6h2M11 9h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React361.createElement("path", { d: "M8 14a2 2 0 100 4 2 2 0 000-4zm0 0V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React361.createElement("path", { clipRule: "evenodd", d: "M19 3s3 2.993 3 4.887c0 1.655-1.345 3-3 3-1.656 0-2.988-1.345-3-3C16.01 5.992 19 3 19 3z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef360 = React361.forwardRef(SvgDewPoint);
var DewPoint_default = ForwardRef360;

// node_modules/iconoir-react/dist/esm/Dialpad.mjs
var React362 = __toESM(require_react(), 1);
var __assign361 = function() {
  __assign361 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign361.apply(this, arguments);
};
function SvgDialpad(passedProps, svgRef) {
  var context = React362.useContext(IconoirContext);
  var props = __assign361(__assign361({}, context), passedProps);
  return React362.createElement(
    "svg",
    __assign361({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React362.createElement("path", { d: "M5.5 5a.5.5 0 110-1 .5.5 0 010 1zM5.5 10a.5.5 0 110-1 .5.5 0 010 1zM5.5 15a.5.5 0 110-1 .5.5 0 010 1zM12 5a.5.5 0 110-1 .5.5 0 010 1zM12 10a.5.5 0 110-1 .5.5 0 010 1zM12 15a.5.5 0 110-1 .5.5 0 010 1zM12 20a.5.5 0 110-1 .5.5 0 010 1zM18.5 5a.5.5 0 110-1 .5.5 0 010 1zM18.5 10a.5.5 0 110-1 .5.5 0 010 1zM18.5 15a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef361 = React362.forwardRef(SvgDialpad);
var Dialpad_default = ForwardRef361;

// node_modules/iconoir-react/dist/esm/Diameter.mjs
var React363 = __toESM(require_react(), 1);
var __assign362 = function() {
  __assign362 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign362.apply(this, arguments);
};
function SvgDiameter(passedProps, svgRef) {
  var context = React363.useContext(IconoirContext);
  var props = __assign362(__assign362({}, context), passedProps);
  return React363.createElement(
    "svg",
    __assign362({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React363.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zM19 12l-3-3m3 3l-3 3m3-3H5m0 0l3-3m-3 3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef362 = React363.forwardRef(SvgDiameter);
var Diameter_default = ForwardRef362;

// node_modules/iconoir-react/dist/esm/DiceFive.mjs
var React364 = __toESM(require_react(), 1);
var __assign363 = function() {
  __assign363 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign363.apply(this, arguments);
};
function SvgDiceFive(passedProps, svgRef) {
  var context = React364.useContext(IconoirContext);
  var props = __assign363(__assign363({}, context), passedProps);
  return React364.createElement(
    "svg",
    __assign363({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React364.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React364.createElement("path", { d: "M7.5 8a.5.5 0 110-1 .5.5 0 010 1zM16.5 8a.5.5 0 110-1 .5.5 0 010 1zM12 12.5a.5.5 0 110-1 .5.5 0 010 1zM7.5 17a.5.5 0 110-1 .5.5 0 010 1zM16.5 17a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef363 = React364.forwardRef(SvgDiceFive);
var DiceFive_default = ForwardRef363;

// node_modules/iconoir-react/dist/esm/DiceFour.mjs
var React365 = __toESM(require_react(), 1);
var __assign364 = function() {
  __assign364 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign364.apply(this, arguments);
};
function SvgDiceFour(passedProps, svgRef) {
  var context = React365.useContext(IconoirContext);
  var props = __assign364(__assign364({}, context), passedProps);
  return React365.createElement(
    "svg",
    __assign364({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React365.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React365.createElement("path", { d: "M7.5 8a.5.5 0 110-1 .5.5 0 010 1zM16.5 8a.5.5 0 110-1 .5.5 0 010 1zM7.5 17a.5.5 0 110-1 .5.5 0 010 1zM16.5 17a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef364 = React365.forwardRef(SvgDiceFour);
var DiceFour_default = ForwardRef364;

// node_modules/iconoir-react/dist/esm/DiceOne.mjs
var React366 = __toESM(require_react(), 1);
var __assign365 = function() {
  __assign365 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign365.apply(this, arguments);
};
function SvgDiceOne(passedProps, svgRef) {
  var context = React366.useContext(IconoirContext);
  var props = __assign365(__assign365({}, context), passedProps);
  return React366.createElement(
    "svg",
    __assign365({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React366.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React366.createElement("path", { d: "M12 12.5a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef365 = React366.forwardRef(SvgDiceOne);
var DiceOne_default = ForwardRef365;

// node_modules/iconoir-react/dist/esm/DiceSix.mjs
var React367 = __toESM(require_react(), 1);
var __assign366 = function() {
  __assign366 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign366.apply(this, arguments);
};
function SvgDiceSix(passedProps, svgRef) {
  var context = React367.useContext(IconoirContext);
  var props = __assign366(__assign366({}, context), passedProps);
  return React367.createElement(
    "svg",
    __assign366({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React367.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React367.createElement("path", { d: "M7.5 8a.5.5 0 110-1 .5.5 0 010 1zM16.5 8a.5.5 0 110-1 .5.5 0 010 1zM7.5 12.5a.5.5 0 110-1 .5.5 0 010 1zM16.5 12.5a.5.5 0 110-1 .5.5 0 010 1zM7.5 17a.5.5 0 110-1 .5.5 0 010 1zM16.5 17a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef366 = React367.forwardRef(SvgDiceSix);
var DiceSix_default = ForwardRef366;

// node_modules/iconoir-react/dist/esm/DiceThree.mjs
var React368 = __toESM(require_react(), 1);
var __assign367 = function() {
  __assign367 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign367.apply(this, arguments);
};
function SvgDiceThree(passedProps, svgRef) {
  var context = React368.useContext(IconoirContext);
  var props = __assign367(__assign367({}, context), passedProps);
  return React368.createElement(
    "svg",
    __assign367({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React368.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React368.createElement("path", { d: "M7.5 8a.5.5 0 110-1 .5.5 0 010 1zM12 12.5a.5.5 0 110-1 .5.5 0 010 1zM16.5 17a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef367 = React368.forwardRef(SvgDiceThree);
var DiceThree_default = ForwardRef367;

// node_modules/iconoir-react/dist/esm/DiceTwo.mjs
var React369 = __toESM(require_react(), 1);
var __assign368 = function() {
  __assign368 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign368.apply(this, arguments);
};
function SvgDiceTwo(passedProps, svgRef) {
  var context = React369.useContext(IconoirContext);
  var props = __assign368(__assign368({}, context), passedProps);
  return React369.createElement(
    "svg",
    __assign368({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React369.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React369.createElement("path", { d: "M7.5 8a.5.5 0 110-1 .5.5 0 010 1zM16.5 17a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef368 = React369.forwardRef(SvgDiceTwo);
var DiceTwo_default = ForwardRef368;

// node_modules/iconoir-react/dist/esm/DimmerSwitch.mjs
var React370 = __toESM(require_react(), 1);
var __assign369 = function() {
  __assign369 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign369.apply(this, arguments);
};
function SvgDimmerSwitch(passedProps, svgRef) {
  var context = React370.useContext(IconoirContext);
  var props = __assign369(__assign369({}, context), passedProps);
  return React370.createElement(
    "svg",
    __assign369({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React370.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React370.createElement("path", { d: "M12 18a6 6 0 100-12 6 6 0 000 12zM15.5 7.5L12 12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef369 = React370.forwardRef(SvgDimmerSwitch);
var DimmerSwitch_default = ForwardRef369;

// node_modules/iconoir-react/dist/esm/DirectorChair.mjs
var React371 = __toESM(require_react(), 1);
var __assign370 = function() {
  __assign370 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign370.apply(this, arguments);
};
function SvgDirectorChair(passedProps, svgRef) {
  var context = React371.useContext(IconoirContext);
  var props = __assign370(__assign370({}, context), passedProps);
  return React371.createElement(
    "svg",
    __assign370({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React371.createElement("path", { d: "M19 12L5 21M5 3v9M19 3v9M5 12l14 9M4 12h16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React371.createElement("path", { d: "M5 4h14M5 7h14", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef370 = React371.forwardRef(SvgDirectorChair);
var DirectorChair_default = ForwardRef370;

// node_modules/iconoir-react/dist/esm/Discord.mjs
var React372 = __toESM(require_react(), 1);
var __assign371 = function() {
  __assign371 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign371.apply(this, arguments);
};
function SvgDiscord(passedProps, svgRef) {
  var context = React372.useContext(IconoirContext);
  var props = __assign371(__assign371({}, context), passedProps);
  return React372.createElement(
    "svg",
    __assign371({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React372.createElement("path", { d: "M5.5 16c5 2.5 8 2.5 13 0M15.5 17.5l1 2s4.171-1.328 5.5-3.5c0-1 .53-8.147-3-10.5-1.5-1-4-1.5-4-1.5l-1 2h-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React372.createElement("path", { d: "M8.528 17.5l-1 2s-4.171-1.328-5.5-3.5c0-1-.53-8.147 3-10.5 1.5-1 4-1.5 4-1.5l1 2h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React372.createElement("path", { d: "M8.5 14c-.828 0-1.5-.895-1.5-2s.672-2 1.5-2 1.5.895 1.5 2-.672 2-1.5 2zM15.5 14c-.828 0-1.5-.895-1.5-2s.672-2 1.5-2 1.5.895 1.5 2-.672 2-1.5 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef371 = React372.forwardRef(SvgDiscord);
var Discord_default = ForwardRef371;

// node_modules/iconoir-react/dist/esm/Dishwasher.mjs
var React373 = __toESM(require_react(), 1);
var __assign372 = function() {
  __assign372 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign372.apply(this, arguments);
};
function SvgDishwasher(passedProps, svgRef) {
  var context = React373.useContext(IconoirContext);
  var props = __assign372(__assign372({}, context), passedProps);
  return React373.createElement(
    "svg",
    __assign372({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React373.createElement("path", { d: "M7.5 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2h-2.5M21 7H3M12 16v5m0 0h-2m2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React373.createElement("path", { d: "M12 16c1.657 0 3-1.492 3-3.333V10H9v2.667C9 14.507 10.343 16 12 16zM18 5.01l.01-.011M15 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef372 = React373.forwardRef(SvgDishwasher);
var Dishwasher_default = ForwardRef372;

// node_modules/iconoir-react/dist/esm/Display4K.mjs
var React374 = __toESM(require_react(), 1);
var __assign373 = function() {
  __assign373 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign373.apply(this, arguments);
};
function SvgDisplay4K(passedProps, svgRef) {
  var context = React374.useContext(IconoirContext);
  var props = __assign373(__assign373({}, context), passedProps);
  return React374.createElement(
    "svg",
    __assign373({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React374.createElement("path", { d: "M13.5 9v4m0 2v-2m0 0l1.37-1.566M17 9l-2.13 2.434m0 0L17 15M9.5 9l-3 4.5H10V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React374.createElement("path", { d: "M2 18.4V5.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef373 = React374.forwardRef(SvgDisplay4K);
var Display4K_default = ForwardRef373;

// node_modules/iconoir-react/dist/esm/DivideSelection1.mjs
var React375 = __toESM(require_react(), 1);
var __assign374 = function() {
  __assign374 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign374.apply(this, arguments);
};
function SvgDivideSelection1(passedProps, svgRef) {
  var context = React375.useContext(IconoirContext);
  var props = __assign374(__assign374({}, context), passedProps);
  return React375.createElement(
    "svg",
    __assign374({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React375.createElement("path", { d: "M20 20H4v-4h16v4zM2 12h20M7 4H4v3M11 4h2M17 4h3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef374 = React375.forwardRef(SvgDivideSelection1);
var DivideSelection1_default = ForwardRef374;

// node_modules/iconoir-react/dist/esm/DivideSelection2.mjs
var React376 = __toESM(require_react(), 1);
var __assign375 = function() {
  __assign375 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign375.apply(this, arguments);
};
function SvgDivideSelection2(passedProps, svgRef) {
  var context = React376.useContext(IconoirContext);
  var props = __assign375(__assign375({}, context), passedProps);
  return React376.createElement(
    "svg",
    __assign375({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React376.createElement("path", { d: "M2 12h20M7 4H4v3M11 4h2M17 4h3v3M11 20h2M7 20H4v-3M17 20h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef375 = React376.forwardRef(SvgDivideSelection2);
var DivideSelection2_default = ForwardRef375;

// node_modules/iconoir-react/dist/esm/DivideThree.mjs
var React377 = __toESM(require_react(), 1);
var __assign376 = function() {
  __assign376 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign376.apply(this, arguments);
};
function SvgDivideThree(passedProps, svgRef) {
  var context = React377.useContext(IconoirContext);
  var props = __assign376(__assign376({}, context), passedProps);
  return React377.createElement(
    "svg",
    __assign376({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React377.createElement("path", { d: "M12 21v-4a5 5 0 00-5-5H3M12 21v-4a5 5 0 015-5h4M12 2v20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React377.createElement("path", { d: "M6 8l-4 4 4 4M16 6l-4-4-4 4M18 8l4 4-4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef376 = React377.forwardRef(SvgDivideThree);
var DivideThree_default = ForwardRef376;

// node_modules/iconoir-react/dist/esm/Divide.mjs
var React378 = __toESM(require_react(), 1);
var __assign377 = function() {
  __assign377 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign377.apply(this, arguments);
};
function SvgDivide(passedProps, svgRef) {
  var context = React378.useContext(IconoirContext);
  var props = __assign377(__assign377({}, context), passedProps);
  return React378.createElement(
    "svg",
    __assign377({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React378.createElement("path", { d: "M12 21v-9a5 5 0 00-5-5H3M12 21v-9a5 5 0 015-5h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React378.createElement("path", { d: "M7 3L3 7l4 4M17 3l4 4-4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef377 = React378.forwardRef(SvgDivide);
var Divide_default = ForwardRef377;

// node_modules/iconoir-react/dist/esm/Dna.mjs
var React379 = __toESM(require_react(), 1);
var __assign378 = function() {
  __assign378 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign378.apply(this, arguments);
};
function SvgDna(passedProps, svgRef) {
  var context = React379.useContext(IconoirContext);
  var props = __assign378(__assign378({}, context), passedProps);
  return React379.createElement(
    "svg",
    __assign378({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React379.createElement("path", { d: "M4 3c0 5.625 8 9 8 9s8 3.375 8 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React379.createElement("path", { d: "M20 3c0 5.625-8 9-8 9s-8 3.375-8 9M8 6h11M8 18h11M11 9h5.5M11 15h5.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef378 = React379.forwardRef(SvgDna);
var Dna_default = ForwardRef378;

// node_modules/iconoir-react/dist/esm/DocSearchAlt.mjs
var React380 = __toESM(require_react(), 1);
var __assign379 = function() {
  __assign379 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign379.apply(this, arguments);
};
function SvgDocSearchAlt(passedProps, svgRef) {
  var context = React380.useContext(IconoirContext);
  var props = __assign379(__assign379({}, context), passedProps);
  return React380.createElement(
    "svg",
    __assign379({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React380.createElement("path", { d: "M14 15l1.5 1.5M8.5 12.5a3 3 0 106 0 3 3 0 00-6 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React380.createElement("path", { d: "M4 21.4V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React380.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef379 = React380.forwardRef(SvgDocSearchAlt);
var DocSearchAlt_default = ForwardRef379;

// node_modules/iconoir-react/dist/esm/DocSearch.mjs
var React381 = __toESM(require_react(), 1);
var __assign380 = function() {
  __assign380 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign380.apply(this, arguments);
};
function SvgDocSearch(passedProps, svgRef) {
  var context = React381.useContext(IconoirContext);
  var props = __assign380(__assign380({}, context), passedProps);
  return React381.createElement(
    "svg",
    __assign380({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React381.createElement("path", { d: "M20.5 20.5L22 22M15 18a3 3 0 106 0 3 3 0 00-6 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React381.createElement("path", { d: "M20 12V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React381.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef380 = React381.forwardRef(SvgDocSearch);
var DocSearch_default = ForwardRef380;

// node_modules/iconoir-react/dist/esm/DocStarAlt.mjs
var React382 = __toESM(require_react(), 1);
var __assign381 = function() {
  __assign381 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign381.apply(this, arguments);
};
function SvgDocStarAlt(passedProps, svgRef) {
  var context = React382.useContext(IconoirContext);
  var props = __assign381(__assign381({}, context), passedProps);
  return React382.createElement(
    "svg",
    __assign381({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React382.createElement("path", { d: "M4 21.4V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React382.createElement("path", { d: "M10.635 10.415l1.039-2.203a.357.357 0 01.652 0l1.04 2.203 2.323.356c.298.045.416.429.2.649l-1.68 1.713.396 2.421c.051.311-.26.548-.527.401L12 14.812l-2.078 1.143c-.267.147-.578-.09-.527-.4l.396-2.422-1.68-1.713c-.217-.22-.098-.604.2-.65l2.324-.355zM16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef381 = React382.forwardRef(SvgDocStarAlt);
var DocStarAlt_default = ForwardRef381;

// node_modules/iconoir-react/dist/esm/DocStar.mjs
var React383 = __toESM(require_react(), 1);
var __assign382 = function() {
  __assign382 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign382.apply(this, arguments);
};
function SvgDocStar(passedProps, svgRef) {
  var context = React383.useContext(IconoirContext);
  var props = __assign382(__assign382({}, context), passedProps);
  return React383.createElement(
    "svg",
    __assign382({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React383.createElement("path", { d: "M16.306 17.113l.909-1.927a.312.312 0 01.57 0l.91 1.927 2.032.311c.261.04.365.376.177.568l-1.471 1.5.347 2.118c.044.272-.229.48-.462.351l-1.818-1-1.818 1c-.234.129-.506-.079-.462-.351l.347-2.118-1.47-1.5c-.19-.192-.085-.528.176-.568l2.033-.31z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React383.createElement("path", { d: "M20 12V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React383.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef382 = React383.forwardRef(SvgDocStar);
var DocStar_default = ForwardRef382;

// node_modules/iconoir-react/dist/esm/DogecoinCircle.mjs
var React384 = __toESM(require_react(), 1);
var __assign383 = function() {
  __assign383 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign383.apply(this, arguments);
};
function SvgDogecoinCircle(passedProps, svgRef) {
  var context = React384.useContext(IconoirContext);
  var props = __assign383(__assign383({}, context), passedProps);
  return React384.createElement(
    "svg",
    __assign383({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React384.createElement("path", { d: "M10 16.402V7.598c0-.331.268-.599.6-.604 2.49-.035 5.9-.072 5.9 5.006s-3.41 5.042-5.9 5.006a.606.606 0 01-.6-.604z", stroke: "currentColor" }),
    React384.createElement("path", { d: "M8 12h4M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef383 = React384.forwardRef(SvgDogecoinCircle);
var DogecoinCircle_default = ForwardRef383;

// node_modules/iconoir-react/dist/esm/DogecoinRotateOut.mjs
var React385 = __toESM(require_react(), 1);
var __assign384 = function() {
  __assign384 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign384.apply(this, arguments);
};
function SvgDogecoinRotateOut(passedProps, svgRef) {
  var context = React385.useContext(IconoirContext);
  var props = __assign384(__assign384({}, context), passedProps);
  return React385.createElement(
    "svg",
    __assign384({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React385.createElement("path", { d: "M21.168 8A10.003 10.003 0 0012 2C6.815 2 2.55 5.947 2.05 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React385.createElement("path", { d: "M18 8h3.4a.6.6 0 00.6-.6V4M2.881 16c1.544 3.532 5.068 6 9.168 6 5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React385.createElement("path", { d: "M6.05 16h-3.4a.6.6 0 00-.6.6V20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React385.createElement("path", { d: "M10 16.402V7.598c0-.331.268-.599.6-.604 2.49-.035 5.9-.072 5.9 5.006s-3.41 5.042-5.9 5.006a.606.606 0 01-.6-.604z", stroke: "currentColor" }),
    React385.createElement("path", { d: "M8 12h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef384 = React385.forwardRef(SvgDogecoinRotateOut);
var DogecoinRotateOut_default = ForwardRef384;

// node_modules/iconoir-react/dist/esm/Dollar.mjs
var React386 = __toESM(require_react(), 1);
var __assign385 = function() {
  __assign385 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign385.apply(this, arguments);
};
function SvgDollar(passedProps, svgRef) {
  var context = React386.useContext(IconoirContext);
  var props = __assign385(__assign385({}, context), passedProps);
  return React386.createElement(
    "svg",
    __assign385({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React386.createElement("path", { d: "M16.154 7.154c-.949-.949-2.619-1.608-4.154-1.65m-4.154 10.65c.893 1.19 2.552 1.868 4.154 1.926m0-12.576c-1.826-.049-3.461.778-3.461 3.034 0 4.154 7.615 2.077 7.615 6.231 0 2.37-2.027 3.387-4.154 3.31m0-12.575V3m0 15.08V21", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef385 = React386.forwardRef(SvgDollar);
var Dollar_default = ForwardRef385;

// node_modules/iconoir-react/dist/esm/DomoticIssue.mjs
var React387 = __toESM(require_react(), 1);
var __assign386 = function() {
  __assign386 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign386.apply(this, arguments);
};
function SvgDomoticIssue(passedProps, svgRef) {
  var context = React387.useContext(IconoirContext);
  var props = __assign386(__assign386({}, context), passedProps);
  return React387.createElement(
    "svg",
    __assign386({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React387.createElement("path", { d: "M12 9v3M12 16.01l.01-.011M2 8l9.732-4.866a.6.6 0 01.536 0L22 8M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef386 = React387.forwardRef(SvgDomoticIssue);
var DomoticIssue_default = ForwardRef386;

// node_modules/iconoir-react/dist/esm/Donate.mjs
var React388 = __toESM(require_react(), 1);
var __assign387 = function() {
  __assign387 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign387.apply(this, arguments);
};
function SvgDonate(passedProps, svgRef) {
  var context = React388.useContext(IconoirContext);
  var props = __assign387(__assign387({}, context), passedProps);
  return React388.createElement(
    "svg",
    __assign387({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React388.createElement("path", { d: "M16 6.28a2.28 2.28 0 01-.662 1.606c-.976.984-1.923 2.01-2.936 2.958a.597.597 0 01-.822-.017l-2.918-2.94a2.281 2.281 0 010-3.214 2.277 2.277 0 013.232 0L12 4.78l.106-.107A2.276 2.276 0 0116 6.28z", stroke: "currentColor", strokeLinejoin: "round" }),
    React388.createElement("path", { d: "M18 20l3.824-3.824a.6.6 0 00.176-.424V10.5A1.5 1.5 0 0020.5 9v0a1.5 1.5 0 00-1.5 1.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React388.createElement("path", { d: "M18 16l.858-.858a.484.484 0 00.142-.343v0a.485.485 0 00-.268-.433l-.443-.221a2 2 0 00-2.308.374l-.895.895a2 2 0 00-.586 1.414V20M6 20l-3.824-3.824A.6.6 0 012 15.752V10.5A1.5 1.5 0 013.5 9v0A1.5 1.5 0 015 10.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React388.createElement("path", { d: "M6 16l-.858-.858A.485.485 0 015 14.799v0c0-.183.104-.35.268-.433l.443-.221a2 2 0 012.308.374l.895.895a2 2 0 01.586 1.414V20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef387 = React388.forwardRef(SvgDonate);
var Donate_default = ForwardRef387;

// node_modules/iconoir-react/dist/esm/DoubleCheck.mjs
var React389 = __toESM(require_react(), 1);
var __assign388 = function() {
  __assign388 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign388.apply(this, arguments);
};
function SvgDoubleCheck(passedProps, svgRef) {
  var context = React389.useContext(IconoirContext);
  var props = __assign388(__assign388({}, context), passedProps);
  return React389.createElement(
    "svg",
    __assign388({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React389.createElement("path", { d: "M1.5 12.5l4.076 4.076a.6.6 0 00.848 0L9 14M16 7l-4 4", stroke: "currentColor", strokeLinecap: "round" }),
    React389.createElement("path", { d: "M7 12l4.576 4.576a.6.6 0 00.848 0L22 7", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef388 = React389.forwardRef(SvgDoubleCheck);
var DoubleCheck_default = ForwardRef388;

// node_modules/iconoir-react/dist/esm/DownRoundArrow.mjs
var React390 = __toESM(require_react(), 1);
var __assign389 = function() {
  __assign389 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign389.apply(this, arguments);
};
function SvgDownRoundArrow(passedProps, svgRef) {
  var context = React390.useContext(IconoirContext);
  var props = __assign389(__assign389({}, context), passedProps);
  return React390.createElement(
    "svg",
    __assign389({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React390.createElement("path", { d: "M6 5h12a4 4 0 014 4v6a4 4 0 01-4 4H6a4 4 0 01-4-4V9a4 4 0 014-4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React390.createElement("path", { d: "M14.5 10.75l-2.5 2.5-2.5-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef389 = React390.forwardRef(SvgDownRoundArrow);
var DownRoundArrow_default = ForwardRef389;

// node_modules/iconoir-react/dist/esm/DownloadCircle.mjs
var React391 = __toESM(require_react(), 1);
var __assign390 = function() {
  __assign390 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign390.apply(this, arguments);
};
function SvgDownloadCircle(passedProps, svgRef) {
  var context = React391.useContext(IconoirContext);
  var props = __assign390(__assign390({}, context), passedProps);
  return React391.createElement(
    "svg",
    __assign390({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React391.createElement("path", { d: "M9 17h6M12 6v7m0 0l3.5-3.5M12 13L8.5 9.5M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef390 = React391.forwardRef(SvgDownloadCircle);
var DownloadCircle_default = ForwardRef390;

// node_modules/iconoir-react/dist/esm/DownloadDataWindow.mjs
var React392 = __toESM(require_react(), 1);
var __assign391 = function() {
  __assign391 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign391.apply(this, arguments);
};
function SvgDownloadDataWindow(passedProps, svgRef) {
  var context = React392.useContext(IconoirContext);
  var props = __assign391(__assign391({}, context), passedProps);
  return React392.createElement(
    "svg",
    __assign391({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React392.createElement("path", { d: "M14 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v9", stroke: "currentColor", strokeLinecap: "round" }),
    React392.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M19.5 16v6m0 0L17 19.5m2.5 2.5l2.5-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef391 = React392.forwardRef(SvgDownloadDataWindow);
var DownloadDataWindow_default = ForwardRef391;

// node_modules/iconoir-react/dist/esm/DownloadSquare.mjs
var React393 = __toESM(require_react(), 1);
var __assign392 = function() {
  __assign392 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign392.apply(this, arguments);
};
function SvgDownloadSquare(passedProps, svgRef) {
  var context = React393.useContext(IconoirContext);
  var props = __assign392(__assign392({}, context), passedProps);
  return React393.createElement(
    "svg",
    __assign392({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React393.createElement("path", { d: "M6 18h12M12 6v8m0 0l3.5-3.5M12 14l-3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React393.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef392 = React393.forwardRef(SvgDownloadSquare);
var DownloadSquare_default = ForwardRef392;

// node_modules/iconoir-react/dist/esm/Download.mjs
var React394 = __toESM(require_react(), 1);
var __assign393 = function() {
  __assign393 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign393.apply(this, arguments);
};
function SvgDownload(passedProps, svgRef) {
  var context = React394.useContext(IconoirContext);
  var props = __assign393(__assign393({}, context), passedProps);
  return React394.createElement(
    "svg",
    __assign393({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React394.createElement("path", { d: "M6 20h12M12 4v12m0 0l3.5-3.5M12 16l-3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef393 = React394.forwardRef(SvgDownload);
var Download_default = ForwardRef393;

// node_modules/iconoir-react/dist/esm/DragHandGesture.mjs
var React395 = __toESM(require_react(), 1);
var __assign394 = function() {
  __assign394 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign394.apply(this, arguments);
};
function SvgDragHandGesture(passedProps, svgRef) {
  var context = React395.useContext(IconoirContext);
  var props = __assign394(__assign394({}, context), passedProps);
  return React395.createElement(
    "svg",
    __assign394({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React395.createElement("path", { d: "M7 10.5l-2.004 2.672a2 2 0 00.126 2.552l3.784 4.128c.378.413.912.648 1.473.648H15c2.4 0 4-1.5 4-4 0 0 0 0 0 0V7.929M16 8.5v-.571c0-2.286 3-2.286 3 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React395.createElement("path", { d: "M13 8.5V7.027m0-.527v.527M16 8.5V7.93v-.902c0-2.286-3-2.286-3 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React395.createElement("path", { d: "M13 8.5V7.027c0-2.286 3-2.286 3 0V8.5M10 8.5v-2c0-2.286 3-2.286 3 0 0 0 0 0 0 0v2M7 13.5v-7A1.5 1.5 0 018.5 5v0c.828 0 1.5.555 1.5 1.384V8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef394 = React395.forwardRef(SvgDragHandGesture);
var DragHandGesture_default = ForwardRef394;

// node_modules/iconoir-react/dist/esm/Drag.mjs
var React396 = __toESM(require_react(), 1);
var __assign395 = function() {
  __assign395 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign395.apply(this, arguments);
};
function SvgDrag(passedProps, svgRef) {
  var context = React396.useContext(IconoirContext);
  var props = __assign395(__assign395({}, context), passedProps);
  return React396.createElement(
    "svg",
    __assign395({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React396.createElement("path", { d: "M12 12L4 4m0 0v4m0-4h4M12 12l8-8m0 0v4m0-4h-4M12 12l-8 8m0 0v-4m0 4h4M12 12l8 8m0 0v-4m0 4h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef395 = React396.forwardRef(SvgDrag);
var Drag_default = ForwardRef395;

// node_modules/iconoir-react/dist/esm/Drawer.mjs
var React397 = __toESM(require_react(), 1);
var __assign396 = function() {
  __assign396 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign396.apply(this, arguments);
};
function SvgDrawer(passedProps, svgRef) {
  var context = React397.useContext(IconoirContext);
  var props = __assign396(__assign396({}, context), passedProps);
  return React397.createElement(
    "svg",
    __assign396({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React397.createElement("path", { d: "M21 14H3M3 8h18M11 17h2M11 11h2M11 5h2M21 2.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V2.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM17.5 20v2M6.5 20v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef396 = React397.forwardRef(SvgDrawer);
var Drawer_default = ForwardRef396;

// node_modules/iconoir-react/dist/esm/Dribbble.mjs
var React398 = __toESM(require_react(), 1);
var __assign397 = function() {
  __assign397 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign397.apply(this, arguments);
};
function SvgDribbble(passedProps, svgRef) {
  var context = React398.useContext(IconoirContext);
  var props = __assign397(__assign397({}, context), passedProps);
  return React398.createElement(
    "svg",
    __assign397({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React398.createElement("path", { d: "M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12zM16.673 20.843C15.5 14 12.5 8 8.5 2.63M2.067 10.84C6 11 15.283 10.5 19.142 5M21.968 12.81C15.344 10.84 7.5 14 5.23 19.361", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef397 = React398.forwardRef(SvgDribbble);
var Dribbble_default = ForwardRef397;

// node_modules/iconoir-react/dist/esm/DroneChargeFull.mjs
var React399 = __toESM(require_react(), 1);
var __assign398 = function() {
  __assign398 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign398.apply(this, arguments);
};
function SvgDroneChargeFull(passedProps, svgRef) {
  var context = React399.useContext(IconoirContext);
  var props = __assign398(__assign398({}, context), passedProps);
  return React399.createElement(
    "svg",
    __assign398({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React399.createElement("path", { d: "M14.25 14.75l.25-2.25.426-3.834A.6.6 0 0014.33 8H9.67a.6.6 0 00-.596.666l.867 7.8a.6.6 0 00.596.534H11", stroke: "currentColor", strokeLinecap: "round" }),
    React399.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React399.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React399.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React399.createElement("path", { d: "M23 19v2M15 19v2M17 19v2M19 19v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React399.createElement("path", { d: "M13 22.4v-4.8a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-6.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef398 = React399.forwardRef(SvgDroneChargeFull);
var DroneChargeFull_default = ForwardRef398;

// node_modules/iconoir-react/dist/esm/DroneChargeHalf.mjs
var React400 = __toESM(require_react(), 1);
var __assign399 = function() {
  __assign399 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign399.apply(this, arguments);
};
function SvgDroneChargeHalf(passedProps, svgRef) {
  var context = React400.useContext(IconoirContext);
  var props = __assign399(__assign399({}, context), passedProps);
  return React400.createElement(
    "svg",
    __assign399({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React400.createElement("path", { d: "M14.25 14.75l.25-2.25.426-3.834A.6.6 0 0014.33 8H9.67a.6.6 0 00-.596.666l.867 7.8a.6.6 0 00.596.534H11", stroke: "currentColor", strokeLinecap: "round" }),
    React400.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React400.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React400.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React400.createElement("path", { d: "M23 19v2M15 19v2M17 19v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React400.createElement("path", { d: "M13 22.4v-4.8a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-6.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef399 = React400.forwardRef(SvgDroneChargeHalf);
var DroneChargeHalf_default = ForwardRef399;

// node_modules/iconoir-react/dist/esm/DroneChargeLow.mjs
var React401 = __toESM(require_react(), 1);
var __assign400 = function() {
  __assign400 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign400.apply(this, arguments);
};
function SvgDroneChargeLow(passedProps, svgRef) {
  var context = React401.useContext(IconoirContext);
  var props = __assign400(__assign400({}, context), passedProps);
  return React401.createElement(
    "svg",
    __assign400({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React401.createElement("path", { d: "M14.25 14.75l.25-2.25.426-3.834A.6.6 0 0014.33 8H9.67a.6.6 0 00-.596.666l.867 7.8a.6.6 0 00.596.534H11", stroke: "currentColor", strokeLinecap: "round" }),
    React401.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React401.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React401.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React401.createElement("path", { d: "M23 19v2M15 19v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React401.createElement("path", { d: "M13 22.4v-4.8a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-6.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef400 = React401.forwardRef(SvgDroneChargeLow);
var DroneChargeLow_default = ForwardRef400;

// node_modules/iconoir-react/dist/esm/DroneCheck.mjs
var React402 = __toESM(require_react(), 1);
var __assign401 = function() {
  __assign401 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign401.apply(this, arguments);
};
function SvgDroneCheck(passedProps, svgRef) {
  var context = React402.useContext(IconoirContext);
  var props = __assign401(__assign401({}, context), passedProps);
  return React402.createElement(
    "svg",
    __assign401({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React402.createElement("path", { d: "M13.463 17h-2.926a.6.6 0 01-.596-.534l-.867-7.8A.6.6 0 019.67 8h4.66a.6.6 0 01.596.666l-.867 7.8a.6.6 0 01-.596.534z", stroke: "currentColor", strokeLinecap: "round" }),
    React402.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React402.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8M14.5 15.5l1.25 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React402.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React402.createElement("path", { d: "M16 20l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef401 = React402.forwardRef(SvgDroneCheck);
var DroneCheck_default = ForwardRef401;

// node_modules/iconoir-react/dist/esm/DroneError.mjs
var React403 = __toESM(require_react(), 1);
var __assign402 = function() {
  __assign402 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign402.apply(this, arguments);
};
function SvgDroneError(passedProps, svgRef) {
  var context = React403.useContext(IconoirContext);
  var props = __assign402(__assign402({}, context), passedProps);
  return React403.createElement(
    "svg",
    __assign402({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React403.createElement("path", { d: "M13.463 17h-2.926a.6.6 0 01-.596-.534l-.867-7.8A.6.6 0 019.67 8h4.66a.6.6 0 01.596.666l-.867 7.8a.6.6 0 01-.596.534z", stroke: "currentColor", strokeLinecap: "round" }),
    React403.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React403.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8M14.5 15.5l1.25 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React403.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React403.createElement("path", { d: "M18 22.243l2.121-2.122m0 0L22.243 18m-2.122 2.121L18 18m2.121 2.121l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef402 = React403.forwardRef(SvgDroneError);
var DroneError_default = ForwardRef402;

// node_modules/iconoir-react/dist/esm/DroneLanding.mjs
var React404 = __toESM(require_react(), 1);
var __assign403 = function() {
  __assign403 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign403.apply(this, arguments);
};
function SvgDroneLanding(passedProps, svgRef) {
  var context = React404.useContext(IconoirContext);
  var props = __assign403(__assign403({}, context), passedProps);
  return React404.createElement(
    "svg",
    __assign403({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React404.createElement("path", { d: "M13.463 17h-2.926a.6.6 0 01-.596-.534l-.867-7.8A.6.6 0 019.67 8h4.66a.6.6 0 01.596.666l-.867 7.8a.6.6 0 01-.596.534z", stroke: "currentColor", strokeLinecap: "round" }),
    React404.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React404.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8M14.5 15.5l1.25 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React404.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React404.createElement("path", { d: "M19.5 16v6m0 0L17 19.5m2.5 2.5l2.5-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef403 = React404.forwardRef(SvgDroneLanding);
var DroneLanding_default = ForwardRef403;

// node_modules/iconoir-react/dist/esm/DroneRefresh.mjs
var React405 = __toESM(require_react(), 1);
var __assign404 = function() {
  __assign404 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign404.apply(this, arguments);
};
function SvgDroneRefresh(passedProps, svgRef) {
  var context = React405.useContext(IconoirContext);
  var props = __assign404(__assign404({}, context), passedProps);
  return React405.createElement(
    "svg",
    __assign404({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React405.createElement("path", { d: "M14.5 12.5l.426-3.834A.6.6 0 0014.33 8H9.67a.6.6 0 00-.596.666l.867 7.8a.6.6 0 00.596.534H11", stroke: "currentColor", strokeLinecap: "round" }),
    React405.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React405.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React405.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React405.createElement("path", { d: "M21.666 16.667C21.048 15.097 19.634 14 17.99 14c-1.758 0-3.252 1.255-3.793 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React405.createElement("path", { d: "M19.995 16.772H21.4a.6.6 0 00.6-.6V14.55M14.334 19.333C14.952 20.903 16.366 22 18.01 22c1.758 0 3.252-1.255 3.793-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React405.createElement("path", { d: "M16.005 19.228H14.6a.6.6 0 00-.6.6v1.622", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef404 = React405.forwardRef(SvgDroneRefresh);
var DroneRefresh_default = ForwardRef404;

// node_modules/iconoir-react/dist/esm/DroneTakeOff.mjs
var React406 = __toESM(require_react(), 1);
var __assign405 = function() {
  __assign405 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign405.apply(this, arguments);
};
function SvgDroneTakeOff(passedProps, svgRef) {
  var context = React406.useContext(IconoirContext);
  var props = __assign405(__assign405({}, context), passedProps);
  return React406.createElement(
    "svg",
    __assign405({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React406.createElement("path", { d: "M13.463 17h-2.926a.6.6 0 01-.596-.534l-.867-7.8A.6.6 0 019.67 8h4.66a.6.6 0 01.596.666l-.867 7.8a.6.6 0 01-.596.534z", stroke: "currentColor", strokeLinecap: "round" }),
    React406.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React406.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8M14.5 15.5l1.25 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React406.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React406.createElement("path", { d: "M19.5 22v-6m0 0L17 18.5m2.5-2.5l2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef405 = React406.forwardRef(SvgDroneTakeOff);
var DroneTakeOff_default = ForwardRef405;

// node_modules/iconoir-react/dist/esm/Drone.mjs
var React407 = __toESM(require_react(), 1);
var __assign406 = function() {
  __assign406 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign406.apply(this, arguments);
};
function SvgDrone(passedProps, svgRef) {
  var context = React407.useContext(IconoirContext);
  var props = __assign406(__assign406({}, context), passedProps);
  return React407.createElement(
    "svg",
    __assign406({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React407.createElement("path", { d: "M13.463 17h-2.926a.6.6 0 01-.596-.534l-.867-7.8A.6.6 0 019.67 8h4.66a.6.6 0 01.596.666l-.867 7.8a.6.6 0 01-.596.534z", stroke: "currentColor", strokeLinecap: "round" }),
    React407.createElement("path", { d: "M4.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React407.createElement("path", { d: "M4.5 4.5L9 8M4.5 19.5l5-4M19.5 4.5L15 8M19.5 19.5l-5-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React407.createElement("path", { d: "M4.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM19.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef406 = React407.forwardRef(SvgDrone);
var Drone_default = ForwardRef406;

// node_modules/iconoir-react/dist/esm/DropletHalf.mjs
var React408 = __toESM(require_react(), 1);
var __assign407 = function() {
  __assign407 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign407.apply(this, arguments);
};
function SvgDropletHalf(passedProps, svgRef) {
  var context = React408.useContext(IconoirContext);
  var props = __assign407(__assign407({}, context), passedProps);
  return React408.createElement(
    "svg",
    __assign407({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React408.createElement("path", { d: "M4.5 16.5l14-6.5M20 14c0-4.418-8-12-8-12S4 9.582 4 14a8 8 0 1016 0z", stroke: "currentColor" })
  );
}
var ForwardRef407 = React408.forwardRef(SvgDropletHalf);
var DropletHalf_default = ForwardRef407;

// node_modules/iconoir-react/dist/esm/Droplet.mjs
var React409 = __toESM(require_react(), 1);
var __assign408 = function() {
  __assign408 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign408.apply(this, arguments);
};
function SvgDroplet(passedProps, svgRef) {
  var context = React409.useContext(IconoirContext);
  var props = __assign408(__assign408({}, context), passedProps);
  return React409.createElement(
    "svg",
    __assign408({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React409.createElement("path", { d: "M20 14c0-4.418-8-12-8-12S4 9.582 4 14a8 8 0 1016 0z", stroke: "currentColor" })
  );
}
var ForwardRef408 = React409.forwardRef(SvgDroplet);
var Droplet_default = ForwardRef408;

// node_modules/iconoir-react/dist/esm/EaseCurveControlPoints.mjs
var React410 = __toESM(require_react(), 1);
var __assign409 = function() {
  __assign409 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign409.apply(this, arguments);
};
function SvgEaseCurveControlPoints(passedProps, svgRef) {
  var context = React410.useContext(IconoirContext);
  var props = __assign409(__assign409({}, context), passedProps);
  return React410.createElement(
    "svg",
    __assign409({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React410.createElement("path", { d: "M17 20a2 2 0 104 0 2 2 0 00-4 0zm0 0h-2M7 4a2 2 0 11-4 0 2 2 0 014 0zm0 0h2M14 4h-2M12 20h-2M3 20c8 0 10-16 18-16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef409 = React410.forwardRef(SvgEaseCurveControlPoints);
var EaseCurveControlPoints_default = ForwardRef409;

// node_modules/iconoir-react/dist/esm/EaseInControlPoint.mjs
var React411 = __toESM(require_react(), 1);
var __assign410 = function() {
  __assign410 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign410.apply(this, arguments);
};
function SvgEaseInControlPoint(passedProps, svgRef) {
  var context = React411.useContext(IconoirContext);
  var props = __assign410(__assign410({}, context), passedProps);
  return React411.createElement(
    "svg",
    __assign410({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React411.createElement("path", { d: "M3 20c8 0 18-16 18-16M17 20a2 2 0 104 0 2 2 0 00-4 0zm0 0h-2M12 20h-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef410 = React411.forwardRef(SvgEaseInControlPoint);
var EaseInControlPoint_default = ForwardRef410;

// node_modules/iconoir-react/dist/esm/EaseInOut.mjs
var React412 = __toESM(require_react(), 1);
var __assign411 = function() {
  __assign411 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign411.apply(this, arguments);
};
function SvgEaseInOut(passedProps, svgRef) {
  var context = React412.useContext(IconoirContext);
  var props = __assign411(__assign411({}, context), passedProps);
  return React412.createElement(
    "svg",
    __assign411({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React412.createElement("path", { d: "M3 20c8 0 10-16 18-16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef411 = React412.forwardRef(SvgEaseInOut);
var EaseInOut_default = ForwardRef411;

// node_modules/iconoir-react/dist/esm/EaseIn.mjs
var React413 = __toESM(require_react(), 1);
var __assign412 = function() {
  __assign412 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign412.apply(this, arguments);
};
function SvgEaseIn(passedProps, svgRef) {
  var context = React413.useContext(IconoirContext);
  var props = __assign412(__assign412({}, context), passedProps);
  return React413.createElement(
    "svg",
    __assign412({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React413.createElement("path", { d: "M3 20c8 0 18-16 18-16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef412 = React413.forwardRef(SvgEaseIn);
var EaseIn_default = ForwardRef412;

// node_modules/iconoir-react/dist/esm/EaseOutControlPoint.mjs
var React414 = __toESM(require_react(), 1);
var __assign413 = function() {
  __assign413 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign413.apply(this, arguments);
};
function SvgEaseOutControlPoint(passedProps, svgRef) {
  var context = React414.useContext(IconoirContext);
  var props = __assign413(__assign413({}, context), passedProps);
  return React414.createElement(
    "svg",
    __assign413({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React414.createElement("path", { d: "M3 20S13 4 21 4M7 4a2 2 0 11-4 0 2 2 0 014 0zm0 0h2M14 4h-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef413 = React414.forwardRef(SvgEaseOutControlPoint);
var EaseOutControlPoint_default = ForwardRef413;

// node_modules/iconoir-react/dist/esm/EaseOut.mjs
var React415 = __toESM(require_react(), 1);
var __assign414 = function() {
  __assign414 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign414.apply(this, arguments);
};
function SvgEaseOut(passedProps, svgRef) {
  var context = React415.useContext(IconoirContext);
  var props = __assign414(__assign414({}, context), passedProps);
  return React415.createElement(
    "svg",
    __assign414({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React415.createElement("path", { d: "M3 20S13 4 21 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef414 = React415.forwardRef(SvgEaseOut);
var EaseOut_default = ForwardRef414;

// node_modules/iconoir-react/dist/esm/EcologyBook.mjs
var React416 = __toESM(require_react(), 1);
var __assign415 = function() {
  __assign415 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign415.apply(this, arguments);
};
function SvgEcologyBook(passedProps, svgRef) {
  var context = React416.useContext(IconoirContext);
  var props = __assign415(__assign415({}, context), passedProps);
  return React416.createElement(
    "svg",
    __assign415({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React416.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114", stroke: "currentColor", strokeLinecap: "round" }),
    React416.createElement("path", { d: "M10 14s.9-3.118 3-5M12.802 12.425l-.134.012a3.094 3.094 0 01-3.366-2.774 3.06 3.06 0 012.761-3.35l2.986-.28a.35.35 0 01.381.314l.255 2.58a3.194 3.194 0 01-2.883 3.498z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React416.createElement("path", { d: "M6 17h14M6 21h14", stroke: "currentColor", strokeLinecap: "round" }),
    React416.createElement("path", { d: "M6 21a2 2 0 110-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef415 = React416.forwardRef(SvgEcologyBook);
var EcologyBook_default = ForwardRef415;

// node_modules/iconoir-react/dist/esm/EditPencil.mjs
var React417 = __toESM(require_react(), 1);
var __assign416 = function() {
  __assign416 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign416.apply(this, arguments);
};
function SvgEditPencil(passedProps, svgRef) {
  var context = React417.useContext(IconoirContext);
  var props = __assign416(__assign416({}, context), passedProps);
  return React417.createElement(
    "svg",
    __assign416({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React417.createElement("path", { d: "M14.363 5.652l1.48-1.48a2 2 0 012.829 0l1.414 1.414a2 2 0 010 2.828l-1.48 1.48m-4.243-4.242l-9.616 9.615a2 2 0 00-.578 1.238l-.242 2.74a1 1 0 001.084 1.085l2.74-.242a2 2 0 001.24-.578l9.615-9.616m-4.243-4.242l4.243 4.242", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef416 = React417.forwardRef(SvgEditPencil);
var EditPencil_default = ForwardRef416;

// node_modules/iconoir-react/dist/esm/Edit.mjs
var React418 = __toESM(require_react(), 1);
var __assign417 = function() {
  __assign417 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign417.apply(this, arguments);
};
function SvgEdit(passedProps, svgRef) {
  var context = React418.useContext(IconoirContext);
  var props = __assign417(__assign417({}, context), passedProps);
  return React418.createElement(
    "svg",
    __assign417({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React418.createElement("path", { d: "M3 21h18M12.222 5.828L15.05 3 20 7.95l-2.828 2.828m-4.95-4.95l-5.607 5.607a1 1 0 00-.293.707v4.536h4.536a1 1 0 00.707-.293l5.607-5.607m-4.95-4.95l4.95 4.95", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef417 = React418.forwardRef(SvgEdit);
var Edit_default = ForwardRef417;

// node_modules/iconoir-react/dist/esm/Egg.mjs
var React419 = __toESM(require_react(), 1);
var __assign418 = function() {
  __assign418 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign418.apply(this, arguments);
};
function SvgEgg(passedProps, svgRef) {
  var context = React419.useContext(IconoirContext);
  var props = __assign418(__assign418({}, context), passedProps);
  return React419.createElement(
    "svg",
    __assign418({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React419.createElement("path", { d: "M12 22a8 8 0 008-8c0-4.418-3.582-12-8-12S4 9.582 4 14a8 8 0 008 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef418 = React419.forwardRef(SvgEgg);
var Egg_default = ForwardRef418;

// node_modules/iconoir-react/dist/esm/Eject.mjs
var React420 = __toESM(require_react(), 1);
var __assign419 = function() {
  __assign419 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign419.apply(this, arguments);
};
function SvgEject(passedProps, svgRef) {
  var context = React420.useContext(IconoirContext);
  var props = __assign419(__assign419({}, context), passedProps);
  return React420.createElement(
    "svg",
    __assign419({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React420.createElement("path", { d: "M5 14l-.592-.46A.75.75 0 005 14.75V14zm14 0v.75a.75.75 0 00.592-1.21L19 14zm-14 .75h14v-1.5H5v1.5zm5.619-9.196L4.408 13.54l1.184.92 6.21-7.985-1.183-.92zm8.973 7.986l-6.21-7.986-1.185.921 6.211 7.986 1.184-.921zm-7.79-7.065a.25.25 0 01.395 0l1.184-.92c-.7-.901-2.062-.901-2.762 0l1.184.92zM5 17.25a.75.75 0 000 1.5v-1.5zm14 1.5a.75.75 0 000-1.5v1.5zm-14 0h14v-1.5H5v1.5z", fill: "currentColor" })
  );
}
var ForwardRef419 = React420.forwardRef(SvgEject);
var Eject_default = ForwardRef419;

// node_modules/iconoir-react/dist/esm/ElectronicsChip.mjs
var React421 = __toESM(require_react(), 1);
var __assign420 = function() {
  __assign420 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign420.apply(this, arguments);
};
function SvgElectronicsChip(passedProps, svgRef) {
  var context = React421.useContext(IconoirContext);
  var props = __assign420(__assign420({}, context), passedProps);
  return React421.createElement(
    "svg",
    __assign420({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React421.createElement("path", { d: "M7 19.4V4.6a.6.6 0 01.6-.6h8.8a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6H7.6a.6.6 0 01-.6-.6zM14 20v2.5M10 20v2.5M14 4V1.5M10 4V1.5M7 12H4.5M19.5 12H17M7 6.5H4.5M19.5 6.5H17M7 17.5H4.5M19.5 17.5H17", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef420 = React421.forwardRef(SvgElectronicsChip);
var ElectronicsChip_default = ForwardRef420;

// node_modules/iconoir-react/dist/esm/ElectronicsTransistor.mjs
var React422 = __toESM(require_react(), 1);
var __assign421 = function() {
  __assign421 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign421.apply(this, arguments);
};
function SvgElectronicsTransistor(passedProps, svgRef) {
  var context = React422.useContext(IconoirContext);
  var props = __assign421(__assign421({}, context), passedProps);
  return React422.createElement(
    "svg",
    __assign421({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React422.createElement("path", { d: "M7 16V3.6a.6.6 0 01.6-.6h8.8a.6.6 0 01.6.6V16M7 16h2m-2 0H5m12 0h-2m2 0h2m-7 0v6m0-6H9m3 0h3m-6 0v6m6-6v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef421 = React422.forwardRef(SvgElectronicsTransistor);
var ElectronicsTransistor_default = ForwardRef421;

// node_modules/iconoir-react/dist/esm/Elevator.mjs
var React423 = __toESM(require_react(), 1);
var __assign422 = function() {
  __assign422 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign422.apply(this, arguments);
};
function SvgElevator(passedProps, svgRef) {
  var context = React423.useContext(IconoirContext);
  var props = __assign422(__assign422({}, context), passedProps);
  return React423.createElement(
    "svg",
    __assign422({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React423.createElement("path", { d: "M12 3v18M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React423.createElement("path", { d: "M6 12l1.5-2L9 12M15 12l1.5 2 1.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef422 = React423.forwardRef(SvgElevator);
var Elevator_default = ForwardRef422;

// node_modules/iconoir-react/dist/esm/EmojiBall.mjs
var React424 = __toESM(require_react(), 1);
var __assign423 = function() {
  __assign423 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign423.apply(this, arguments);
};
function SvgEmojiBall(passedProps, svgRef) {
  var context = React424.useContext(IconoirContext);
  var props = __assign423(__assign423({}, context), passedProps);
  return React424.createElement(
    "svg",
    __assign423({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React424.createElement("path", { d: "M10 9H8m8 0h-2m4 6H6m-4-3c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef423 = React424.forwardRef(SvgEmojiBall);
var EmojiBall_default = ForwardRef423;

// node_modules/iconoir-react/dist/esm/EmojiBlinkLeft.mjs
var React425 = __toESM(require_react(), 1);
var __assign424 = function() {
  __assign424 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign424.apply(this, arguments);
};
function SvgEmojiBlinkLeft(passedProps, svgRef) {
  var context = React425.useContext(IconoirContext);
  var props = __assign424(__assign424({}, context), passedProps);
  return React425.createElement(
    "svg",
    __assign424({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React425.createElement("path", { d: "M10 9H8m-6 3c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React425.createElement("path", { d: "M16.5 14.5s-1.5 2-4.5 2-4.5-2-4.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React425.createElement("path", { d: "M15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef424 = React425.forwardRef(SvgEmojiBlinkLeft);
var EmojiBlinkLeft_default = ForwardRef424;

// node_modules/iconoir-react/dist/esm/EmojiBlinkRight.mjs
var React426 = __toESM(require_react(), 1);
var __assign425 = function() {
  __assign425 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign425.apply(this, arguments);
};
function SvgEmojiBlinkRight(passedProps, svgRef) {
  var context = React426.useContext(IconoirContext);
  var props = __assign425(__assign425({}, context), passedProps);
  return React426.createElement(
    "svg",
    __assign425({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React426.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React426.createElement("path", { d: "M14 9h2m6 3c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React426.createElement("path", { d: "M7.5 14.5s1.5 2 4.5 2 4.5-2 4.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef425 = React426.forwardRef(SvgEmojiBlinkRight);
var EmojiBlinkRight_default = ForwardRef425;

// node_modules/iconoir-react/dist/esm/EmojiLookDown.mjs
var React427 = __toESM(require_react(), 1);
var __assign426 = function() {
  __assign426 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign426.apply(this, arguments);
};
function SvgEmojiLookDown(passedProps, svgRef) {
  var context = React427.useContext(IconoirContext);
  var props = __assign426(__assign426({}, context), passedProps);
  return React427.createElement(
    "svg",
    __assign426({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React427.createElement("path", { d: "M8.5 14a.5.5 0 110-1 .5.5 0 010 1zM15.5 14a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React427.createElement("path", { d: "M10 18h4m8-6c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef426 = React427.forwardRef(SvgEmojiLookDown);
var EmojiLookDown_default = ForwardRef426;

// node_modules/iconoir-react/dist/esm/EmojiLookLeft.mjs
var React428 = __toESM(require_react(), 1);
var __assign427 = function() {
  __assign427 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign427.apply(this, arguments);
};
function SvgEmojiLookLeft(passedProps, svgRef) {
  var context = React428.useContext(IconoirContext);
  var props = __assign427(__assign427({}, context), passedProps);
  return React428.createElement(
    "svg",
    __assign427({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React428.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React428.createElement("path", { d: "M2.458 15A9.996 9.996 0 012 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10c-4.478 0-8.268-2.943-9.542-7zm0 0H7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef427 = React428.forwardRef(SvgEmojiLookLeft);
var EmojiLookLeft_default = ForwardRef427;

// node_modules/iconoir-react/dist/esm/EmojiLookRight.mjs
var React429 = __toESM(require_react(), 1);
var __assign428 = function() {
  __assign428 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign428.apply(this, arguments);
};
function SvgEmojiLookRight(passedProps, svgRef) {
  var context = React429.useContext(IconoirContext);
  var props = __assign428(__assign428({}, context), passedProps);
  return React429.createElement(
    "svg",
    __assign428({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React429.createElement("path", { d: "M15.5 9a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React429.createElement("path", { d: "M21.542 15A9.997 9.997 0 0022 12c0-5.523-4.477-10-10-10S2 6.477 2 12s4.477 10 10 10c4.478 0 8.268-2.943 9.542-7zm0 0H17", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef428 = React429.forwardRef(SvgEmojiLookRight);
var EmojiLookRight_default = ForwardRef428;

// node_modules/iconoir-react/dist/esm/EmojiLookUp.mjs
var React430 = __toESM(require_react(), 1);
var __assign429 = function() {
  __assign429 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign429.apply(this, arguments);
};
function SvgEmojiLookUp(passedProps, svgRef) {
  var context = React430.useContext(IconoirContext);
  var props = __assign429(__assign429({}, context), passedProps);
  return React430.createElement(
    "svg",
    __assign429({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React430.createElement("path", { d: "M8.5 7a.5.5 0 110-1 .5.5 0 010 1zM15.5 7a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React430.createElement("path", { d: "M10 11h4m8 1c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef429 = React430.forwardRef(SvgEmojiLookUp);
var EmojiLookUp_default = ForwardRef429;

// node_modules/iconoir-react/dist/esm/EmojiPuzzled.mjs
var React431 = __toESM(require_react(), 1);
var __assign430 = function() {
  __assign430 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign430.apply(this, arguments);
};
function SvgEmojiPuzzled(passedProps, svgRef) {
  var context = React431.useContext(IconoirContext);
  var props = __assign430(__assign430({}, context), passedProps);
  return React431.createElement(
    "svg",
    __assign430({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React431.createElement("path", { d: "M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React431.createElement("path", { d: "M11.5 15.5s1.5-2 4.5-2 4.5 2 4.5 2M3 4c0-2.754 4-2.754 4 0 0 1.967-2 1.64-2 4M5 11.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React431.createElement("path", { d: "M17.5 9a.5.5 0 110-1 .5.5 0 010 1zM10.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "#000", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef430 = React431.forwardRef(SvgEmojiPuzzled);
var EmojiPuzzled_default = ForwardRef430;

// node_modules/iconoir-react/dist/esm/EmojiQuite.mjs
var React432 = __toESM(require_react(), 1);
var __assign431 = function() {
  __assign431 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign431.apply(this, arguments);
};
function SvgEmojiQuite(passedProps, svgRef) {
  var context = React432.useContext(IconoirContext);
  var props = __assign431(__assign431({}, context), passedProps);
  return React432.createElement(
    "svg",
    __assign431({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React432.createElement("path", { d: "M9 15h6m7-3c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React432.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef431 = React432.forwardRef(SvgEmojiQuite);
var EmojiQuite_default = ForwardRef431;

// node_modules/iconoir-react/dist/esm/EmojiReally.mjs
var React433 = __toESM(require_react(), 1);
var __assign432 = function() {
  __assign432 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign432.apply(this, arguments);
};
function SvgEmojiReally(passedProps, svgRef) {
  var context = React433.useContext(IconoirContext);
  var props = __assign432(__assign432({}, context), passedProps);
  return React433.createElement(
    "svg",
    __assign432({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React433.createElement("path", { d: "M10 9H8m8 0h-2m1 6H9m-7-3c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef432 = React433.forwardRef(SvgEmojiReally);
var EmojiReally_default = ForwardRef432;

// node_modules/iconoir-react/dist/esm/EmojiSad.mjs
var React434 = __toESM(require_react(), 1);
var __assign433 = function() {
  __assign433 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign433.apply(this, arguments);
};
function SvgEmojiSad(passedProps, svgRef) {
  var context = React434.useContext(IconoirContext);
  var props = __assign433(__assign433({}, context), passedProps);
  return React434.createElement(
    "svg",
    __assign433({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React434.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React434.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React434.createElement("path", { d: "M7.5 15.5s1.5-2 4.5-2 4.5 2 4.5 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef433 = React434.forwardRef(SvgEmojiSad);
var EmojiSad_default = ForwardRef433;

// node_modules/iconoir-react/dist/esm/EmojiSatisfied.mjs
var React435 = __toESM(require_react(), 1);
var __assign434 = function() {
  __assign434 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign434.apply(this, arguments);
};
function SvgEmojiSatisfied(passedProps, svgRef) {
  var context = React435.useContext(IconoirContext);
  var props = __assign434(__assign434({}, context), passedProps);
  return React435.createElement(
    "svg",
    __assign434({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React435.createElement("path", { d: "M10 9H8m8 0h-2M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React435.createElement("path", { d: "M16.5 14.5s-1.5 2-4.5 2-4.5-2-4.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef434 = React435.forwardRef(SvgEmojiSatisfied);
var EmojiSatisfied_default = ForwardRef434;

// node_modules/iconoir-react/dist/esm/EmojiSingLeftNote.mjs
var React436 = __toESM(require_react(), 1);
var __assign435 = function() {
  __assign435 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign435.apply(this, arguments);
};
function SvgEmojiSingLeftNote(passedProps, svgRef) {
  var context = React436.useContext(IconoirContext);
  var props = __assign435(__assign435({}, context), passedProps);
  return React436.createElement(
    "svg",
    __assign435({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React436.createElement("path", { d: "M2.8 8.1a.9.9 0 11-1.8 0 .9.9 0 011.8 0z", fill: "currentColor" }),
    React436.createElement("path", { d: "M2.8 8.1a.9.9 0 11-1.8 0 .9.9 0 011.8 0zm0 0V3.6a.6.6 0 01.6-.6H5", stroke: "currentColor", strokeLinecap: "round" }),
    React436.createElement("path", { d: "M8 17a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React436.createElement("path", { d: "M2.05 13c.501 5.053 4.765 9 9.95 9 5.523 0 10-4.477 10-10S17.523 2 12 2a9.966 9.966 0 00-4 .832", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React436.createElement("path", { d: "M15.5 9a.5.5 0 100-1 .5.5 0 000 1zM8.5 9a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef435 = React436.forwardRef(SvgEmojiSingLeftNote);
var EmojiSingLeftNote_default = ForwardRef435;

// node_modules/iconoir-react/dist/esm/EmojiSingLeft.mjs
var React437 = __toESM(require_react(), 1);
var __assign436 = function() {
  __assign436 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign436.apply(this, arguments);
};
function SvgEmojiSingLeft(passedProps, svgRef) {
  var context = React437.useContext(IconoirContext);
  var props = __assign436(__assign436({}, context), passedProps);
  return React437.createElement(
    "svg",
    __assign436({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React437.createElement("path", { d: "M8 17a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React437.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React437.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef436 = React437.forwardRef(SvgEmojiSingLeft);
var EmojiSingLeft_default = ForwardRef436;

// node_modules/iconoir-react/dist/esm/EmojiSingRightNote.mjs
var React438 = __toESM(require_react(), 1);
var __assign437 = function() {
  __assign437 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign437.apply(this, arguments);
};
function SvgEmojiSingRightNote(passedProps, svgRef) {
  var context = React438.useContext(IconoirContext);
  var props = __assign437(__assign437({}, context), passedProps);
  return React438.createElement(
    "svg",
    __assign437({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React438.createElement("path", { d: "M20.8 8.1a.9.9 0 11-1.8 0 .9.9 0 011.8 0z", fill: "currentColor" }),
    React438.createElement("path", { d: "M20.8 8.1a.9.9 0 11-1.8 0 .9.9 0 011.8 0zm0 0V3.6a.6.6 0 01.6-.6H23", stroke: "currentColor", strokeLinecap: "round" }),
    React438.createElement("path", { d: "M16 17a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React438.createElement("path", { d: "M21.95 13c-.501 5.053-4.765 9-9.95 9-5.523 0-10-4.477-10-10S6.477 2 12 2c1.422 0 2.775.297 4 .832", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React438.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef437 = React438.forwardRef(SvgEmojiSingRightNote);
var EmojiSingRightNote_default = ForwardRef437;

// node_modules/iconoir-react/dist/esm/EmojiSingRight.mjs
var React439 = __toESM(require_react(), 1);
var __assign438 = function() {
  __assign438 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign438.apply(this, arguments);
};
function SvgEmojiSingRight(passedProps, svgRef) {
  var context = React439.useContext(IconoirContext);
  var props = __assign438(__assign438({}, context), passedProps);
  return React439.createElement(
    "svg",
    __assign438({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React439.createElement("path", { d: "M16 17a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React439.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React439.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React439.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef438 = React439.forwardRef(SvgEmojiSingRight);
var EmojiSingRight_default = ForwardRef438;

// node_modules/iconoir-react/dist/esm/EmojiSurpriseAlt.mjs
var React440 = __toESM(require_react(), 1);
var __assign439 = function() {
  __assign439 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign439.apply(this, arguments);
};
function SvgEmojiSurpriseAlt(passedProps, svgRef) {
  var context = React440.useContext(IconoirContext);
  var props = __assign439(__assign439({}, context), passedProps);
  return React440.createElement(
    "svg",
    __assign439({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React440.createElement("path", { d: "M12 17a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React440.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React440.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef439 = React440.forwardRef(SvgEmojiSurpriseAlt);
var EmojiSurpriseAlt_default = ForwardRef439;

// node_modules/iconoir-react/dist/esm/EmojiSurprise.mjs
var React441 = __toESM(require_react(), 1);
var __assign440 = function() {
  __assign440 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign440.apply(this, arguments);
};
function SvgEmojiSurprise(passedProps, svgRef) {
  var context = React441.useContext(IconoirContext);
  var props = __assign440(__assign440({}, context), passedProps);
  return React441.createElement(
    "svg",
    __assign440({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React441.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React441.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM12 17a1 1 0 110-2 1 1 0 010 2zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef440 = React441.forwardRef(SvgEmojiSurprise);
var EmojiSurprise_default = ForwardRef440;

// node_modules/iconoir-react/dist/esm/EmojiTalkingAngry.mjs
var React442 = __toESM(require_react(), 1);
var __assign441 = function() {
  __assign441 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign441.apply(this, arguments);
};
function SvgEmojiTalkingAngry(passedProps, svgRef) {
  var context = React442.useContext(IconoirContext);
  var props = __assign441(__assign441({}, context), passedProps);
  return React442.createElement(
    "svg",
    __assign441({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React442.createElement("path", { d: "M10 9H8m8 0h-2M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12zm12 6h-4v-3c0-.667.4-2 2-2s2 1.333 2 2v3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef441 = React442.forwardRef(SvgEmojiTalkingAngry);
var EmojiTalkingAngry_default = ForwardRef441;

// node_modules/iconoir-react/dist/esm/EmojiTalkingHappy.mjs
var React443 = __toESM(require_react(), 1);
var __assign442 = function() {
  __assign442 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign442.apply(this, arguments);
};
function SvgEmojiTalkingHappy(passedProps, svgRef) {
  var context = React443.useContext(IconoirContext);
  var props = __assign442(__assign442({}, context), passedProps);
  return React443.createElement(
    "svg",
    __assign442({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React443.createElement("path", { d: "M10 9H8m8 0h-2M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12zm12 1h-4v3c0 .667.4 2 2 2s2-1.333 2-2v-3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef442 = React443.forwardRef(SvgEmojiTalkingHappy);
var EmojiTalkingHappy_default = ForwardRef442;

// node_modules/iconoir-react/dist/esm/EmojiThinkLeft.mjs
var React444 = __toESM(require_react(), 1);
var __assign443 = function() {
  __assign443 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign443.apply(this, arguments);
};
function SvgEmojiThinkLeft(passedProps, svgRef) {
  var context = React444.useContext(IconoirContext);
  var props = __assign443(__assign443({}, context), passedProps);
  return React444.createElement(
    "svg",
    __assign443({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React444.createElement("path", { d: "M10 15H7m-5-3c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React444.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef443 = React444.forwardRef(SvgEmojiThinkLeft);
var EmojiThinkLeft_default = ForwardRef443;

// node_modules/iconoir-react/dist/esm/EmojiThinkRight.mjs
var React445 = __toESM(require_react(), 1);
var __assign444 = function() {
  __assign444 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign444.apply(this, arguments);
};
function SvgEmojiThinkRight(passedProps, svgRef) {
  var context = React445.useContext(IconoirContext);
  var props = __assign444(__assign444({}, context), passedProps);
  return React445.createElement(
    "svg",
    __assign444({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React445.createElement("path", { d: "M14 15h3m5-3c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React445.createElement("path", { d: "M8.5 9a.5.5 0 110-1 .5.5 0 010 1zM15.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef444 = React445.forwardRef(SvgEmojiThinkRight);
var EmojiThinkRight_default = ForwardRef444;

// node_modules/iconoir-react/dist/esm/Emoji.mjs
var React446 = __toESM(require_react(), 1);
var __assign445 = function() {
  __assign445 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign445.apply(this, arguments);
};
function SvgEmoji(passedProps, svgRef) {
  var context = React446.useContext(IconoirContext);
  var props = __assign445(__assign445({}, context), passedProps);
  return React446.createElement(
    "svg",
    __assign445({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React446.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React446.createElement("path", { d: "M16.5 14.5s-1.5 2-4.5 2-4.5-2-4.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React446.createElement("path", { d: "M15.5 9a.5.5 0 110-1 .5.5 0 010 1zM8.5 9a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef445 = React446.forwardRef(SvgEmoji);
var Emoji_default = ForwardRef445;

// node_modules/iconoir-react/dist/esm/EmptyPage.mjs
var React447 = __toESM(require_react(), 1);
var __assign446 = function() {
  __assign446 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign446.apply(this, arguments);
};
function SvgEmptyPage(passedProps, svgRef) {
  var context = React447.useContext(IconoirContext);
  var props = __assign446(__assign446({}, context), passedProps);
  return React447.createElement(
    "svg",
    __assign446({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React447.createElement("path", { d: "M4 21.4V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React447.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef446 = React447.forwardRef(SvgEmptyPage);
var EmptyPage_default = ForwardRef446;

// node_modules/iconoir-react/dist/esm/EnergyUsageWindow.mjs
var React448 = __toESM(require_react(), 1);
var __assign447 = function() {
  __assign447 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign447.apply(this, arguments);
};
function SvgEnergyUsageWindow(passedProps, svgRef) {
  var context = React448.useContext(IconoirContext);
  var props = __assign447(__assign447({}, context), passedProps);
  return React448.createElement(
    "svg",
    __assign447({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React448.createElement("path", { d: "M2 19V5a2 2 0 012-2h16a2 2 0 012 2v14a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React448.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M11.667 11L10 14h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef447 = React448.forwardRef(SvgEnergyUsageWindow);
var EnergyUsageWindow_default = ForwardRef447;

// node_modules/iconoir-react/dist/esm/EnlargeRoundArrow.mjs
var React449 = __toESM(require_react(), 1);
var __assign448 = function() {
  __assign448 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign448.apply(this, arguments);
};
function SvgEnlargeRoundArrow(passedProps, svgRef) {
  var context = React449.useContext(IconoirContext);
  var props = __assign448(__assign448({}, context), passedProps);
  return React449.createElement(
    "svg",
    __assign448({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React449.createElement("path", { d: "M8.5 9.5L6 12l2.5 2.5M15.5 9.5L18 12l-2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React449.createElement("path", { d: "M2 15V9a4 4 0 014-4h12a4 4 0 014 4v6a4 4 0 01-4 4H6a4 4 0 01-4-4z", stroke: "currentColor" })
  );
}
var ForwardRef448 = React449.forwardRef(SvgEnlargeRoundArrow);
var EnlargeRoundArrow_default = ForwardRef448;

// node_modules/iconoir-react/dist/esm/Enlarge.mjs
var React450 = __toESM(require_react(), 1);
var __assign449 = function() {
  __assign449 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign449.apply(this, arguments);
};
function SvgEnlarge(passedProps, svgRef) {
  var context = React450.useContext(IconoirContext);
  var props = __assign449(__assign449({}, context), passedProps);
  return React450.createElement(
    "svg",
    __assign449({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React450.createElement("path", { d: "M15 9l5-5m0 0v4m0-4h-4M9 15l-5 5m0 0v-4m0 4h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef449 = React450.forwardRef(SvgEnlarge);
var Enlarge_default = ForwardRef449;

// node_modules/iconoir-react/dist/esm/Erase.mjs
var React451 = __toESM(require_react(), 1);
var __assign450 = function() {
  __assign450 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign450.apply(this, arguments);
};
function SvgErase(passedProps, svgRef) {
  var context = React451.useContext(IconoirContext);
  var props = __assign450(__assign450({}, context), passedProps);
  return React451.createElement(
    "svg",
    __assign450({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React451.createElement("path", { d: "M21 21H9M15.889 14.89L8.464 7.463M2.893 12.607l9.193-9.193a2 2 0 012.828 0l4.95 4.95a2 2 0 010 2.828l-9.243 9.243a1.929 1.929 0 01-2.728 0l-5-5a2 2 0 010-2.828z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef450 = React451.forwardRef(SvgErase);
var Erase_default = ForwardRef450;

// node_modules/iconoir-react/dist/esm/ErrorWindow.mjs
var React452 = __toESM(require_react(), 1);
var __assign451 = function() {
  __assign451 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign451.apply(this, arguments);
};
function SvgErrorWindow(passedProps, svgRef) {
  var context = React452.useContext(IconoirContext);
  var props = __assign451(__assign451({}, context), passedProps);
  return React452.createElement(
    "svg",
    __assign451({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React452.createElement("path", { d: "M15 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v10", stroke: "currentColor", strokeLinecap: "round" }),
    React452.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M18 22.243l2.121-2.122m0 0L22.243 18m-2.122 2.121L18 18m2.121 2.121l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef451 = React452.forwardRef(SvgErrorWindow);
var ErrorWindow_default = ForwardRef451;

// node_modules/iconoir-react/dist/esm/EthereumCircle.mjs
var React453 = __toESM(require_react(), 1);
var __assign452 = function() {
  __assign452 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign452.apply(this, arguments);
};
function SvgEthereumCircle(passedProps, svgRef) {
  var context = React453.useContext(IconoirContext);
  var props = __assign452(__assign452({}, context), passedProps);
  return React453.createElement(
    "svg",
    __assign452({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React453.createElement("path", { d: "M7 12l5 7 5-7M7 12l5-7m-5 7l5 1m0-8l5 7m-5-7v8m5-1l-5 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React453.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef452 = React453.forwardRef(SvgEthereumCircle);
var EthereumCircle_default = ForwardRef452;

// node_modules/iconoir-react/dist/esm/EthereumRotateOut.mjs
var React454 = __toESM(require_react(), 1);
var __assign453 = function() {
  __assign453 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign453.apply(this, arguments);
};
function SvgEthereumRotateOut(passedProps, svgRef) {
  var context = React454.useContext(IconoirContext);
  var props = __assign453(__assign453({}, context), passedProps);
  return React454.createElement(
    "svg",
    __assign453({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React454.createElement("path", { d: "M21.168 8A10.003 10.003 0 0012 2C6.815 2 2.55 5.947 2.05 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React454.createElement("path", { d: "M18 8h3.4a.6.6 0 00.6-.6V4M2.881 16c1.544 3.532 5.068 6 9.168 6 5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React454.createElement("path", { d: "M6.05 16h-3.4a.6.6 0 00-.6.6V20M7 12l5 7 5-7M7 12l5-7m-5 7l5 1m0-8l5 7m-5-7v8m5-1l-5 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef453 = React454.forwardRef(SvgEthereumRotateOut);
var EthereumRotateOut_default = ForwardRef453;

// node_modules/iconoir-react/dist/esm/EuroSquare.mjs
var React455 = __toESM(require_react(), 1);
var __assign454 = function() {
  __assign454 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign454.apply(this, arguments);
};
function SvgEuroSquare(passedProps, svgRef) {
  var context = React455.useContext(IconoirContext);
  var props = __assign454(__assign454({}, context), passedProps);
  return React455.createElement(
    "svg",
    __assign454({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React455.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React455.createElement("path", { d: "M16 7.503A4.746 4.746 0 0013.87 7C11.18 7 9 9.239 9 12s2.18 5 4.87 5c.764 0 1.487-.18 2.13-.503M8 11h6M8 13h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef454 = React455.forwardRef(SvgEuroSquare);
var EuroSquare_default = ForwardRef454;

// node_modules/iconoir-react/dist/esm/Euro.mjs
var React456 = __toESM(require_react(), 1);
var __assign455 = function() {
  __assign455 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign455.apply(this, arguments);
};
function SvgEuro(passedProps, svgRef) {
  var context = React456.useContext(IconoirContext);
  var props = __assign455(__assign455({}, context), passedProps);
  return React456.createElement(
    "svg",
    __assign455({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React456.createElement("path", { d: "M18.5 4.804a8 8 0 100 14.392M5 10h11M5 14h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef455 = React456.forwardRef(SvgEuro);
var Euro_default = ForwardRef455;

// node_modules/iconoir-react/dist/esm/EvChargeAlt.mjs
var React457 = __toESM(require_react(), 1);
var __assign456 = function() {
  __assign456 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign456.apply(this, arguments);
};
function SvgEvChargeAlt(passedProps, svgRef) {
  var context = React457.useContext(IconoirContext);
  var props = __assign456(__assign456({}, context), passedProps);
  return React457.createElement(
    "svg",
    __assign456({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React457.createElement("path", { d: "M22 5l-2 4-2-4M16 5h-2v4h2M14 7h1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React457.createElement("path", { d: "M6 9v10a2 2 0 002 2h9a2 2 0 002-2v-5M9 5.6V7a2 2 0 01-2 2H5a2 2 0 01-2-2V5.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6zM4 5V3M8 5V3", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef456 = React457.forwardRef(SvgEvChargeAlt);
var EvChargeAlt_default = ForwardRef456;

// node_modules/iconoir-react/dist/esm/EvCharge.mjs
var React458 = __toESM(require_react(), 1);
var __assign457 = function() {
  __assign457 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign457.apply(this, arguments);
};
function SvgEvCharge(passedProps, svgRef) {
  var context = React458.useContext(IconoirContext);
  var props = __assign457(__assign457({}, context), passedProps);
  return React458.createElement(
    "svg",
    __assign457({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React458.createElement("path", { d: "M6 9v10a2 2 0 002 2h9a2 2 0 002-2v-5M9 5.6V7a2 2 0 01-2 2H5a2 2 0 01-2-2V5.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6zM4 5V3M8 5V3", stroke: "currentColor", strokeLinecap: "round" }),
    React458.createElement("path", { d: "M18.167 4L16.5 7h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef457 = React458.forwardRef(SvgEvCharge);
var EvCharge_default = ForwardRef457;

// node_modules/iconoir-react/dist/esm/EvPlugCharging.mjs
var React459 = __toESM(require_react(), 1);
var __assign458 = function() {
  __assign458 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign458.apply(this, arguments);
};
function SvgEvPlugCharging(passedProps, svgRef) {
  var context = React459.useContext(IconoirContext);
  var props = __assign458(__assign458({}, context), passedProps);
  return React459.createElement(
    "svg",
    __assign458({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React459.createElement("path", { d: "M10 13.154V21M15 8.385v2.769a2 2 0 01-2 2H7a2 2 0 01-2-2v-2.77a2 2 0 012-2h6a2 2 0 012 2zM13.333 6.385V3M6.667 6.385V3", stroke: "currentColor", strokeLinecap: "round" }),
    React459.createElement("path", { d: "M16.667 16L15 19h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef458 = React459.forwardRef(SvgEvPlugCharging);
var EvPlugCharging_default = ForwardRef458;

// node_modules/iconoir-react/dist/esm/EvPlugError.mjs
var React460 = __toESM(require_react(), 1);
var __assign459 = function() {
  __assign459 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign459.apply(this, arguments);
};
function SvgEvPlugError(passedProps, svgRef) {
  var context = React460.useContext(IconoirContext);
  var props = __assign459(__assign459({}, context), passedProps);
  return React460.createElement(
    "svg",
    __assign459({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React460.createElement("path", { d: "M10 13.154V21M15 8.385v2.769a2 2 0 01-2 2H7a2 2 0 01-2-2v-2.77a2 2 0 012-2h6a2 2 0 012 2zM13.333 6.385V3M6.667 6.385V3", stroke: "currentColor", strokeLinecap: "round" }),
    React460.createElement("path", { d: "M15.121 21.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L15.12 17.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef459 = React460.forwardRef(SvgEvPlugError);
var EvPlugError_default = ForwardRef459;

// node_modules/iconoir-react/dist/esm/EvPlug.mjs
var React461 = __toESM(require_react(), 1);
var __assign460 = function() {
  __assign460 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign460.apply(this, arguments);
};
function SvgEvPlug(passedProps, svgRef) {
  var context = React461.useContext(IconoirContext);
  var props = __assign460(__assign460({}, context), passedProps);
  return React461.createElement(
    "svg",
    __assign460({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React461.createElement("path", { d: "M12 13.154V21M17 8.385v2.769a2 2 0 01-2 2H9a2 2 0 01-2-2v-2.77a2 2 0 012-2h6a2 2 0 012 2zM15.333 6.385V3M8.667 6.385V3", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef460 = React461.forwardRef(SvgEvPlug);
var EvPlug_default = ForwardRef460;

// node_modules/iconoir-react/dist/esm/EvStation.mjs
var React462 = __toESM(require_react(), 1);
var __assign461 = function() {
  __assign461 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign461.apply(this, arguments);
};
function SvgEvStation(passedProps, svgRef) {
  var context = React462.useContext(IconoirContext);
  var props = __assign461(__assign461({}, context), passedProps);
  return React462.createElement(
    "svg",
    __assign461({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React462.createElement("path", { d: "M21 5v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React462.createElement("path", { d: "M5 19V9a2 2 0 012-2h9a2 2 0 012 2v10a2 2 0 01-2 2H7a2 2 0 01-2-2z", stroke: "currentColor" }),
    React462.createElement("path", { d: "M5 10V5a2 2 0 012-2h9a2 2 0 012 2v5", stroke: "currentColor" }),
    React462.createElement("path", { d: "M11.167 11L9.5 14h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef461 = React462.forwardRef(SvgEvStation);
var EvStation_default = ForwardRef461;

// node_modules/iconoir-react/dist/esm/EvTag.mjs
var React463 = __toESM(require_react(), 1);
var __assign462 = function() {
  __assign462 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign462.apply(this, arguments);
};
function SvgEvTag(passedProps, svgRef) {
  var context = React463.useContext(IconoirContext);
  var props = __assign462(__assign462({}, context), passedProps);
  return React463.createElement(
    "svg",
    __assign462({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React463.createElement("path", { d: "M18.5 9l-3 6-3-6M10 9H6v6h4M6 12h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React463.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" })
  );
}
var ForwardRef462 = React463.forwardRef(SvgEvTag);
var EvTag_default = ForwardRef462;

// node_modules/iconoir-react/dist/esm/Exclude.mjs
var React464 = __toESM(require_react(), 1);
var __assign463 = function() {
  __assign463 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign463.apply(this, arguments);
};
function SvgExclude(passedProps, svgRef) {
  var context = React464.useContext(IconoirContext);
  var props = __assign463(__assign463({}, context), passedProps);
  return React464.createElement(
    "svg",
    __assign463({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React464.createElement("path", { d: "M10.5 15h-.9a.6.6 0 00-.6.6v4.8a.6.6 0 00.6.6h10.8a.6.6 0 00.6-.6V9.6a.6.6 0 00-.6-.6h-4.8a.6.6 0 00-.6.6v.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React464.createElement("path", { d: "M13.5 15h.9a.6.6 0 00.6-.6v-.9M9 13.5v.9a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React464.createElement("path", { d: "M9 10.5v-.9a.6.6 0 01.6-.6h.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef463 = React464.forwardRef(SvgExclude);
var Exclude_default = ForwardRef463;

// node_modules/iconoir-react/dist/esm/ExpandLines.mjs
var React465 = __toESM(require_react(), 1);
var __assign464 = function() {
  __assign464 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign464.apply(this, arguments);
};
function SvgExpandLines(passedProps, svgRef) {
  var context = React465.useContext(IconoirContext);
  var props = __assign464(__assign464({}, context), passedProps);
  return React465.createElement(
    "svg",
    __assign464({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React465.createElement("path", { d: "M18 2H6M18 22H6M12 14v5m0 0l3-3m-3 3l-3-3M12 10V5m0 0l3 3m-3-3L9 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef464 = React465.forwardRef(SvgExpandLines);
var ExpandLines_default = ForwardRef464;

// node_modules/iconoir-react/dist/esm/Expand.mjs
var React466 = __toESM(require_react(), 1);
var __assign465 = function() {
  __assign465 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign465.apply(this, arguments);
};
function SvgExpand(passedProps, svgRef) {
  var context = React466.useContext(IconoirContext);
  var props = __assign465(__assign465({}, context), passedProps);
  return React466.createElement(
    "svg",
    __assign465({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React466.createElement("path", { d: "M9 9L4 4m0 0v4m0-4h4M15 9l5-5m0 0v4m0-4h-4M9 15l-5 5m0 0v-4m0 4h4M15 15l5 5m0 0v-4m0 4h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef465 = React466.forwardRef(SvgExpand);
var Expand_default = ForwardRef465;

// node_modules/iconoir-react/dist/esm/Extrude.mjs
var React467 = __toESM(require_react(), 1);
var __assign466 = function() {
  __assign466 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign466.apply(this, arguments);
};
function SvgExtrude(passedProps, svgRef) {
  var context = React467.useContext(IconoirContext);
  var props = __assign466(__assign466({}, context), passedProps);
  return React467.createElement(
    "svg",
    __assign466({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React467.createElement("path", { d: "M21 12.353v4.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647v-4.294a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React467.createElement("path", { d: "M3.528 12.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 21.5V17M12 12V2m0 0l2.5 2.5M12 2L9.5 4.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef466 = React467.forwardRef(SvgExtrude);
var Extrude_default = ForwardRef466;

// node_modules/iconoir-react/dist/esm/EyeAlt.mjs
var React468 = __toESM(require_react(), 1);
var __assign467 = function() {
  __assign467 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign467.apply(this, arguments);
};
function SvgEyeAlt(passedProps, svgRef) {
  var context = React468.useContext(IconoirContext);
  var props = __assign467(__assign467({}, context), passedProps);
  return React468.createElement(
    "svg",
    __assign467({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React468.createElement("path", { d: "M3 13c3.6-8 14.4-8 18 0M12 17a3 3 0 110-6 3 3 0 010 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef467 = React468.forwardRef(SvgEyeAlt);
var EyeAlt_default = ForwardRef467;

// node_modules/iconoir-react/dist/esm/EyeClose.mjs
var React469 = __toESM(require_react(), 1);
var __assign468 = function() {
  __assign468 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign468.apply(this, arguments);
};
function SvgEyeClose(passedProps, svgRef) {
  var context = React469.useContext(IconoirContext);
  var props = __assign468(__assign468({}, context), passedProps);
  return React469.createElement(
    "svg",
    __assign468({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React469.createElement("path", { d: "M19.5 16l-2.475-3.396M12 17.5V14M4.5 16l2.469-3.388M3 8c3.6 8 14.4 8 18 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef468 = React469.forwardRef(SvgEyeClose);
var EyeClose_default = ForwardRef468;

// node_modules/iconoir-react/dist/esm/EyeEmpty.mjs
var React470 = __toESM(require_react(), 1);
var __assign469 = function() {
  __assign469 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign469.apply(this, arguments);
};
function SvgEyeEmpty(passedProps, svgRef) {
  var context = React470.useContext(IconoirContext);
  var props = __assign469(__assign469({}, context), passedProps);
  return React470.createElement(
    "svg",
    __assign469({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React470.createElement("path", { d: "M12 14a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React470.createElement("path", { d: "M21 12c-1.889 2.991-5.282 6-9 6s-7.111-3.009-9-6c2.299-2.842 4.992-6 9-6s6.701 3.158 9 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef469 = React470.forwardRef(SvgEyeEmpty);
var EyeEmpty_default = ForwardRef469;

// node_modules/iconoir-react/dist/esm/EyeOff.mjs
var React471 = __toESM(require_react(), 1);
var __assign470 = function() {
  __assign470 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign470.apply(this, arguments);
};
function SvgEyeOff(passedProps, svgRef) {
  var context = React471.useContext(IconoirContext);
  var props = __assign470(__assign470({}, context), passedProps);
  return React471.createElement(
    "svg",
    __assign470({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React471.createElement("path", { d: "M3 3l18 18M10.5 10.677a2 2 0 002.823 2.823", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React471.createElement("path", { d: "M7.362 7.561C5.68 8.74 4.279 10.42 3 12c1.889 2.991 5.282 6 9 6 1.55 0 3.043-.523 4.395-1.35M12 6c4.008 0 6.701 3.158 9 6a15.66 15.66 0 01-1.078 1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef470 = React471.forwardRef(SvgEyeOff);
var EyeOff_default = ForwardRef470;

// node_modules/iconoir-react/dist/esm/FaceId.mjs
var React472 = __toESM(require_react(), 1);
var __assign471 = function() {
  __assign471 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign471.apply(this, arguments);
};
function SvgFaceId(passedProps, svgRef) {
  var context = React472.useContext(IconoirContext);
  var props = __assign471(__assign471({}, context), passedProps);
  return React472.createElement(
    "svg",
    __assign471({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React472.createElement("path", { d: "M7 3H5a2 2 0 00-2 2v2M17 3h2a2 2 0 012 2v2M16 8v2M8 8v2M9 16s1 1 3 1 3-1 3-1M12 8v5h-1M7 21H5a2 2 0 01-2-2v-2M17 21h2a2 2 0 002-2v-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef471 = React472.forwardRef(SvgFaceId);
var FaceId_default = ForwardRef471;

// node_modules/iconoir-react/dist/esm/FacebookTag.mjs
var React473 = __toESM(require_react(), 1);
var __assign472 = function() {
  __assign472 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign472.apply(this, arguments);
};
function SvgFacebookTag(passedProps, svgRef) {
  var context = React473.useContext(IconoirContext);
  var props = __assign472(__assign472({}, context), passedProps);
  return React473.createElement(
    "svg",
    __assign472({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React473.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React473.createElement("path", { d: "M11 21v-9c0-2.188.5-4 4-4M9 13h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef472 = React473.forwardRef(SvgFacebookTag);
var FacebookTag_default = ForwardRef472;

// node_modules/iconoir-react/dist/esm/Facebook.mjs
var React474 = __toESM(require_react(), 1);
var __assign473 = function() {
  __assign473 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign473.apply(this, arguments);
};
function SvgFacebook(passedProps, svgRef) {
  var context = React474.useContext(IconoirContext);
  var props = __assign473(__assign473({}, context), passedProps);
  return React474.createElement(
    "svg",
    __assign473({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React474.createElement("path", { d: "M17 2h-3a5 5 0 00-5 5v3H6v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3V2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef473 = React474.forwardRef(SvgFacebook);
var Facebook_default = ForwardRef473;

// node_modules/iconoir-react/dist/esm/Facetime.mjs
var React475 = __toESM(require_react(), 1);
var __assign474 = function() {
  __assign474 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign474.apply(this, arguments);
};
function SvgFacetime(passedProps, svgRef) {
  var context = React475.useContext(IconoirContext);
  var props = __assign474(__assign474({}, context), passedProps);
  return React475.createElement(
    "svg",
    __assign474({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React475.createElement("path", { d: "M2 16V8a6 6 0 016-6h8a6 6 0 016 6v8a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React475.createElement("path", { d: "M6 13v-2a2 2 0 012-2h3a2 2 0 012 2v2a2 2 0 01-2 2H8a2 2 0 01-2-2z", stroke: "currentColor" }),
    React475.createElement("path", { d: "M17.04 9.22l-3.067 2.3a.6.6 0 000 .96l3.067 2.3a.6.6 0 00.96-.48V9.7a.6.6 0 00-.96-.48z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef474 = React475.forwardRef(SvgFacetime);
var Facetime_default = ForwardRef474;

// node_modules/iconoir-react/dist/esm/Farm.mjs
var React476 = __toESM(require_react(), 1);
var __assign475 = function() {
  __assign475 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign475.apply(this, arguments);
};
function SvgFarm(passedProps, svgRef) {
  var context = React476.useContext(IconoirContext);
  var props = __assign475(__assign475({}, context), passedProps);
  return React476.createElement(
    "svg",
    __assign475({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React476.createElement("path", { d: "M5 20H2V8l6-3 6 3v12h-3m-6 0v-7h6v7m-6 0h6M18 14v6M14 17h8M14 14h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef475 = React476.forwardRef(SvgFarm);
var Farm_default = ForwardRef475;

// node_modules/iconoir-react/dist/esm/FastArrowDownBox.mjs
var React477 = __toESM(require_react(), 1);
var __assign476 = function() {
  __assign476 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign476.apply(this, arguments);
};
function SvgFastArrowDownBox(passedProps, svgRef) {
  var context = React477.useContext(IconoirContext);
  var props = __assign476(__assign476({}, context), passedProps);
  return React477.createElement(
    "svg",
    __assign476({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React477.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React477.createElement("path", { d: "M15.5 7.5L12 11 8.5 7.5M15.5 13.5L12 17l-3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef476 = React477.forwardRef(SvgFastArrowDownBox);
var FastArrowDownBox_default = ForwardRef476;

// node_modules/iconoir-react/dist/esm/FastArrowDown.mjs
var React478 = __toESM(require_react(), 1);
var __assign477 = function() {
  __assign477 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign477.apply(this, arguments);
};
function SvgFastArrowDown(passedProps, svgRef) {
  var context = React478.useContext(IconoirContext);
  var props = __assign477(__assign477({}, context), passedProps);
  return React478.createElement(
    "svg",
    __assign477({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React478.createElement("path", { d: "M6 13l6 6 6-6M6 5l6 6 6-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef477 = React478.forwardRef(SvgFastArrowDown);
var FastArrowDown_default = ForwardRef477;

// node_modules/iconoir-react/dist/esm/FastArrowLeftBox.mjs
var React479 = __toESM(require_react(), 1);
var __assign478 = function() {
  __assign478 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign478.apply(this, arguments);
};
function SvgFastArrowLeftBox(passedProps, svgRef) {
  var context = React479.useContext(IconoirContext);
  var props = __assign478(__assign478({}, context), passedProps);
  return React479.createElement(
    "svg",
    __assign478({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React479.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React479.createElement("path", { d: "M16.5 8.5L13 12l3.5 3.5M10.5 8.5L7 12l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef478 = React479.forwardRef(SvgFastArrowLeftBox);
var FastArrowLeftBox_default = ForwardRef478;

// node_modules/iconoir-react/dist/esm/FastArrowLeft.mjs
var React480 = __toESM(require_react(), 1);
var __assign479 = function() {
  __assign479 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign479.apply(this, arguments);
};
function SvgFastArrowLeft(passedProps, svgRef) {
  var context = React480.useContext(IconoirContext);
  var props = __assign479(__assign479({}, context), passedProps);
  return React480.createElement(
    "svg",
    __assign479({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React480.createElement("path", { d: "M11 6l-6 6 6 6M19 6l-6 6 6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef479 = React480.forwardRef(SvgFastArrowLeft);
var FastArrowLeft_default = ForwardRef479;

// node_modules/iconoir-react/dist/esm/FastArrowRightBox.mjs
var React481 = __toESM(require_react(), 1);
var __assign480 = function() {
  __assign480 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign480.apply(this, arguments);
};
function SvgFastArrowRightBox(passedProps, svgRef) {
  var context = React481.useContext(IconoirContext);
  var props = __assign480(__assign480({}, context), passedProps);
  return React481.createElement(
    "svg",
    __assign480({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React481.createElement("path", { d: "M8 8.5l3.5 3.5L8 15.5M14 8.5l3.5 3.5-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React481.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef480 = React481.forwardRef(SvgFastArrowRightBox);
var FastArrowRightBox_default = ForwardRef480;

// node_modules/iconoir-react/dist/esm/FastArrowRight.mjs
var React482 = __toESM(require_react(), 1);
var __assign481 = function() {
  __assign481 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign481.apply(this, arguments);
};
function SvgFastArrowRight(passedProps, svgRef) {
  var context = React482.useContext(IconoirContext);
  var props = __assign481(__assign481({}, context), passedProps);
  return React482.createElement(
    "svg",
    __assign481({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React482.createElement("path", { d: "M13 6l6 6-6 6M5 6l6 6-6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef481 = React482.forwardRef(SvgFastArrowRight);
var FastArrowRight_default = ForwardRef481;

// node_modules/iconoir-react/dist/esm/FastArrowUpBox.mjs
var React483 = __toESM(require_react(), 1);
var __assign482 = function() {
  __assign482 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign482.apply(this, arguments);
};
function SvgFastArrowUpBox(passedProps, svgRef) {
  var context = React483.useContext(IconoirContext);
  var props = __assign482(__assign482({}, context), passedProps);
  return React483.createElement(
    "svg",
    __assign482({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React483.createElement("path", { d: "M15.5 16.5L12 13l-3.5 3.5M15.5 10.5L12 7l-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React483.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef482 = React483.forwardRef(SvgFastArrowUpBox);
var FastArrowUpBox_default = ForwardRef482;

// node_modules/iconoir-react/dist/esm/FastArrowUp.mjs
var React484 = __toESM(require_react(), 1);
var __assign483 = function() {
  __assign483 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign483.apply(this, arguments);
};
function SvgFastArrowUp(passedProps, svgRef) {
  var context = React484.useContext(IconoirContext);
  var props = __assign483(__assign483({}, context), passedProps);
  return React484.createElement(
    "svg",
    __assign483({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React484.createElement("path", { d: "M6 11l6-6 6 6M6 19l6-6 6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef483 = React484.forwardRef(SvgFastArrowUp);
var FastArrowUp_default = ForwardRef483;

// node_modules/iconoir-react/dist/esm/FastDownCircle.mjs
var React485 = __toESM(require_react(), 1);
var __assign484 = function() {
  __assign484 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign484.apply(this, arguments);
};
function SvgFastDownCircle(passedProps, svgRef) {
  var context = React485.useContext(IconoirContext);
  var props = __assign484(__assign484({}, context), passedProps);
  return React485.createElement(
    "svg",
    __assign484({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React485.createElement("path", { d: "M8.5 7.5L12 11l3.5-3.5M8.5 13.5L12 17l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React485.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef484 = React485.forwardRef(SvgFastDownCircle);
var FastDownCircle_default = ForwardRef484;

// node_modules/iconoir-react/dist/esm/FastLeftCircle.mjs
var React486 = __toESM(require_react(), 1);
var __assign485 = function() {
  __assign485 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign485.apply(this, arguments);
};
function SvgFastLeftCircle(passedProps, svgRef) {
  var context = React486.useContext(IconoirContext);
  var props = __assign485(__assign485({}, context), passedProps);
  return React486.createElement(
    "svg",
    __assign485({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React486.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React486.createElement("path", { d: "M16.5 8.5L13 12l3.5 3.5M10.5 8.5L7 12l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef485 = React486.forwardRef(SvgFastLeftCircle);
var FastLeftCircle_default = ForwardRef485;

// node_modules/iconoir-react/dist/esm/FastRightCircle.mjs
var React487 = __toESM(require_react(), 1);
var __assign486 = function() {
  __assign486 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign486.apply(this, arguments);
};
function SvgFastRightCircle(passedProps, svgRef) {
  var context = React487.useContext(IconoirContext);
  var props = __assign486(__assign486({}, context), passedProps);
  return React487.createElement(
    "svg",
    __assign486({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React487.createElement("path", { d: "M8 8.5l3.5 3.5L8 15.5M14 8.5l3.5 3.5-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React487.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef486 = React487.forwardRef(SvgFastRightCircle);
var FastRightCircle_default = ForwardRef486;

// node_modules/iconoir-react/dist/esm/FastUpCircle.mjs
var React488 = __toESM(require_react(), 1);
var __assign487 = function() {
  __assign487 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign487.apply(this, arguments);
};
function SvgFastUpCircle(passedProps, svgRef) {
  var context = React488.useContext(IconoirContext);
  var props = __assign487(__assign487({}, context), passedProps);
  return React488.createElement(
    "svg",
    __assign487({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React488.createElement("path", { d: "M8.5 16.5L12 13l3.5 3.5M8.5 10.5L12 7l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React488.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef487 = React488.forwardRef(SvgFastUpCircle);
var FastUpCircle_default = ForwardRef487;

// node_modules/iconoir-react/dist/esm/FavouriteBook.mjs
var React489 = __toESM(require_react(), 1);
var __assign488 = function() {
  __assign488 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign488.apply(this, arguments);
};
function SvgFavouriteBook(passedProps, svgRef) {
  var context = React489.useContext(IconoirContext);
  var props = __assign488(__assign488({}, context), passedProps);
  return React489.createElement(
    "svg",
    __assign488({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React489.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114", stroke: "currentColor", strokeLinecap: "round" }),
    React489.createElement("path", { d: "M16 8.78a2.28 2.28 0 01-.662 1.606c-.976.984-1.923 2.01-2.936 2.958a.597.597 0 01-.822-.017l-2.918-2.94a2.281 2.281 0 010-3.214 2.277 2.277 0 013.232 0L12 7.28l.106-.107A2.276 2.276 0 0116 8.78z", stroke: "currentColor", strokeLinejoin: "round" }),
    React489.createElement("path", { d: "M6 17h14M6 21h14", stroke: "currentColor", strokeLinecap: "round" }),
    React489.createElement("path", { d: "M6 21a2 2 0 110-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef488 = React489.forwardRef(SvgFavouriteBook);
var FavouriteBook_default = ForwardRef488;

// node_modules/iconoir-react/dist/esm/FavouriteWindow.mjs
var React490 = __toESM(require_react(), 1);
var __assign489 = function() {
  __assign489 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign489.apply(this, arguments);
};
function SvgFavouriteWindow(passedProps, svgRef) {
  var context = React490.useContext(IconoirContext);
  var props = __assign489(__assign489({}, context), passedProps);
  return React490.createElement(
    "svg",
    __assign489({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React490.createElement("path", { d: "M13 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v8", stroke: "currentColor", strokeLinecap: "round" }),
    React490.createElement("path", { d: "M22 17.28a2.28 2.28 0 01-.662 1.606c-.976.984-1.923 2.01-2.936 2.958a.597.597 0 01-.823-.017l-2.918-2.94a2.281 2.281 0 010-3.214 2.277 2.277 0 013.233 0l.106.107.106-.107A2.277 2.277 0 0122 17.28z", stroke: "currentColor", strokeLinejoin: "round" }),
    React490.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef489 = React490.forwardRef(SvgFavouriteWindow);
var FavouriteWindow_default = ForwardRef489;

// node_modules/iconoir-react/dist/esm/Female.mjs
var React491 = __toESM(require_react(), 1);
var __assign490 = function() {
  __assign490 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign490.apply(this, arguments);
};
function SvgFemale(passedProps, svgRef) {
  var context = React491.useContext(IconoirContext);
  var props = __assign490(__assign490({}, context), passedProps);
  return React491.createElement(
    "svg",
    __assign490({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React491.createElement("path", { d: "M12 15a6 6 0 100-12 6 6 0 000 12zm0 0v4m0 2v-2m0 0h-2m2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef490 = React491.forwardRef(SvgFemale);
var Female_default = ForwardRef490;

// node_modules/iconoir-react/dist/esm/Figma.mjs
var React492 = __toESM(require_react(), 1);
var __assign491 = function() {
  __assign491 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign491.apply(this, arguments);
};
function SvgFigma(passedProps, svgRef) {
  var context = React492.useContext(IconoirContext);
  var props = __assign491(__assign491({}, context), passedProps);
  return React492.createElement(
    "svg",
    __assign491({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React492.createElement("path", { d: "M6 6a3 3 0 013-3h3v6H9a3 3 0 01-3-3zM12 3h3a3 3 0 010 6h-3V3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React492.createElement("path", { d: "M12 12a3 3 0 116 0 3 3 0 01-6 0v0zM6 18a3 3 0 013-3h3v3a3 3 0 01-6 0zM6 12a3 3 0 013-3h3v6H9a3 3 0 01-3-3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef491 = React492.forwardRef(SvgFigma);
var Figma_default = ForwardRef491;

// node_modules/iconoir-react/dist/esm/FileNotFound.mjs
var React493 = __toESM(require_react(), 1);
var __assign492 = function() {
  __assign492 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign492.apply(this, arguments);
};
function SvgFileNotFound(passedProps, svgRef) {
  var context = React493.useContext(IconoirContext);
  var props = __assign492(__assign492({}, context), passedProps);
  return React493.createElement(
    "svg",
    __assign492({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React493.createElement("path", { d: "M12 8v4M12 16.01l.01-.011M9 3H4v3M4 11v2M20 11v2M15 3h5v3M9 21H4v-3M15 21h5v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef492 = React493.forwardRef(SvgFileNotFound);
var FileNotFound_default = ForwardRef492;

// node_modules/iconoir-react/dist/esm/FillColor.mjs
var React494 = __toESM(require_react(), 1);
var __assign493 = function() {
  __assign493 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign493.apply(this, arguments);
};
function SvgFillColor(passedProps, svgRef) {
  var context = React494.useContext(IconoirContext);
  var props = __assign493(__assign493({}, context), passedProps);
  return React494.createElement(
    "svg",
    __assign493({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React494.createElement("path", { d: "M2.636 10.293l7.071-7.071 8.485 8.485-7.07 7.071a2 2 0 01-2.83 0l-5.656-5.657a2 2 0 010-2.828zM8.293 1.808l1.414 1.414", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React494.createElement("path", { clipRule: "evenodd", d: "M20 15s3 2.993 3 4.887c0 1.655-1.345 3-3 3-1.656 0-2.988-1.345-3-3C17.01 17.992 20 15 20 15z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef493 = React494.forwardRef(SvgFillColor);
var FillColor_default = ForwardRef493;

// node_modules/iconoir-react/dist/esm/Fillet3D.mjs
var React495 = __toESM(require_react(), 1);
var __assign494 = function() {
  __assign494 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign494.apply(this, arguments);
};
function SvgFillet3D(passedProps, svgRef) {
  var context = React495.useContext(IconoirContext);
  var props = __assign494(__assign494({}, context), passedProps);
  return React495.createElement(
    "svg",
    __assign494({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React495.createElement("path", { d: "M2 20v-4C2 8.268 8.268 2 16 2h4M20.839 20.84h-3.536m3.536 0v-3.537m0 3.536L18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React495.createElement("path", { d: "M9 9l7 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "2 3" })
  );
}
var ForwardRef494 = React495.forwardRef(SvgFillet3D);
var Fillet3D_default = ForwardRef494;

// node_modules/iconoir-react/dist/esm/FilterAlt.mjs
var React496 = __toESM(require_react(), 1);
var __assign495 = function() {
  __assign495 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign495.apply(this, arguments);
};
function SvgFilterAlt(passedProps, svgRef) {
  var context = React496.useContext(IconoirContext);
  var props = __assign495(__assign495({}, context), passedProps);
  return React496.createElement(
    "svg",
    __assign495({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React496.createElement("path", { d: "M3 7V4a1 1 0 011-1h16a1 1 0 011 1v3M3 7l6.65 5.7a1 1 0 01.35.76v6.26a1 1 0 001.242.97l2-.5a1 1 0 00.758-.97v-5.76a1 1 0 01.35-.76L21 7M3 7h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef495 = React496.forwardRef(SvgFilterAlt);
var FilterAlt_default = ForwardRef495;

// node_modules/iconoir-react/dist/esm/FilterListCircle.mjs
var React497 = __toESM(require_react(), 1);
var __assign496 = function() {
  __assign496 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign496.apply(this, arguments);
};
function SvgFilterListCircle(passedProps, svgRef) {
  var context = React497.useContext(IconoirContext);
  var props = __assign496(__assign496({}, context), passedProps);
  return React497.createElement(
    "svg",
    __assign496({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React497.createElement("path", { d: "M6 9h12M8 13h8M10 17h4M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef496 = React497.forwardRef(SvgFilterListCircle);
var FilterListCircle_default = ForwardRef496;

// node_modules/iconoir-react/dist/esm/FilterList.mjs
var React498 = __toESM(require_react(), 1);
var __assign497 = function() {
  __assign497 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign497.apply(this, arguments);
};
function SvgFilterList(passedProps, svgRef) {
  var context = React498.useContext(IconoirContext);
  var props = __assign497(__assign497({}, context), passedProps);
  return React498.createElement(
    "svg",
    __assign497({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React498.createElement("path", { d: "M3 6h18M7 12h10M11 18h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef497 = React498.forwardRef(SvgFilterList);
var FilterList_default = ForwardRef497;

// node_modules/iconoir-react/dist/esm/Filter.mjs
var React499 = __toESM(require_react(), 1);
var __assign498 = function() {
  __assign498 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign498.apply(this, arguments);
};
function SvgFilter(passedProps, svgRef) {
  var context = React499.useContext(IconoirContext);
  var props = __assign498(__assign498({}, context), passedProps);
  return React499.createElement(
    "svg",
    __assign498({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React499.createElement("path", { d: "M4 3h16a1 1 0 011 1v1.586a1 1 0 01-.293.707l-6.415 6.414a1 1 0 00-.292.707v6.305a1 1 0 01-1.243.97l-2-.5a1 1 0 01-.757-.97v-5.805a1 1 0 00-.293-.707L3.292 6.293A1 1 0 013 5.586V4a1 1 0 011-1z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef498 = React499.forwardRef(SvgFilter);
var Filter_default = ForwardRef498;

// node_modules/iconoir-react/dist/esm/Finder.mjs
var React500 = __toESM(require_react(), 1);
var __assign499 = function() {
  __assign499 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign499.apply(this, arguments);
};
function SvgFinder(passedProps, svgRef) {
  var context = React500.useContext(IconoirContext);
  var props = __assign499(__assign499({}, context), passedProps);
  return React500.createElement(
    "svg",
    __assign499({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React500.createElement("path", { d: "M3 15V9a6 6 0 016-6h6a6 6 0 016 6v6a6 6 0 01-6 6H9a6 6 0 01-6-6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React500.createElement("path", { d: "M15 3s-4.5 0-4.5 9H13c0 9 2 9 2 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React500.createElement("path", { d: "M16.5 14.5s-1.5 2-4.5 2-4.5-2-4.5-2M7 9v2M17 9v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef499 = React500.forwardRef(SvgFinder);
var Finder_default = ForwardRef499;

// node_modules/iconoir-react/dist/esm/FingerprintCheckCircle.mjs
var React501 = __toESM(require_react(), 1);
var __assign500 = function() {
  __assign500 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign500.apply(this, arguments);
};
function SvgFingerprintCheckCircle(passedProps, svgRef) {
  var context = React501.useContext(IconoirContext);
  var props = __assign500(__assign500({}, context), passedProps);
  return React501.createElement(
    "svg",
    __assign500({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React501.createElement("path", { d: "M7 16v-4.639c0-.51.1-.999.285-1.453M17 16v-3.185m-7.778-5.08A5.506 5.506 0 0112 7c2.28 0 4.203 1.33 4.805 3.15M10 17v-2.177M14 17v-5.147C14 10.83 13.105 10 12 10s-2 .83-2 1.853v.794", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React501.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10c0 1.045-.16 2.053-.458 3M15.5 20.5l2 2 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef500 = React501.forwardRef(SvgFingerprintCheckCircle);
var FingerprintCheckCircle_default = ForwardRef500;

// node_modules/iconoir-react/dist/esm/FingerprintCircle.mjs
var React502 = __toESM(require_react(), 1);
var __assign501 = function() {
  __assign501 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign501.apply(this, arguments);
};
function SvgFingerprintCircle(passedProps, svgRef) {
  var context = React502.useContext(IconoirContext);
  var props = __assign501(__assign501({}, context), passedProps);
  return React502.createElement(
    "svg",
    __assign501({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React502.createElement("path", { d: "M7 16v-4.639c0-.51.1-.999.285-1.453M17 16v-3.185m-7.778-5.08A5.506 5.506 0 0112 7c2.28 0 4.203 1.33 4.805 3.15M10 17v-2.177M14 17v-5.147C14 10.83 13.105 10 12 10s-2 .83-2 1.853v.794", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React502.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef501 = React502.forwardRef(SvgFingerprintCircle);
var FingerprintCircle_default = ForwardRef501;

// node_modules/iconoir-react/dist/esm/FingerprintErrorCircle.mjs
var React503 = __toESM(require_react(), 1);
var __assign502 = function() {
  __assign502 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign502.apply(this, arguments);
};
function SvgFingerprintErrorCircle(passedProps, svgRef) {
  var context = React503.useContext(IconoirContext);
  var props = __assign502(__assign502({}, context), passedProps);
  return React503.createElement(
    "svg",
    __assign502({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React503.createElement("path", { d: "M7 16v-4.639c0-.51.1-.999.285-1.453M17 14v-1.185m-7.778-5.08A5.506 5.506 0 0112 7c2.28 0 4.203 1.33 4.805 3.15M10 17v-2.177M14 17v-5.147C14 10.83 13.105 10 12 10s-2 .83-2 1.853v.794", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React503.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10c0 1.045-.16 2.053-.458 3M17.121 22.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L17.12 18.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef502 = React503.forwardRef(SvgFingerprintErrorCircle);
var FingerprintErrorCircle_default = ForwardRef502;

// node_modules/iconoir-react/dist/esm/FingerprintLockCircle.mjs
var React504 = __toESM(require_react(), 1);
var __assign503 = function() {
  __assign503 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign503.apply(this, arguments);
};
function SvgFingerprintLockCircle(passedProps, svgRef) {
  var context = React504.useContext(IconoirContext);
  var props = __assign503(__assign503({}, context), passedProps);
  return React504.createElement(
    "svg",
    __assign503({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React504.createElement("path", { d: "M7 16v-4.639c0-.51.1-.999.285-1.453M17 13.5v-.685m-7.778-5.08A5.506 5.506 0 0112 7c2.28 0 4.203 1.33 4.805 3.15M10 17v-2.177M14 17v-5.147C14 10.83 13.105 10 12 10s-2 .83-2 1.853v.794", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React504.createElement("path", { d: "M14 21.8c-.646.131-1.315.2-2 .2-5.523 0-10-4.477-10-10S6.477 2 12 2s10 4.477 10 10c0 .254-.01.506-.028.755", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React504.createElement("path", { d: "M21.167 18.5h.233a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 01.6-.6h.233m3.334 0v-1.75c0-.583-.334-1.75-1.667-1.75s-1.667 1.167-1.667 1.75v1.75m3.334 0h-3.334", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef503 = React504.forwardRef(SvgFingerprintLockCircle);
var FingerprintLockCircle_default = ForwardRef503;

// node_modules/iconoir-react/dist/esm/FingerprintPhone.mjs
var React505 = __toESM(require_react(), 1);
var __assign504 = function() {
  __assign504 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign504.apply(this, arguments);
};
function SvgFingerprintPhone(passedProps, svgRef) {
  var context = React505.useContext(IconoirContext);
  var props = __assign504(__assign504({}, context), passedProps);
  return React505.createElement(
    "svg",
    __assign504({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React505.createElement("path", { d: "M12 11V6.362c0-.51.1-1 .284-1.454M22 11V7.815m-7.778-5.08A5.507 5.507 0 0117 2c2.28 0 4.203 1.33 4.805 3.15M15 12V9.824M19 12V6.853C19 5.83 18.105 5 17 5s-2 .83-2 1.853v.794M8 17.01l.01-.011M8 5H3.6a.6.6 0 00-.6.6v14.8a.6.6 0 00.6.6h8.8a.6.6 0 00.6-.6V16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef504 = React505.forwardRef(SvgFingerprintPhone);
var FingerprintPhone_default = ForwardRef504;

// node_modules/iconoir-react/dist/esm/FingerprintScan.mjs
var React506 = __toESM(require_react(), 1);
var __assign505 = function() {
  __assign505 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign505.apply(this, arguments);
};
function SvgFingerprintScan(passedProps, svgRef) {
  var context = React506.useContext(IconoirContext);
  var props = __assign505(__assign505({}, context), passedProps);
  return React506.createElement(
    "svg",
    __assign505({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React506.createElement("path", { d: "M7 16v-4.639c0-.51.1-.999.285-1.453M17 16v-3.185m-7.778-5.08A5.506 5.506 0 0112 7c2.28 0 4.203 1.33 4.805 3.15M10 17v-2.177M14 17v-5.147C14 10.83 13.105 10 12 10s-2 .83-2 1.853v.794M6 3H3v3M18 3h3v3M6 21H3v-3M18 21h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef505 = React506.forwardRef(SvgFingerprintScan);
var FingerprintScan_default = ForwardRef505;

// node_modules/iconoir-react/dist/esm/FingerprintSquare.mjs
var React507 = __toESM(require_react(), 1);
var __assign506 = function() {
  __assign506 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign506.apply(this, arguments);
};
function SvgFingerprintSquare(passedProps, svgRef) {
  var context = React507.useContext(IconoirContext);
  var props = __assign506(__assign506({}, context), passedProps);
  return React507.createElement(
    "svg",
    __assign506({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React507.createElement("path", { d: "M7 16v-4.639c0-.51.1-.999.285-1.453M17 16v-3.185m-7.778-5.08A5.506 5.506 0 0112 7c2.28 0 4.203 1.33 4.805 3.15M10 17v-2.177M14 17v-5.147C14 10.83 13.105 10 12 10s-2 .83-2 1.853v.794", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React507.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef506 = React507.forwardRef(SvgFingerprintSquare);
var FingerprintSquare_default = ForwardRef506;

// node_modules/iconoir-react/dist/esm/FingerprintWindow.mjs
var React508 = __toESM(require_react(), 1);
var __assign507 = function() {
  __assign507 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign507.apply(this, arguments);
};
function SvgFingerprintWindow(passedProps, svgRef) {
  var context = React508.useContext(IconoirContext);
  var props = __assign507(__assign507({}, context), passedProps);
  return React508.createElement(
    "svg",
    __assign507({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React508.createElement("path", { d: "M9 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v6", stroke: "currentColor", strokeLinecap: "round" }),
    React508.createElement("path", { d: "M12 21v-4.639c0-.51.1-.999.284-1.453M22 21v-3.185m-7.778-5.08A5.506 5.506 0 0117 12c2.28 0 4.203 1.33 4.805 3.15M15 22v-2.177M19 22v-5.147C19 15.83 18.105 15 17 15s-2 .83-2 1.853v.794M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef507 = React508.forwardRef(SvgFingerprintWindow);
var FingerprintWindow_default = ForwardRef507;

// node_modules/iconoir-react/dist/esm/Fingerprint.mjs
var React509 = __toESM(require_react(), 1);
var __assign508 = function() {
  __assign508 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign508.apply(this, arguments);
};
function SvgFingerprint(passedProps, svgRef) {
  var context = React509.useContext(IconoirContext);
  var props = __assign508(__assign508({}, context), passedProps);
  return React509.createElement(
    "svg",
    __assign508({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React509.createElement("path", { d: "M7 3.516A9.004 9.004 0 0120.648 8.5M21 22v-8M3 22V11c0-1.052.18-2.062.512-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React509.createElement("path", { d: "M18 22V11.3C18 7.82 15.314 5 12 5s-6 2.82-6 6.3V14M6 22v-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React509.createElement("path", { d: "M9 22V11.15C9 9.41 10.343 8 12 8c.865 0 1.645.385 2.193 1M15 22v-8M12 22v-3.5M12 11v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef508 = React509.forwardRef(SvgFingerprint);
var Fingerprint_default = ForwardRef508;

// node_modules/iconoir-react/dist/esm/FireFlame.mjs
var React510 = __toESM(require_react(), 1);
var __assign509 = function() {
  __assign509 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign509.apply(this, arguments);
};
function SvgFireFlame(passedProps, svgRef) {
  var context = React510.useContext(IconoirContext);
  var props = __assign509(__assign509({}, context), passedProps);
  return React510.createElement(
    "svg",
    __assign509({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React510.createElement("path", { d: "M8 18c0 2.415 1.79 3 4 3 3.759 0 5-2.5 2.5-7.5C11 18 10.5 11 11 9c-1.5 3-3 5.818-3 9z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React510.createElement("path", { d: "M12 21c5.05 0 8-2.904 8-7.875C20 8.155 12 3 12 3S4 8.154 4 13.125C4 18.095 6.95 21 12 21z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef509 = React510.forwardRef(SvgFireFlame);
var FireFlame_default = ForwardRef509;

// node_modules/iconoir-react/dist/esm/Fish.mjs
var React511 = __toESM(require_react(), 1);
var __assign510 = function() {
  __assign510 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign510.apply(this, arguments);
};
function SvgFish(passedProps, svgRef) {
  var context = React511.useContext(IconoirContext);
  var props = __assign510(__assign510({}, context), passedProps);
  return React511.createElement(
    "svg",
    __assign510({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React511.createElement("path", { d: "M10.5 9s0-2-1-4c4 0 6.5 2.5 6.5 2.5s3.5-.5 6 4.5c-1 5.5-6 6-6 6l-4 2.5v-3c-2.5-1-5-3.5-5-5S10.5 9 10.5 9zm0 0s1-.5 2-.5M2 9.5l1 3-1 3s5 0 5-3-5-3-5-3zM17 12.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef510 = React511.forwardRef(SvgFish);
var Fish_default = ForwardRef510;

// node_modules/iconoir-react/dist/esm/Fishing.mjs
var React512 = __toESM(require_react(), 1);
var __assign511 = function() {
  __assign511 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign511.apply(this, arguments);
};
function SvgFishing(passedProps, svgRef) {
  var context = React512.useContext(IconoirContext);
  var props = __assign511(__assign511({}, context), passedProps);
  return React512.createElement(
    "svg",
    __assign511({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React512.createElement("path", { d: "M16 7a2 2 0 100-4 2 2 0 000 4zm0 0v10c0 6-10 6-10 0v-4l2 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef511 = React512.forwardRef(SvgFishing);
var Fishing_default = ForwardRef511;

// node_modules/iconoir-react/dist/esm/Flare.mjs
var React513 = __toESM(require_react(), 1);
var __assign512 = function() {
  __assign512 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign512.apply(this, arguments);
};
function SvgFlare(passedProps, svgRef) {
  var context = React513.useContext(IconoirContext);
  var props = __assign512(__assign512({}, context), passedProps);
  return React513.createElement(
    "svg",
    __assign512({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React513.createElement("path", { d: "M11.456 2.665a.6.6 0 011.088 0l2.864 6.137a.6.6 0 00.29.29l6.137 2.864a.6.6 0 010 1.088l-6.137 2.864a.6.6 0 00-.29.29l-2.864 6.137a.6.6 0 01-1.088 0l-2.864-6.137a.6.6 0 00-.29-.29l-6.137-2.864a.6.6 0 010-1.088l6.137-2.864a.6.6 0 00.29-.29l2.864-6.137z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef512 = React513.forwardRef(SvgFlare);
var Flare_default = ForwardRef512;

// node_modules/iconoir-react/dist/esm/FlashOff.mjs
var React514 = __toESM(require_react(), 1);
var __assign513 = function() {
  __assign513 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign513.apply(this, arguments);
};
function SvgFlashOff(passedProps, svgRef) {
  var context = React514.useContext(IconoirContext);
  var props = __assign513(__assign513({}, context), passedProps);
  return React514.createElement(
    "svg",
    __assign513({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React514.createElement("path", { d: "M8.795 8.782L5 14h6v7l4-5.5m2.182-3L19 10h-6V3l-2.182 3M4 4l16 16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef513 = React514.forwardRef(SvgFlashOff);
var FlashOff_default = ForwardRef513;

// node_modules/iconoir-react/dist/esm/Flash.mjs
var React515 = __toESM(require_react(), 1);
var __assign514 = function() {
  __assign514 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign514.apply(this, arguments);
};
function SvgFlash(passedProps, svgRef) {
  var context = React515.useContext(IconoirContext);
  var props = __assign514(__assign514({}, context), passedProps);
  return React515.createElement(
    "svg",
    __assign514({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React515.createElement("path", { d: "M13 10V3L5 14h6v7l8-11h-6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef514 = React515.forwardRef(SvgFlash);
var Flash_default = ForwardRef514;

// node_modules/iconoir-react/dist/esm/Flask.mjs
var React516 = __toESM(require_react(), 1);
var __assign515 = function() {
  __assign515 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign515.apply(this, arguments);
};
function SvgFlask(passedProps, svgRef) {
  var context = React516.useContext(IconoirContext);
  var props = __assign515(__assign515({}, context), passedProps);
  return React516.createElement(
    "svg",
    __assign515({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React516.createElement("path", { d: "M18.5 15h-13", stroke: "currentColor", strokeLinejoin: "round" }),
    React516.createElement("path", { d: "M16 4H8M9 4.5v5.76a2 2 0 01-.481 1.302L3.48 17.438A2 2 0 003 18.74V19a2 2 0 002 2h14a2 2 0 002-2v-.26a2 2 0 00-.482-1.302l-5.037-5.876A2 2 0 0115 10.26V4.5M12 9.01l.01-.011M11 2.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef515 = React516.forwardRef(SvgFlask);
var Flask_default = ForwardRef515;

// node_modules/iconoir-react/dist/esm/FlipReverse.mjs
var React517 = __toESM(require_react(), 1);
var __assign516 = function() {
  __assign516 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign516.apply(this, arguments);
};
function SvgFlipReverse(passedProps, svgRef) {
  var context = React517.useContext(IconoirContext);
  var props = __assign516(__assign516({}, context), passedProps);
  return React517.createElement(
    "svg",
    __assign516({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React517.createElement("path", { d: "M9.5 12v2M5.75 12l-.938 2M7.625 20H9.5v-2M3.875 20H2l.938-2M7.625 8L9.5 4v4M14.5 20H22L14.5 4v16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef516 = React517.forwardRef(SvgFlipReverse);
var FlipReverse_default = ForwardRef516;

// node_modules/iconoir-react/dist/esm/Flip.mjs
var React518 = __toESM(require_react(), 1);
var __assign517 = function() {
  __assign517 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign517.apply(this, arguments);
};
function SvgFlip(passedProps, svgRef) {
  var context = React518.useContext(IconoirContext);
  var props = __assign517(__assign517({}, context), passedProps);
  return React518.createElement(
    "svg",
    __assign517({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React518.createElement("path", { d: "M9.5 20H2L9.5 4v16zM20.125 20H22l-.938-2M16.375 20H14.5v-2M14.5 12v2M18.25 12l.938 2M16.375 8L14.5 4v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef517 = React518.forwardRef(SvgFlip);
var Flip_default = ForwardRef517;

// node_modules/iconoir-react/dist/esm/Flower.mjs
var React519 = __toESM(require_react(), 1);
var __assign518 = function() {
  __assign518 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign518.apply(this, arguments);
};
function SvgFlower(passedProps, svgRef) {
  var context = React519.useContext(IconoirContext);
  var props = __assign518(__assign518({}, context), passedProps);
  return React519.createElement(
    "svg",
    __assign518({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React519.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6zM13 9s1-2 1-4-2-4-2-4-2 2-2 4 1 4 1 4", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React519.createElement("path", { d: "M9 11s-2-1-4-1-4 2-4 2 2 2 4 2 4-1 4-1M13 15s1 2 1 4-2 4-2 4-2-2-2-4 1-4 1-4M15 11s2-1 4-1 4 2 4 2-2 2-4 2-4-1-4-1M10.586 9.172S9.879 7.05 8.464 5.636C7.05 4.222 4.222 4.222 4.222 4.222s0 2.828 1.414 4.243c1.414 1.414 3.536 2.121 3.536 2.121M9.172 13.414s-2.122.707-3.536 2.122c-1.414 1.414-1.414 4.242-1.414 4.242s2.828 0 4.242-1.414c1.415-1.414 2.122-3.536 2.122-3.536M14.829 13.414s2.12.707 3.535 2.122c1.414 1.414 1.414 4.242 1.414 4.242s-2.828 0-4.242-1.414c-1.415-1.414-2.122-3.536-2.122-3.536M13.414 9.172s.707-2.122 2.122-3.536c1.414-1.414 4.242-1.414 4.242-1.414s0 2.828-1.414 4.243c-1.414 1.414-3.536 2.121-3.536 2.121", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef518 = React519.forwardRef(SvgFlower);
var Flower_default = ForwardRef518;

// node_modules/iconoir-react/dist/esm/Fluorine.mjs
var React520 = __toESM(require_react(), 1);
var __assign519 = function() {
  __assign519 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign519.apply(this, arguments);
};
function SvgFluorine(passedProps, svgRef) {
  var context = React520.useContext(IconoirContext);
  var props = __assign519(__assign519({}, context), passedProps);
  return React520.createElement(
    "svg",
    __assign519({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React520.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React520.createElement("path", { d: "M10 16V8h4M10 12h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef519 = React520.forwardRef(SvgFluorine);
var Fluorine_default = ForwardRef519;

// node_modules/iconoir-react/dist/esm/Fog.mjs
var React521 = __toESM(require_react(), 1);
var __assign520 = function() {
  __assign520 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign520.apply(this, arguments);
};
function SvgFog(passedProps, svgRef) {
  var context = React521.useContext(IconoirContext);
  var props = __assign520(__assign520({}, context), passedProps);
  return React521.createElement(
    "svg",
    __assign520({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React521.createElement("path", { d: "M9 14h6M9 22h6M7 18h10M3.5 17.382C2.188 16.707 1 15.388 1 13c0-4 3.333-5 5-5 0-2 0-6 6-6s6 4 6 6c1.667 0 5 1 5 5 0 2.388-1.188 3.707-2.5 4.382", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef520 = React521.forwardRef(SvgFog);
var Fog_default = ForwardRef520;

// node_modules/iconoir-react/dist/esm/FolderAlert.mjs
var React522 = __toESM(require_react(), 1);
var __assign521 = function() {
  __assign521 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign521.apply(this, arguments);
};
function SvgFolderAlert(passedProps, svgRef) {
  var context = React522.useContext(IconoirContext);
  var props = __assign521(__assign521({}, context), passedProps);
  return React522.createElement(
    "svg",
    __assign521({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React522.createElement("path", { d: "M18 3v4M18 11.01l.01-.011M22 7v12.4a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6V11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React522.createElement("path", { d: "M14 7h-1.278a.6.6 0 01-.39-.144L9.168 4.144A.6.6 0 008.778 4H2.6a.6.6 0 00-.6.6V11h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef521 = React522.forwardRef(SvgFolderAlert);
var FolderAlert_default = ForwardRef521;

// node_modules/iconoir-react/dist/esm/FolderSettings.mjs
var React523 = __toESM(require_react(), 1);
var __assign522 = function() {
  __assign522 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign522.apply(this, arguments);
};
function SvgFolderSettings(passedProps, svgRef) {
  var context = React523.useContext(IconoirContext);
  var props = __assign522(__assign522({}, context), passedProps);
  return React523.createElement(
    "svg",
    __assign522({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React523.createElement("path", { d: "M2.6 4h6.178a.6.6 0 01.39.144l3.164 2.712a.6.6 0 00.39.144H21.4a.6.6 0 01.6.6v2.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6zM22 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React523.createElement("path", { d: "M2 10v9.4a.6.6 0 00.6.6H13M19 21a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React523.createElement("path", { d: "M19 22a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "0.3 2" })
  );
}
var ForwardRef522 = React523.forwardRef(SvgFolderSettings);
var FolderSettings_default = ForwardRef522;

// node_modules/iconoir-react/dist/esm/Folder.mjs
var React524 = __toESM(require_react(), 1);
var __assign523 = function() {
  __assign523 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign523.apply(this, arguments);
};
function SvgFolder(passedProps, svgRef) {
  var context = React524.useContext(IconoirContext);
  var props = __assign523(__assign523({}, context), passedProps);
  return React524.createElement(
    "svg",
    __assign523({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React524.createElement("path", { d: "M2 11V4.6a.6.6 0 01.6-.6h6.178a.6.6 0 01.39.144l3.164 2.712a.6.6 0 00.39.144H21.4a.6.6 0 01.6.6V11M2 11v8.4a.6.6 0 00.6.6h18.8a.6.6 0 00.6-.6V11M2 11h20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef523 = React524.forwardRef(SvgFolder);
var Folder_default = ForwardRef523;

// node_modules/iconoir-react/dist/esm/FontSize.mjs
var React525 = __toESM(require_react(), 1);
var __assign524 = function() {
  __assign524 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign524.apply(this, arguments);
};
function SvgFontSize(passedProps, svgRef) {
  var context = React525.useContext(IconoirContext);
  var props = __assign524(__assign524({}, context), passedProps);
  return React525.createElement(
    "svg",
    __assign524({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React525.createElement("path", { d: "M18 21V11m0 10l-2-2.5m2 2.5l2-2.5M18 11l-2 2m2-2l2 2M9 5v12m0 0H7m2 0h2M15 7V5H3v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef524 = React525.forwardRef(SvgFontSize);
var FontSize_default = ForwardRef524;

// node_modules/iconoir-react/dist/esm/FootballBall.mjs
var React526 = __toESM(require_react(), 1);
var __assign525 = function() {
  __assign525 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign525.apply(this, arguments);
};
function SvgFootballBall(passedProps, svgRef) {
  var context = React526.useContext(IconoirContext);
  var props = __assign525(__assign525({}, context), passedProps);
  return React526.createElement(
    "svg",
    __assign525({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React526.createElement("path", { d: "M4.115 14.015a22.314 22.314 0 00-.103 3.665 2.413 2.413 0 002.309 2.308c1.007.052 2.294.055 3.664-.103m-5.87-5.87C4.394 11.604 5.17 8.93 7.05 7.05c1.88-1.88 4.554-2.656 6.965-2.935m-9.9 9.9l5.87 5.87m0 0c2.411-.279 5.084-1.055 6.965-2.935 1.88-1.88 2.656-4.554 2.935-6.965m-5.87-5.87a22.314 22.314 0 013.665-.103 2.413 2.413 0 012.308 2.309 22.312 22.312 0 01-.103 3.664m-5.87-5.87l5.87 5.87M9.172 14.828l1.414-1.414m0 0L9.172 12m1.414 1.414L12 14.828m-1.414-1.414l2.828-2.828m0 0l1.414-1.414m-1.414 1.414L12 9.172m1.414 1.414L14.828 12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef525 = React526.forwardRef(SvgFootballBall);
var FootballBall_default = ForwardRef525;

// node_modules/iconoir-react/dist/esm/Football.mjs
var React527 = __toESM(require_react(), 1);
var __assign526 = function() {
  __assign526 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign526.apply(this, arguments);
};
function SvgFootball(passedProps, svgRef) {
  var context = React527.useContext(IconoirContext);
  var props = __assign526(__assign526({}, context), passedProps);
  return React527.createElement(
    "svg",
    __assign526({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React527.createElement("path", { d: "M12 13.828V21M5 3v10.828h14V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React527.createElement("path", { d: "M13 6.732c1.071-.618 1.434-2.114 1.549-2.833a.505.505 0 00-.321-.556c-.68-.26-2.157-.693-3.228-.075C9.93 3.886 9.567 5.38 9.452 6.1a.505.505 0 00.32.556c.681.26 2.158.693 3.228.075z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef526 = React527.forwardRef(SvgFootball);
var Football_default = ForwardRef526;

// node_modules/iconoir-react/dist/esm/Forward15Seconds.mjs
var React528 = __toESM(require_react(), 1);
var __assign527 = function() {
  __assign527 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign527.apply(this, arguments);
};
function SvgForward15Seconds(passedProps, svgRef) {
  var context = React528.useContext(IconoirContext);
  var props = __assign527(__assign527({}, context), passedProps);
  return React528.createElement(
    "svg",
    __assign527({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React528.createElement("path", { d: "M21 13a9 9 0 11-9-9M12 4h7.5m0 0l-2-2m2 2l-2 2M9 9v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React528.createElement("path", { d: "M15 9h-2a1 1 0 00-1 1v1.5a1 1 0 001 1h1a1 1 0 011 1V15a1 1 0 01-1 1h-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef527 = React528.forwardRef(SvgForward15Seconds);
var Forward15Seconds_default = ForwardRef527;

// node_modules/iconoir-react/dist/esm/ForwardMessage.mjs
var React529 = __toESM(require_react(), 1);
var __assign528 = function() {
  __assign528 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign528.apply(this, arguments);
};
function SvgForwardMessage(passedProps, svgRef) {
  var context = React529.useContext(IconoirContext);
  var props = __assign528(__assign528({}, context), passedProps);
  return React529.createElement(
    "svg",
    __assign528({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React529.createElement("path", { d: "M7 8l5 3 5-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React529.createElement("path", { d: "M10 20H4a2 2 0 01-2-2V6a2 2 0 012-2h16a2 2 0 012 2v6.857", stroke: "currentColor", strokeLinecap: "round" }),
    React529.createElement("path", { d: "M22 17.111h-6.3c-3.6 0-3.6 4.889 0 4.889m6.3-4.889L18.85 14M22 17.111l-3.15 3.111", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef528 = React529.forwardRef(SvgForwardMessage);
var ForwardMessage_default = ForwardRef528;

// node_modules/iconoir-react/dist/esm/Forward.mjs
var React530 = __toESM(require_react(), 1);
var __assign529 = function() {
  __assign529 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign529.apply(this, arguments);
};
function SvgForward(passedProps, svgRef) {
  var context = React530.useContext(IconoirContext);
  var props = __assign529(__assign529({}, context), passedProps);
  return React530.createElement(
    "svg",
    __assign529({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React530.createElement("path", { d: "M2.956 5.704A.6.6 0 002 6.187v11.626a.6.6 0 00.956.483l7.889-5.813a.6.6 0 000-.966l-7.89-5.813zM13.956 5.704a.6.6 0 00-.956.483v11.626a.6.6 0 00.956.483l7.889-5.813a.6.6 0 000-.966l-7.89-5.813z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef529 = React530.forwardRef(SvgForward);
var Forward_default = ForwardRef529;

// node_modules/iconoir-react/dist/esm/FrameAltEmpty.mjs
var React531 = __toESM(require_react(), 1);
var __assign530 = function() {
  __assign530 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign530.apply(this, arguments);
};
function SvgFrameAltEmpty(passedProps, svgRef) {
  var context = React531.useContext(IconoirContext);
  var props = __assign530(__assign530({}, context), passedProps);
  return React531.createElement(
    "svg",
    __assign530({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React531.createElement("path", { d: "M6 3v18M18 3v18M3 6h18M3 18h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef530 = React531.forwardRef(SvgFrameAltEmpty);
var FrameAltEmpty_default = ForwardRef530;

// node_modules/iconoir-react/dist/esm/FrameAlt.mjs
var React532 = __toESM(require_react(), 1);
var __assign531 = function() {
  __assign531 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign531.apply(this, arguments);
};
function SvgFrameAlt(passedProps, svgRef) {
  var context = React532.useContext(IconoirContext);
  var props = __assign531(__assign531({}, context), passedProps);
  return React532.createElement(
    "svg",
    __assign531({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React532.createElement("path", { d: "M6 3v18M18 3v18M3 6h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React532.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.6 9h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H9.6a.6.6 0 01-.6-.6V9.6a.6.6 0 01.6-.6z", fill: "currentColor" }),
    React532.createElement("path", { d: "M3 18h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef531 = React532.forwardRef(SvgFrameAlt);
var FrameAlt_default = ForwardRef531;

// node_modules/iconoir-react/dist/esm/FrameSelect.mjs
var React533 = __toESM(require_react(), 1);
var __assign532 = function() {
  __assign532 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign532.apply(this, arguments);
};
function SvgFrameSelect(passedProps, svgRef) {
  var context = React533.useContext(IconoirContext);
  var props = __assign532(__assign532({}, context), passedProps);
  return React533.createElement(
    "svg",
    __assign532({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React533.createElement("path", { d: "M4.998 2H2v2.998h2.998V2zM4.999 3.501h14M3.5 4.999V19M20.498 5v14.002M4.999 20.501h14M4.998 19H2v2.998h2.998V19zM21.997 2.002H19V5h2.998V2.002zM21.997 19.002H19V22h2.998v-2.998z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React533.createElement("path", { clipRule: "evenodd", d: "M10.997 15.002l-3-7 7 3-2.998.999-1.002 3.001z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React533.createElement("path", { clipRule: "evenodd", d: "M11.999 12.002l2.998 3-2.998-3z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef532 = React533.forwardRef(SvgFrameSelect);
var FrameSelect_default = ForwardRef532;

// node_modules/iconoir-react/dist/esm/FrameSimple.mjs
var React534 = __toESM(require_react(), 1);
var __assign533 = function() {
  __assign533 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign533.apply(this, arguments);
};
function SvgFrameSimple(passedProps, svgRef) {
  var context = React534.useContext(IconoirContext);
  var props = __assign533(__assign533({}, context), passedProps);
  return React534.createElement(
    "svg",
    __assign533({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React534.createElement("path", { d: "M4.998 2H2v2.998h2.998V2zM4.998 3.501h14M3.499 4.998V19M20.497 5v14.002M4.998 20.501h14M4.998 19H2v2.998h2.998V19zM21.996 2.002h-2.998V5h2.998V2.002zM21.996 19.002h-2.998V22h2.998v-2.998z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef533 = React534.forwardRef(SvgFrameSimple);
var FrameSimple_default = ForwardRef533;

// node_modules/iconoir-react/dist/esm/FrameTool.mjs
var React535 = __toESM(require_react(), 1);
var __assign534 = function() {
  __assign534 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign534.apply(this, arguments);
};
function SvgFrameTool(passedProps, svgRef) {
  var context = React535.useContext(IconoirContext);
  var props = __assign534(__assign534({}, context), passedProps);
  return React535.createElement(
    "svg",
    __assign534({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React535.createElement("path", { d: "M2 7h1M2 17h1M21 7h1m-1 10h1M17 3V2M7 3V2m10 20v-1M7 22v-1M18 6.6v10.8a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6V6.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef534 = React535.forwardRef(SvgFrameTool);
var FrameTool_default = ForwardRef534;

// node_modules/iconoir-react/dist/esm/Frame.mjs
var React536 = __toESM(require_react(), 1);
var __assign535 = function() {
  __assign535 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign535.apply(this, arguments);
};
function SvgFrame(passedProps, svgRef) {
  var context = React536.useContext(IconoirContext);
  var props = __assign535(__assign535({}, context), passedProps);
  return React536.createElement(
    "svg",
    __assign535({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React536.createElement("path", { d: "M4.998 2.001H2v2.998h2.998V2.001zM4.998 10.502H2V13.5h2.998v-2.998zM20.498 5v5.503M3.5 5v5.503M20.498 13.502v5.502M3.5 13.502v5.502M4.999 20.502h5.5", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React536.createElement("path", { d: "M4.999 3.503h5.5", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React536.createElement("path", { d: "M13.498 20.499h5.5", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React536.createElement("path", { d: "M13.498 3.501h5.5", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React536.createElement("path", { d: "M4.998 19.001H2v2.998h2.998v-2.998zM21.997 2.002H19V5h2.998V2.002zM13.497 2H10.5v2.998h2.998V2zM21.997 10.503H19V13.5h2.998v-2.998zM21.997 19.002H19V22h2.998v-2.998zM13.497 19H10.5v2.998h2.998V19z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef535 = React536.forwardRef(SvgFrame);
var Frame_default = ForwardRef535;

// node_modules/iconoir-react/dist/esm/Fridge.mjs
var React537 = __toESM(require_react(), 1);
var __assign536 = function() {
  __assign536 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign536.apply(this, arguments);
};
function SvgFridge(passedProps, svgRef) {
  var context = React537.useContext(IconoirContext);
  var props = __assign536(__assign536({}, context), passedProps);
  return React537.createElement(
    "svg",
    __assign536({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React537.createElement("path", { d: "M10 14H9M10 6H9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React537.createElement("path", { d: "M5 10V2.6a.6.6 0 01.6-.6h12.8a.6.6 0 01.6.6V10M5 10v11.4a.6.6 0 00.6.6h12.8a.6.6 0 00.6-.6V10M5 10h14", stroke: "currentColor" })
  );
}
var ForwardRef536 = React537.forwardRef(SvgFridge);
var Fridge_default = ForwardRef536;

// node_modules/iconoir-react/dist/esm/FxTag.mjs
var React538 = __toESM(require_react(), 1);
var __assign537 = function() {
  __assign537 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign537.apply(this, arguments);
};
function SvgFxTag(passedProps, svgRef) {
  var context = React538.useContext(IconoirContext);
  var props = __assign537(__assign537({}, context), passedProps);
  return React538.createElement(
    "svg",
    __assign537({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React538.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React538.createElement("path", { d: "M6 15V9h5M6 12h3.571M13 15l2.5-3m0 0L18 9m-2.5 3L13 9m2.5 3l2.5 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef537 = React538.forwardRef(SvgFxTag);
var FxTag_default = ForwardRef537;

// node_modules/iconoir-react/dist/esm/Fx.mjs
var React539 = __toESM(require_react(), 1);
var __assign538 = function() {
  __assign538 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign538.apply(this, arguments);
};
function SvgFx(passedProps, svgRef) {
  var context = React539.useContext(IconoirContext);
  var props = __assign538(__assign538({}, context), passedProps);
  return React539.createElement(
    "svg",
    __assign538({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React539.createElement("path", { d: "M3 17V7h7M3 12h5M13 17l4-5m0 0l4-5m-4 5l-4-5m4 5l4 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef538 = React539.forwardRef(SvgFx);
var Fx_default = ForwardRef538;

// node_modules/iconoir-react/dist/esm/Gamepad.mjs
var React540 = __toESM(require_react(), 1);
var __assign539 = function() {
  __assign539 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign539.apply(this, arguments);
};
function SvgGamepad(passedProps, svgRef) {
  var context = React540.useContext(IconoirContext);
  var props = __assign539(__assign539({}, context), passedProps);
  return React540.createElement(
    "svg",
    __assign539({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React540.createElement("path", { d: "M17.5 17.5c2.5 3.5 6.449.915 5.5-2.5-1.425-5.129-2.2-7.984-2.603-9.492A2.032 2.032 0 0018.438 4H5.562c-.918 0-1.718.625-1.941 1.515C2.78 8.863 2.033 11.802 1.144 15c-.948 3.415 3 6 5.5 2.5M18 8.5l.011.01M16.49 7l.011.01M16.49 10l.011.01M15 8.5l.011.01M7 7v3M5.5 8.5h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React540.createElement("path", { d: "M8 16a2 2 0 100-4 2 2 0 000 4zM16 16a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef539 = React540.forwardRef(SvgGamepad);
var Gamepad_default = ForwardRef539;

// node_modules/iconoir-react/dist/esm/Garage.mjs
var React541 = __toESM(require_react(), 1);
var __assign540 = function() {
  __assign540 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign540.apply(this, arguments);
};
function SvgGarage(passedProps, svgRef) {
  var context = React541.useContext(IconoirContext);
  var props = __assign540(__assign540({}, context), passedProps);
  return React541.createElement(
    "svg",
    __assign540({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React541.createElement("path", { d: "M6 20H3V6l9-2 9 2v14h-3M6 20h12M6 20v-4m12 4v-4M6 12V8h12v4M6 12h12M6 12v4m12-4v4M6 16h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef540 = React541.forwardRef(SvgGarage);
var Garage_default = ForwardRef540;

// node_modules/iconoir-react/dist/esm/GasTankDrop.mjs
var React542 = __toESM(require_react(), 1);
var __assign541 = function() {
  __assign541 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign541.apply(this, arguments);
};
function SvgGasTankDrop(passedProps, svgRef) {
  var context = React542.useContext(IconoirContext);
  var props = __assign541(__assign541({}, context), passedProps);
  return React542.createElement(
    "svg",
    __assign541({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React542.createElement("path", { clipRule: "evenodd", d: "M3 7.562A2.562 2.562 0 015.563 5H7V3h5v2h2.002A6.998 6.998 0 0121 11.998v6.442a2.562 2.562 0 01-2.563 2.562H5.563A2.565 2.565 0 013 18.44V7.562z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React542.createElement("path", { clipRule: "evenodd", d: "M12 9s3 2.993 3 4.886c0 1.656-1.345 3-3 3-1.656 0-2.988-1.344-3-3C9.01 11.992 12 9 12 9z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef541 = React542.forwardRef(SvgGasTankDrop);
var GasTankDrop_default = ForwardRef541;

// node_modules/iconoir-react/dist/esm/GasTank.mjs
var React543 = __toESM(require_react(), 1);
var __assign542 = function() {
  __assign542 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign542.apply(this, arguments);
};
function SvgGasTank(passedProps, svgRef) {
  var context = React543.useContext(IconoirContext);
  var props = __assign542(__assign542({}, context), passedProps);
  return React543.createElement(
    "svg",
    __assign542({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React543.createElement("path", { clipRule: "evenodd", d: "M3 7.562A2.562 2.562 0 015.563 5H7V3h5v2h2.002A6.998 6.998 0 0121 11.998v6.442a2.562 2.562 0 01-2.563 2.562H5.563A2.565 2.565 0 013 18.44V7.562z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React543.createElement("path", { d: "M8 8.878l8 8.238-4-4.121-4 4.12 4-4.12 4-4.121", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef542 = React543.forwardRef(SvgGasTank);
var GasTank_default = ForwardRef542;

// node_modules/iconoir-react/dist/esm/Gas.mjs
var React544 = __toESM(require_react(), 1);
var __assign543 = function() {
  __assign543 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign543.apply(this, arguments);
};
function SvgGas(passedProps, svgRef) {
  var context = React544.useContext(IconoirContext);
  var props = __assign543(__assign543({}, context), passedProps);
  return React544.createElement(
    "svg",
    __assign543({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React544.createElement("path", { d: "M9 8a3 3 0 013-3v0a3 3 0 013 3v13.4a.6.6 0 01-.6.6H9.6a.6.6 0 01-.6-.6V8zM9 11h6M12 5V2m0 0h-1m1 0h1", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef543 = React544.forwardRef(SvgGas);
var Gas_default = ForwardRef543;

// node_modules/iconoir-react/dist/esm/GifFormat.mjs
var React545 = __toESM(require_react(), 1);
var __assign544 = function() {
  __assign544 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign544.apply(this, arguments);
};
function SvgGifFormat(passedProps, svgRef) {
  var context = React545.useContext(IconoirContext);
  var props = __assign544(__assign544({}, context), passedProps);
  return React545.createElement(
    "svg",
    __assign544({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React545.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React545.createElement("path", { d: "M15.5 15V9h3M15.5 12h2M12 15V9M8.5 9h-3v6h3v-2.4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef544 = React545.forwardRef(SvgGifFormat);
var GifFormat_default = ForwardRef544;

// node_modules/iconoir-react/dist/esm/Gift.mjs
var React546 = __toESM(require_react(), 1);
var __assign545 = function() {
  __assign545 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign545.apply(this, arguments);
};
function SvgGift(passedProps, svgRef) {
  var context = React546.useContext(IconoirContext);
  var props = __assign545(__assign545({}, context), passedProps);
  return React546.createElement(
    "svg",
    __assign545({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React546.createElement("path", { d: "M20 12v9.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6V12M21.4 7H2.6a.6.6 0 00-.6.6v3.8a.6.6 0 00.6.6h18.8a.6.6 0 00.6-.6V7.6a.6.6 0 00-.6-.6zM12 22V7M12 7H7.5a2.5 2.5 0 110-5C11 2 12 7 12 7zM12 7h4.5a2.5 2.5 0 000-5C13 2 12 7 12 7z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef545 = React546.forwardRef(SvgGift);
var Gift_default = ForwardRef545;

// node_modules/iconoir-react/dist/esm/GitBranch.mjs
var React547 = __toESM(require_react(), 1);
var __assign546 = function() {
  __assign546 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign546.apply(this, arguments);
};
function SvgGitBranch(passedProps, svgRef) {
  var context = React547.useContext(IconoirContext);
  var props = __assign546(__assign546({}, context), passedProps);
  return React547.createElement(
    "svg",
    __assign546({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React547.createElement("path", { d: "M18 8a2 2 0 100-4 2 2 0 000 4zM6 20a2 2 0 100-4 2 2 0 000 4zM6 16V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React547.createElement("path", { d: "M8 18h1c3.5 0 9-2.1 9-8.5V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef546 = React547.forwardRef(SvgGitBranch);
var GitBranch_default = ForwardRef546;

// node_modules/iconoir-react/dist/esm/GitCherryPickCommit.mjs
var React548 = __toESM(require_react(), 1);
var __assign547 = function() {
  __assign547 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign547.apply(this, arguments);
};
function SvgGitCherryPickCommit(passedProps, svgRef) {
  var context = React548.useContext(IconoirContext);
  var props = __assign547(__assign547({}, context), passedProps);
  return React548.createElement(
    "svg",
    __assign547({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React548.createElement("path", { d: "M17 11v-1a2 2 0 00-2-2h-3m-5 3v-1a2 2 0 012-2h3m0 0V4M12 20a3 3 0 100-6 3 3 0 000 6zM9 17H3M15 17h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef547 = React548.forwardRef(SvgGitCherryPickCommit);
var GitCherryPickCommit_default = ForwardRef547;

// node_modules/iconoir-react/dist/esm/GitCommand.mjs
var React549 = __toESM(require_react(), 1);
var __assign548 = function() {
  __assign548 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign548.apply(this, arguments);
};
function SvgGitCommand(passedProps, svgRef) {
  var context = React549.useContext(IconoirContext);
  var props = __assign548(__assign548({}, context), passedProps);
  return React549.createElement(
    "svg",
    __assign548({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React549.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM10 16l4-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef548 = React549.forwardRef(SvgGitCommand);
var GitCommand_default = ForwardRef548;

// node_modules/iconoir-react/dist/esm/GitCommit.mjs
var React550 = __toESM(require_react(), 1);
var __assign549 = function() {
  __assign549 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign549.apply(this, arguments);
};
function SvgGitCommit(passedProps, svgRef) {
  var context = React550.useContext(IconoirContext);
  var props = __assign549(__assign549({}, context), passedProps);
  return React550.createElement(
    "svg",
    __assign549({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React550.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6zM9 12H3M15 12h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef549 = React550.forwardRef(SvgGitCommit);
var GitCommit_default = ForwardRef549;

// node_modules/iconoir-react/dist/esm/GitCompare.mjs
var React551 = __toESM(require_react(), 1);
var __assign550 = function() {
  __assign550 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign550.apply(this, arguments);
};
function SvgGitCompare(passedProps, svgRef) {
  var context = React551.useContext(IconoirContext);
  var props = __assign550(__assign550({}, context), passedProps);
  return React551.createElement(
    "svg",
    __assign550({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React551.createElement("path", { d: "M18 21a2 2 0 100-4 2 2 0 000 4zM6 7a2 2 0 100-4 2 2 0 000 4zM18 17V7s0-2-2-2h-3M6 7v10s0 2 2 2h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React551.createElement("path", { d: "M15 7.5L12.5 5 15 2.5M8.5 16.5L11 19l-2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef550 = React551.forwardRef(SvgGitCompare);
var GitCompare_default = ForwardRef550;

// node_modules/iconoir-react/dist/esm/GitFork.mjs
var React552 = __toESM(require_react(), 1);
var __assign551 = function() {
  __assign551 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign551.apply(this, arguments);
};
function SvgGitFork(passedProps, svgRef) {
  var context = React552.useContext(IconoirContext);
  var props = __assign551(__assign551({}, context), passedProps);
  return React552.createElement(
    "svg",
    __assign551({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React552.createElement("path", { d: "M17 7a2 2 0 100-4 2 2 0 000 4zM7 7a2 2 0 100-4 2 2 0 000 4zM7 21a2 2 0 100-4 2 2 0 000 4zM7 7v10M17 7v1c0 2.5-2 3-2 3l-6 2s-2 .5-2 3v1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef551 = React552.forwardRef(SvgGitFork);
var GitFork_default = ForwardRef551;

// node_modules/iconoir-react/dist/esm/GitMerge.mjs
var React553 = __toESM(require_react(), 1);
var __assign552 = function() {
  __assign552 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign552.apply(this, arguments);
};
function SvgGitMerge(passedProps, svgRef) {
  var context = React553.useContext(IconoirContext);
  var props = __assign552(__assign552({}, context), passedProps);
  return React553.createElement(
    "svg",
    __assign552({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React553.createElement("path", { d: "M18 20a2 2 0 100-4 2 2 0 000 4zM6 21V7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React553.createElement("path", { d: "M6 7v2c0 3.5 2.5 9 8.5 9H16M6 7a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef552 = React553.forwardRef(SvgGitMerge);
var GitMerge_default = ForwardRef552;

// node_modules/iconoir-react/dist/esm/GitPullRequestClosed.mjs
var React554 = __toESM(require_react(), 1);
var __assign553 = function() {
  __assign553 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign553.apply(this, arguments);
};
function SvgGitPullRequestClosed(passedProps, svgRef) {
  var context = React554.useContext(IconoirContext);
  var props = __assign553(__assign553({}, context), passedProps);
  return React554.createElement(
    "svg",
    __assign553({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React554.createElement("path", { d: "M18 21a2 2 0 100-4 2 2 0 000 4zM6 21a2 2 0 100-4 2 2 0 000 4zM6 11v6M18 17V7s0-2-2-2h-4M4 7.243L6.121 5.12m0 0L8.243 3M6.12 5.121L4 3m2.121 2.121l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef553 = React554.forwardRef(SvgGitPullRequestClosed);
var GitPullRequestClosed_default = ForwardRef553;

// node_modules/iconoir-react/dist/esm/GitPullRequest.mjs
var React555 = __toESM(require_react(), 1);
var __assign554 = function() {
  __assign554 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign554.apply(this, arguments);
};
function SvgGitPullRequest(passedProps, svgRef) {
  var context = React555.useContext(IconoirContext);
  var props = __assign554(__assign554({}, context), passedProps);
  return React555.createElement(
    "svg",
    __assign554({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React555.createElement("path", { d: "M18 21a2 2 0 100-4 2 2 0 000 4zM6 7a2 2 0 100-4 2 2 0 000 4zM6 21a2 2 0 100-4 2 2 0 000 4zM6 7v10M18 17V7s0-2-2-2h-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React555.createElement("path", { d: "M15 7.5L12.5 5 15 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef554 = React555.forwardRef(SvgGitPullRequest);
var GitPullRequest_default = ForwardRef554;

// node_modules/iconoir-react/dist/esm/GitHub.mjs
var React556 = __toESM(require_react(), 1);
var __assign555 = function() {
  __assign555 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign555.apply(this, arguments);
};
function SvgGitHub(passedProps, svgRef) {
  var context = React556.useContext(IconoirContext);
  var props = __assign555(__assign555({}, context), passedProps);
  return React556.createElement(
    "svg",
    __assign555({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React556.createElement("path", { d: "M16 22.027v-2.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7a5.44 5.44 0 00-1.5-3.75 5.07 5.07 0 00-.09-3.77s-1.18-.35-3.91 1.48a13.38 13.38 0 00-7 0c-2.73-1.83-3.91-1.48-3.91-1.48A5.07 5.07 0 005 5.797a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7a3.37 3.37 0 00-.94 2.58v2.87M9 20.027c-3 .973-5.5 0-7-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef555 = React556.forwardRef(SvgGitHub);
var GitHub_default = ForwardRef555;

// node_modules/iconoir-react/dist/esm/GitLabFull.mjs
var React557 = __toESM(require_react(), 1);
var __assign556 = function() {
  __assign556 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign556.apply(this, arguments);
};
function SvgGitLabFull(passedProps, svgRef) {
  var context = React557.useContext(IconoirContext);
  var props = __assign556(__assign556({}, context), passedProps);
  return React557.createElement(
    "svg",
    __assign556({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React557.createElement("path", { clipRule: "evenodd", d: "M17.057 2.544a.2.2 0 01.378-.008l3.114 8.31 1.398 3.73a.2.2 0 01-.07.232l-9.76 7.106a.2.2 0 01-.235 0l-9.76-7.106a.2.2 0 01-.069-.231l1.398-3.73.167-.45 2.944-7.861a.2.2 0 01.378.008l2.47 7.6a.2.2 0 00.19.137h4.8a.2.2 0 00.19-.138l2.467-7.599z", stroke: "currentColor" })
  );
}
var ForwardRef556 = React557.forwardRef(SvgGitLabFull);
var GitLabFull_default = ForwardRef556;

// node_modules/iconoir-react/dist/esm/GithubCircle.mjs
var React558 = __toESM(require_react(), 1);
var __assign557 = function() {
  __assign557 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign557.apply(this, arguments);
};
function SvgGithubCircle(passedProps, svgRef) {
  var context = React558.useContext(IconoirContext);
  var props = __assign557(__assign557({}, context), passedProps);
  return React558.createElement(
    "svg",
    __assign557({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React558.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React558.createElement("path", { d: "M14.333 19v-1.863c.025-.31-.018-.62-.126-.913a2.18 2.18 0 00-.5-.781c2.093-.227 4.293-1 4.293-4.544 0-.906-.358-1.778-1-2.434a3.211 3.211 0 00-.06-2.448s-.787-.227-2.607.961a9.152 9.152 0 00-4.666 0c-1.82-1.188-2.607-.96-2.607-.96A3.211 3.211 0 007 8.464a3.482 3.482 0 00-1 2.453c0 3.519 2.2 4.291 4.293 4.544a2.18 2.18 0 00-.496.773 2.134 2.134 0 00-.13.902V19M9.667 17.702c-2 .631-3.667 0-4.667-1.948", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef557 = React558.forwardRef(SvgGithubCircle);
var GithubCircle_default = ForwardRef557;

// node_modules/iconoir-react/dist/esm/GlassEmpty.mjs
var React559 = __toESM(require_react(), 1);
var __assign558 = function() {
  __assign558 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign558.apply(this, arguments);
};
function SvgGlassEmpty(passedProps, svgRef) {
  var context = React559.useContext(IconoirContext);
  var props = __assign558(__assign558({}, context), passedProps);
  return React559.createElement(
    "svg",
    __assign558({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React559.createElement("path", { d: "M7.5 11l1 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React559.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" })
  );
}
var ForwardRef558 = React559.forwardRef(SvgGlassEmpty);
var GlassEmpty_default = ForwardRef558;

// node_modules/iconoir-react/dist/esm/GlassFragile.mjs
var React560 = __toESM(require_react(), 1);
var __assign559 = function() {
  __assign559 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign559.apply(this, arguments);
};
function SvgGlassFragile(passedProps, svgRef) {
  var context = React560.useContext(IconoirContext);
  var props = __assign559(__assign559({}, context), passedProps);
  return React560.createElement(
    "svg",
    __assign559({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React560.createElement("path", { d: "M8 22h4m4 0h-4m0 0v-7M6.578 10.048C7.783 12.682 12 15 12 15s4.217-2.318 5.422-4.952c1.3-2.845 0-8.048 0-8.048H6.578s-1.3 5.203 0 8.048z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React560.createElement("path", { d: "M12.5 2l-2 4h3l-2 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef559 = React560.forwardRef(SvgGlassFragile);
var GlassFragile_default = ForwardRef559;

// node_modules/iconoir-react/dist/esm/GlassHalfAlt.mjs
var React561 = __toESM(require_react(), 1);
var __assign560 = function() {
  __assign560 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign560.apply(this, arguments);
};
function SvgGlassHalfAlt(passedProps, svgRef) {
  var context = React561.useContext(IconoirContext);
  var props = __assign560(__assign560({}, context), passedProps);
  return React561.createElement(
    "svg",
    __assign560({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React561.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" }),
    React561.createElement("path", { d: "M4 13c1.032 1.203 3.925 1.864 7 1.981 3.739.143 7.746-.518 9-1.981M15 14.823V20.5M4 13c2.286-2.667 13.714-2.667 16 0", stroke: "currentColor" })
  );
}
var ForwardRef560 = React561.forwardRef(SvgGlassHalfAlt);
var GlassHalfAlt_default = ForwardRef560;

// node_modules/iconoir-react/dist/esm/GlassHalf.mjs
var React562 = __toESM(require_react(), 1);
var __assign561 = function() {
  __assign561 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign561.apply(this, arguments);
};
function SvgGlassHalf(passedProps, svgRef) {
  var context = React562.useContext(IconoirContext);
  var props = __assign561(__assign561({}, context), passedProps);
  return React562.createElement(
    "svg",
    __assign561({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React562.createElement("path", { d: "M3.04 4.294a.496.496 0 01.191-.479C3.927 3.32 6.314 2 12 2s8.073 1.32 8.769 1.815a.496.496 0 01.192.479l-1.7 12.744a4 4 0 01-1.98 2.944l-.32.183a10 10 0 01-9.922 0l-.32-.183a4 4 0 01-1.98-2.944l-1.7-12.744zM3 5c2.571 2.667 15.429 2.667 18 0", stroke: "currentColor" }),
    React562.createElement("path", { d: "M4 13c1.032 1.203 3.925 1.864 7 1.981a25.406 25.406 0 004-.158c2.266-.279 4.197-.886 5-1.823M4 13c2.286-2.667 13.714-2.667 16 0", stroke: "currentColor" })
  );
}
var ForwardRef561 = React562.forwardRef(SvgGlassHalf);
var GlassHalf_default = ForwardRef561;

// node_modules/iconoir-react/dist/esm/Glasses.mjs
var React563 = __toESM(require_react(), 1);
var __assign562 = function() {
  __assign562 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign562.apply(this, arguments);
};
function SvgGlasses(passedProps, svgRef) {
  var context = React563.useContext(IconoirContext);
  var props = __assign562(__assign562({}, context), passedProps);
  return React563.createElement(
    "svg",
    __assign562({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React563.createElement("path", { d: "M2 14a4 4 0 108 0 4 4 0 00-8 0zm0 0V6M22 14a4 4 0 11-8 0 4 4 0 018 0zm0 0V6M14 14h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef562 = React563.forwardRef(SvgGlasses);
var Glasses_default = ForwardRef562;

// node_modules/iconoir-react/dist/esm/Globe.mjs
var React564 = __toESM(require_react(), 1);
var __assign563 = function() {
  __assign563 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign563.apply(this, arguments);
};
function SvgGlobe(passedProps, svgRef) {
  var context = React564.useContext(IconoirContext);
  var props = __assign563(__assign563({}, context), passedProps);
  return React564.createElement(
    "svg",
    __assign563({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React564.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React564.createElement("path", { d: "M2.5 12.5l5.5 2L7 18l1 3M17 20.5l-.5-2.5-2.5-1v-3.5l3-1 4.5.5M19 5.5L18.5 7l-3.5.5v3l2.5-1h2l2 1M2.5 10.5l2.5-2L7.5 8l2-3-1-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef563 = React564.forwardRef(SvgGlobe);
var Globe_default = ForwardRef563;

// node_modules/iconoir-react/dist/esm/Golf.mjs
var React565 = __toESM(require_react(), 1);
var __assign564 = function() {
  __assign564 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign564.apply(this, arguments);
};
function SvgGolf(passedProps, svgRef) {
  var context = React565.useContext(IconoirContext);
  var props = __assign564(__assign564({}, context), passedProps);
  return React565.createElement(
    "svg",
    __assign564({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React565.createElement("path", { d: "M12 18v-6m0 0V3.41a.6.6 0 01.836-.552l8.444 3.62a.6.6 0 01.022 1.093L12 12zM12 22c3.866 0 7-1.567 7-3.5S15.866 15 12 15s-7 1.567-7 3.5S8.134 22 12 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef564 = React565.forwardRef(SvgGolf);
var Golf_default = ForwardRef564;

// node_modules/iconoir-react/dist/esm/GoogleCircle.mjs
var React566 = __toESM(require_react(), 1);
var __assign565 = function() {
  __assign565 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign565.apply(this, arguments);
};
function SvgGoogleCircle(passedProps, svgRef) {
  var context = React566.useContext(IconoirContext);
  var props = __assign565(__assign565({}, context), passedProps);
  return React566.createElement(
    "svg",
    __assign565({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React566.createElement("path", { d: "M15.547 8.303A5.148 5.148 0 0012.11 7C9.287 7 7 9.239 7 12s2.287 5 5.109 5c3.47 0 4.751-2.57 4.891-4.583h-4.159", stroke: "currentColor" }),
    React566.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef565 = React566.forwardRef(SvgGoogleCircle);
var GoogleCircle_default = ForwardRef565;

// node_modules/iconoir-react/dist/esm/GoogleDocs.mjs
var React567 = __toESM(require_react(), 1);
var __assign566 = function() {
  __assign566 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign566.apply(this, arguments);
};
function SvgGoogleDocs(passedProps, svgRef) {
  var context = React567.useContext(IconoirContext);
  var props = __assign566(__assign566({}, context), passedProps);
  return React567.createElement(
    "svg",
    __assign566({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React567.createElement("path", { d: "M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2zM7 7h10M7 12h10M7 17h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef566 = React567.forwardRef(SvgGoogleDocs);
var GoogleDocs_default = ForwardRef566;

// node_modules/iconoir-react/dist/esm/GoogleDriveCheck.mjs
var React568 = __toESM(require_react(), 1);
var __assign567 = function() {
  __assign567 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign567.apply(this, arguments);
};
function SvgGoogleDriveCheck(passedProps, svgRef) {
  var context = React568.useContext(IconoirContext);
  var props = __assign567(__assign567({}, context), passedProps);
  return React568.createElement(
    "svg",
    __assign567({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React568.createElement(
      "g",
      { clipPath: "url(#google-drive-check_svg__clip0)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React568.createElement("path", { d: "M9.143 3.004L14.857 3m-5.714.004L2 15.004m7.143-12l4.902 9.496m.812-9.5L5.575 21m9.282-18L21.5 14M5.575 21L2 15.004M5.575 21h6.429M2 15.004h10.5M15 19l3 3 5-5" })
    ),
    React568.createElement(
      "defs",
      null,
      React568.createElement(
        "clipPath",
        { id: "google-drive-check_svg__clip0" },
        React568.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef567 = React568.forwardRef(SvgGoogleDriveCheck);
var GoogleDriveCheck_default = ForwardRef567;

// node_modules/iconoir-react/dist/esm/GoogleDriveSync.mjs
var React569 = __toESM(require_react(), 1);
var __assign568 = function() {
  __assign568 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign568.apply(this, arguments);
};
function SvgGoogleDriveSync(passedProps, svgRef) {
  var context = React569.useContext(IconoirContext);
  var props = __assign568(__assign568({}, context), passedProps);
  return React569.createElement(
    "svg",
    __assign568({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React569.createElement("path", { d: "M9.143 3.004L14.857 3m-5.714.004L2 15.004m7.143-12l4.902 9.496m.812-9.5L5.575 21m9.282-18l5.356 9M5.575 21L2 15.004M5.575 21h6.429M2 15.004h10.5M22.666 17.667C22.048 16.097 20.634 15 18.99 15c-1.758 0-3.252 1.255-3.793 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React569.createElement("path", { d: "M20.995 17.772H22.4a.6.6 0 00.6-.6V15.55M15.334 20.333C15.952 21.903 17.366 23 19.01 23c1.758 0 3.252-1.255 3.793-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React569.createElement("path", { d: "M17.005 20.228H15.6a.6.6 0 00-.6.6v1.622", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef568 = React569.forwardRef(SvgGoogleDriveSync);
var GoogleDriveSync_default = ForwardRef568;

// node_modules/iconoir-react/dist/esm/GoogleDriveWarning.mjs
var React570 = __toESM(require_react(), 1);
var __assign569 = function() {
  __assign569 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign569.apply(this, arguments);
};
function SvgGoogleDriveWarning(passedProps, svgRef) {
  var context = React570.useContext(IconoirContext);
  var props = __assign569(__assign569({}, context), passedProps);
  return React570.createElement(
    "svg",
    __assign569({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React570.createElement("path", { d: "M9.143 3.004L14.857 3m-5.714.004L2 15.004m7.143-12l4.902 9.496m.812-9.5L5.575 21m9.282-18L21.5 14M5.575 21L2 15.004M5.575 21h6.429M2 15.004h10.5M18 16v2M18 22.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef569 = React570.forwardRef(SvgGoogleDriveWarning);
var GoogleDriveWarning_default = ForwardRef569;

// node_modules/iconoir-react/dist/esm/GoogleDrive.mjs
var React571 = __toESM(require_react(), 1);
var __assign570 = function() {
  __assign570 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign570.apply(this, arguments);
};
function SvgGoogleDrive(passedProps, svgRef) {
  var context = React571.useContext(IconoirContext);
  var props = __assign570(__assign570({}, context), passedProps);
  return React571.createElement(
    "svg",
    __assign570({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React571.createElement("path", { d: "M9.143 3.004L14.857 3m-5.714.004L2 15.004m7.143-12L18.433 21M14.856 3L22 15.004M14.857 3L5.575 21m12.857 0H5.575m12.857 0L22 15.004M5.575 21L2 15.004m20 0H2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef570 = React571.forwardRef(SvgGoogleDrive);
var GoogleDrive_default = ForwardRef570;

// node_modules/iconoir-react/dist/esm/GoogleHome.mjs
var React572 = __toESM(require_react(), 1);
var __assign571 = function() {
  __assign571 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign571.apply(this, arguments);
};
function SvgGoogleHome(passedProps, svgRef) {
  var context = React572.useContext(IconoirContext);
  var props = __assign571(__assign571({}, context), passedProps);
  return React572.createElement(
    "svg",
    __assign571({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React572.createElement("path", { d: "M17.708 17A9 9 0 104.291 5a9 9 0 0013.417 12zm0 0H19.5a2.5 2.5 0 012.5 2.5v0a2.5 2.5 0 01-2.5 2.5H17", stroke: "currentColor", strokeLinecap: "round" }),
    React572.createElement("path", { d: "M11 11.01l.01-.011M8 11.01l.01-.011M14 11.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef571 = React572.forwardRef(SvgGoogleHome);
var GoogleHome_default = ForwardRef571;

// node_modules/iconoir-react/dist/esm/GoogleOne.mjs
var React573 = __toESM(require_react(), 1);
var __assign572 = function() {
  __assign572 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign572.apply(this, arguments);
};
function SvgGoogleOne(passedProps, svgRef) {
  var context = React573.useContext(IconoirContext);
  var props = __assign572(__assign572({}, context), passedProps);
  return React573.createElement(
    "svg",
    __assign572({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React573.createElement("path", { d: "M11 5v14a2 2 0 104 0V5a2 2 0 10-4 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React573.createElement("path", { d: "M11.64 3.53L6.747 8.171a2 2 0 002.754 2.901l4.892-4.642a2 2 0 00-2.753-2.902z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef572 = React573.forwardRef(SvgGoogleOne);
var GoogleOne_default = ForwardRef572;

// node_modules/iconoir-react/dist/esm/Google.mjs
var React574 = __toESM(require_react(), 1);
var __assign573 = function() {
  __assign573 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign573.apply(this, arguments);
};
function SvgGoogle(passedProps, svgRef) {
  var context = React574.useContext(IconoirContext);
  var props = __assign573(__assign573({}, context), passedProps);
  return React574.createElement(
    "svg",
    __assign573({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React574.createElement("path", { d: "M15.547 8.303A5.148 5.148 0 0012.11 7C9.287 7 7 9.239 7 12s2.287 5 5.109 5c3.47 0 4.751-2.57 4.891-4.583h-4.159", stroke: "currentColor" }),
    React574.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef573 = React574.forwardRef(SvgGoogle);
var Google_default = ForwardRef573;

// node_modules/iconoir-react/dist/esm/Gps.mjs
var React575 = __toESM(require_react(), 1);
var __assign574 = function() {
  __assign574 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign574.apply(this, arguments);
};
function SvgGps(passedProps, svgRef) {
  var context = React575.useContext(IconoirContext);
  var props = __assign574(__assign574({}, context), passedProps);
  return React575.createElement(
    "svg",
    __assign574({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React575.createElement("path", { d: "M22 8.5h-2.25A1.75 1.75 0 0018 10.25v0c0 .966.784 1.75 1.75 1.75h1.5c.966 0 1.75.784 1.75 1.75v0a1.75 1.75 0 01-1.75 1.75H18M10.5 15.5v-2.8m0 0h2.857c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H10.5v4.2zM6.5 9.127a3.5 3.5 0 10-2 6.373C6.433 15.5 8 14 8 12H5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef574 = React575.forwardRef(SvgGps);
var Gps_default = ForwardRef574;

// node_modules/iconoir-react/dist/esm/GraduationCap.mjs
var React576 = __toESM(require_react(), 1);
var __assign575 = function() {
  __assign575 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign575.apply(this, arguments);
};
function SvgGraduationCap(passedProps, svgRef) {
  var context = React576.useContext(IconoirContext);
  var props = __assign575(__assign575({}, context), passedProps);
  return React576.createElement(
    "svg",
    __assign575({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React576.createElement("path", { d: "M2.573 8.463l8.659-4.329a.6.6 0 01.536 0l8.659 4.33a.6.6 0 010 1.073l-8.659 4.329a.6.6 0 01-.536 0l-8.659-4.33a.6.6 0 010-1.073z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React576.createElement("path", { d: "M22.5 13V9.5l-2-1M4.5 10.5v5.412a2 2 0 001.142 1.807l5 2.374a2 2 0 001.716 0l5-2.374a2 2 0 001.142-1.807V10.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef575 = React576.forwardRef(SvgGraduationCap);
var GraduationCap_default = ForwardRef575;

// node_modules/iconoir-react/dist/esm/GraphDown.mjs
var React577 = __toESM(require_react(), 1);
var __assign576 = function() {
  __assign576 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign576.apply(this, arguments);
};
function SvgGraphDown(passedProps, svgRef) {
  var context = React577.useContext(IconoirContext);
  var props = __assign576(__assign576({}, context), passedProps);
  return React577.createElement(
    "svg",
    __assign576({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React577.createElement("path", { d: "M20 20H4V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React577.createElement("path", { d: "M4 7l8 8 3-3 4.5 4.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef576 = React577.forwardRef(SvgGraphDown);
var GraphDown_default = ForwardRef576;

// node_modules/iconoir-react/dist/esm/GraphUp.mjs
var React578 = __toESM(require_react(), 1);
var __assign577 = function() {
  __assign577 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign577.apply(this, arguments);
};
function SvgGraphUp(passedProps, svgRef) {
  var context = React578.useContext(IconoirContext);
  var props = __assign577(__assign577({}, context), passedProps);
  return React578.createElement(
    "svg",
    __assign577({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React578.createElement("path", { d: "M20 20H4V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React578.createElement("path", { d: "M4 16.5L12 9l3 3 4.5-4.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef577 = React578.forwardRef(SvgGraphUp);
var GraphUp_default = ForwardRef577;

// node_modules/iconoir-react/dist/esm/GreenBus.mjs
var React579 = __toESM(require_react(), 1);
var __assign578 = function() {
  __assign578 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign578.apply(this, arguments);
};
function SvgGreenBus(passedProps, svgRef) {
  var context = React579.useContext(IconoirContext);
  var props = __assign578(__assign578({}, context), passedProps);
  return React579.createElement(
    "svg",
    __assign578({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React579.createElement("path", { d: "M7 16.01l.01-.011M21 12H3v7a1 1 0 001 1h9M17 23s.9-3.118 3-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React579.createElement("path", { d: "M19.802 21.424l-.134.013a3.094 3.094 0 01-3.366-2.774 3.06 3.06 0 012.761-3.35l2.986-.28a.35.35 0 01.381.314l.255 2.58a3.194 3.194 0 01-2.883 3.497zM21 8V6a4 4 0 00-4-4H7a4 4 0 00-4 4v2M7 8h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React579.createElement("path", { d: "M4.5 20v1.9a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V20", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef578 = React579.forwardRef(SvgGreenBus);
var GreenBus_default = ForwardRef578;

// node_modules/iconoir-react/dist/esm/GreenTruck.mjs
var React580 = __toESM(require_react(), 1);
var __assign579 = function() {
  __assign579 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign579.apply(this, arguments);
};
function SvgGreenTruck(passedProps, svgRef) {
  var context = React580.useContext(IconoirContext);
  var props = __assign579(__assign579({}, context), passedProps);
  return React580.createElement(
    "svg",
    __assign579({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React580.createElement("path", { d: "M7 17a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React580.createElement("path", { d: "M14 15V4.6a.6.6 0 00-.6-.6H2.6a.6.6 0 00-.6.6v9.8a.6.6 0 00.6.6h2.05M14 15H9.05M14 7h5.61a.6.6 0 01.548.356l1.29 2.903a.6.6 0 01.052.243V12", stroke: "currentColor", strokeLinecap: "round" }),
    React580.createElement("path", { d: "M17 23s.9-3.118 3-5M19.802 21.424l-.134.013a3.094 3.094 0 01-3.366-2.774 3.06 3.06 0 012.761-3.35l2.986-.28a.35.35 0 01.381.314l.255 2.58a3.194 3.194 0 01-2.883 3.497z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef579 = React580.forwardRef(SvgGreenTruck);
var GreenTruck_default = ForwardRef579;

// node_modules/iconoir-react/dist/esm/GreenVehicle.mjs
var React581 = __toESM(require_react(), 1);
var __assign580 = function() {
  __assign580 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign580.apply(this, arguments);
};
function SvgGreenVehicle(passedProps, svgRef) {
  var context = React581.useContext(IconoirContext);
  var props = __assign580(__assign580({}, context), passedProps);
  return React581.createElement(
    "svg",
    __assign580({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React581.createElement("path", { d: "M7 10h8M6 14h1M15 14h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React581.createElement("path", { d: "M6 18H2v2.4a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V18zm0 0h7M2 18v-6.59a2 2 0 01.162-.787l2.319-5.41A2 2 0 016.319 4h9.362a2 2 0 011.839 1.212l2.318 5.41a2 2 0 01.162.789V12.5", stroke: "currentColor", strokeLinecap: "round" }),
    React581.createElement("path", { d: "M17 23s.9-3.118 3-5M19.802 21.424l-.134.013a3.094 3.094 0 01-3.366-2.774 3.06 3.06 0 012.761-3.35l2.986-.28a.35.35 0 01.381.314l.255 2.58a3.194 3.194 0 01-2.883 3.497z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef580 = React581.forwardRef(SvgGreenVehicle);
var GreenVehicle_default = ForwardRef580;

// node_modules/iconoir-react/dist/esm/GridAdd.mjs
var React582 = __toESM(require_react(), 1);
var __assign581 = function() {
  __assign581 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign581.apply(this, arguments);
};
function SvgGridAdd(passedProps, svgRef) {
  var context = React582.useContext(IconoirContext);
  var props = __assign581(__assign581({}, context), passedProps);
  return React582.createElement(
    "svg",
    __assign581({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React582.createElement("path", { d: "M13.992 17h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React582.createElement("path", { d: "M4 9.4V4.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM4 19.4v-4.8a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM14 9.4V4.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-4.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef581 = React582.forwardRef(SvgGridAdd);
var GridAdd_default = ForwardRef581;

// node_modules/iconoir-react/dist/esm/GridMinus.mjs
var React583 = __toESM(require_react(), 1);
var __assign582 = function() {
  __assign582 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign582.apply(this, arguments);
};
function SvgGridMinus(passedProps, svgRef) {
  var context = React583.useContext(IconoirContext);
  var props = __assign582(__assign582({}, context), passedProps);
  return React583.createElement(
    "svg",
    __assign582({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React583.createElement("path", { d: "M13.992 17h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React583.createElement("path", { d: "M4 9.4V4.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM4 19.4v-4.8a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM14 9.4V4.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-4.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef582 = React583.forwardRef(SvgGridMinus);
var GridMinus_default = ForwardRef582;

// node_modules/iconoir-react/dist/esm/GridRemove.mjs
var React584 = __toESM(require_react(), 1);
var __assign583 = function() {
  __assign583 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign583.apply(this, arguments);
};
function SvgGridRemove(passedProps, svgRef) {
  var context = React584.useContext(IconoirContext);
  var props = __assign583(__assign583({}, context), passedProps);
  return React584.createElement(
    "svg",
    __assign583({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React584.createElement("path", { d: "M14.871 19.121L16.993 17m2.121-2.121L16.993 17m0 0l-2.122-2.121M16.993 17l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React584.createElement("path", { d: "M4 9.4V4.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM4 19.4v-4.8a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM14 9.4V4.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6h-4.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef583 = React584.forwardRef(SvgGridRemove);
var GridRemove_default = ForwardRef583;

// node_modules/iconoir-react/dist/esm/Group.mjs
var React585 = __toESM(require_react(), 1);
var __assign584 = function() {
  __assign584 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign584.apply(this, arguments);
};
function SvgGroup(passedProps, svgRef) {
  var context = React585.useContext(IconoirContext);
  var props = __assign584(__assign584({}, context), passedProps);
  return React585.createElement(
    "svg",
    __assign584({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React585.createElement("path", { d: "M1 20v-1a7 7 0 017-7v0a7 7 0 017 7v1", stroke: "currentColor", strokeLinecap: "round" }),
    React585.createElement("path", { d: "M13 14v0a5 5 0 015-5v0a5 5 0 015 5v.5", stroke: "currentColor", strokeLinecap: "round" }),
    React585.createElement("path", { d: "M8 12a4 4 0 100-8 4 4 0 000 8zM18 9a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef584 = React585.forwardRef(SvgGroup);
var Group_default = ForwardRef584;

// node_modules/iconoir-react/dist/esm/Gym.mjs
var React586 = __toESM(require_react(), 1);
var __assign585 = function() {
  __assign585 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign585.apply(this, arguments);
};
function SvgGym(passedProps, svgRef) {
  var context = React586.useContext(IconoirContext);
  var props = __assign585(__assign585({}, context), passedProps);
  return React586.createElement(
    "svg",
    __assign585({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React586.createElement("path", { d: "M7.4 7H4.6a.6.6 0 00-.6.6v8.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V7.6a.6.6 0 00-.6-.6zM19.4 7h-2.8a.6.6 0 00-.6.6v8.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V7.6a.6.6 0 00-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React586.createElement("path", { d: "M1 14.4V9.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v4.8a.6.6 0 01-.6.6H1.6a.6.6 0 01-.6-.6zM23 14.4V9.6a.6.6 0 00-.6-.6h-1.8a.6.6 0 00-.6.6v4.8a.6.6 0 00.6.6h1.8a.6.6 0 00.6-.6zM8 12h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef585 = React586.forwardRef(SvgGym);
var Gym_default = ForwardRef585;

// node_modules/iconoir-react/dist/esm/HalfCookie.mjs
var React587 = __toESM(require_react(), 1);
var __assign586 = function() {
  __assign586 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign586.apply(this, arguments);
};
function SvgHalfCookie(passedProps, svgRef) {
  var context = React587.useContext(IconoirContext);
  var props = __assign586(__assign586({}, context), passedProps);
  return React587.createElement(
    "svg",
    __assign586({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React587.createElement("path", { d: "M21.8 14c-.927 4.564-4.962 8-9.8 8-5.523 0-10-4.477-10-10 0-5.185 3.947-9.449 9-9.95", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React587.createElement("path", { d: "M6.5 10a.5.5 0 110-1 .5.5 0 010 1zM20.5 4a.5.5 0 110-1 .5.5 0 010 1zM12 19a1 1 0 110-2 1 1 0 010 2zM7 15.01l.01-.011M17 15.01l.01-.011M11 12.01l.01-.011M21 9.01l.01-.011M17 6.01l.01-.011M11 2c-.5 1.5.5 3 2.085 3C11 8.5 13 12 18 11.5c0 2.5 2.5 3 3.7 2.514", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef586 = React587.forwardRef(SvgHalfCookie);
var HalfCookie_default = ForwardRef586;

// node_modules/iconoir-react/dist/esm/HalfMoon.mjs
var React588 = __toESM(require_react(), 1);
var __assign587 = function() {
  __assign587 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign587.apply(this, arguments);
};
function SvgHalfMoon(passedProps, svgRef) {
  var context = React588.useContext(IconoirContext);
  var props = __assign587(__assign587({}, context), passedProps);
  return React588.createElement(
    "svg",
    __assign587({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React588.createElement("path", { d: "M3 11.507a9.493 9.493 0 0018 4.219c-8.507 0-12.726-4.22-12.726-12.726A9.494 9.494 0 003 11.507z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef587 = React588.forwardRef(SvgHalfMoon);
var HalfMoon_default = ForwardRef587;

// node_modules/iconoir-react/dist/esm/Hammer.mjs
var React589 = __toESM(require_react(), 1);
var __assign588 = function() {
  __assign588 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign588.apply(this, arguments);
};
function SvgHammer(passedProps, svgRef) {
  var context = React589.useContext(IconoirContext);
  var props = __assign588(__assign588({}, context), passedProps);
  return React589.createElement(
    "svg",
    __assign588({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React589.createElement("path", { d: "M10.634 11.056L2.148 19.54l2.122 2.121 8.485-8.485", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React589.createElement("path", { d: "M10.634 11.056l1.414-1.415s.354-3.182-3.182-6.717l1.06-1.06 8.486 5.656-1.06 1.06 1.413 1.415 1.061-1.06 2.475 2.474-4.95 4.95-2.475-2.475 1.061-1.06-1.414-1.415-1.768 1.768-2.121-2.121z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef588 = React589.forwardRef(SvgHammer);
var Hammer_default = ForwardRef588;

// node_modules/iconoir-react/dist/esm/HandBrake.mjs
var React590 = __toESM(require_react(), 1);
var __assign589 = function() {
  __assign589 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign589.apply(this, arguments);
};
function SvgHandBrake(passedProps, svgRef) {
  var context = React590.useContext(IconoirContext);
  var props = __assign589(__assign589({}, context), passedProps);
  return React590.createElement(
    "svg",
    __assign589({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React590.createElement("path", { d: "M12 16v-4M12 9V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React590.createElement("circle", { cx: 12, cy: 12, r: 8, stroke: "currentColor" }),
    React590.createElement("path", { d: "M3.953 4.5A10.961 10.961 0 001 12c0 2.899 1.121 5.535 2.953 7.5M20.047 4.5A10.962 10.962 0 0123 12c0 2.899-1.121 5.535-2.953 7.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef589 = React590.forwardRef(SvgHandBrake);
var HandBrake_default = ForwardRef589;

// node_modules/iconoir-react/dist/esm/HandCard.mjs
var React591 = __toESM(require_react(), 1);
var __assign590 = function() {
  __assign590 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign590.apply(this, arguments);
};
function SvgHandCard(passedProps, svgRef) {
  var context = React591.useContext(IconoirContext);
  var props = __assign590(__assign590({}, context), passedProps);
  return React591.createElement(
    "svg",
    __assign590({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React591.createElement("path", { d: "M11 9h11M2 11l2.807-3.157A4 4 0 017.797 6.5H8M2 19.5h5.5l4-3s.81-.547 2-1.5c2.5-2 0-5.166-2.5-3.5C8.964 12.857 7 14 7 14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React591.createElement("path", { d: "M8 13.5V7a2 2 0 012-2h10a2 2 0 012 2v6a2 2 0 01-2 2h-6.5", stroke: "currentColor" })
  );
}
var ForwardRef590 = React591.forwardRef(SvgHandCard);
var HandCard_default = ForwardRef590;

// node_modules/iconoir-react/dist/esm/HandCash.mjs
var React592 = __toESM(require_react(), 1);
var __assign591 = function() {
  __assign591 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign591.apply(this, arguments);
};
function SvgHandCash(passedProps, svgRef) {
  var context = React592.useContext(IconoirContext);
  var props = __assign591(__assign591({}, context), passedProps);
  return React592.createElement(
    "svg",
    __assign591({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React592.createElement("path", { d: "M2 11l2.807-3.157A4 4 0 017.797 6.5H8M2 19.5h5.5l4-3s.81-.547 2-1.5c2.5-2 0-5.166-2.5-3.5C8.964 12.857 7 14 7 14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React592.createElement("path", { d: "M8 13.5V7a2 2 0 012-2h10a2 2 0 012 2v6a2 2 0 01-2 2h-6.5", stroke: "currentColor" }),
    React592.createElement("path", { d: "M15 12a2 2 0 110-4 2 2 0 010 4zM19.5 10.01l.01-.011M10.5 10.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef591 = React592.forwardRef(SvgHandCash);
var HandCash_default = ForwardRef591;

// node_modules/iconoir-react/dist/esm/HandContactless.mjs
var React593 = __toESM(require_react(), 1);
var __assign592 = function() {
  __assign592 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign592.apply(this, arguments);
};
function SvgHandContactless(passedProps, svgRef) {
  var context = React593.useContext(IconoirContext);
  var props = __assign592(__assign592({}, context), passedProps);
  return React593.createElement(
    "svg",
    __assign592({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React593.createElement("path", { d: "M2 11l2.807-3.157A4 4 0 017.797 6.5H8M2 19.5h5.5l4-3s.81-.547 2-1.5c2.5-2 0-5.166-2.5-3.5C8.964 12.857 7 14 7 14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React593.createElement("path", { d: "M8 13.5V7a2 2 0 012-2h10a2 2 0 012 2v6a2 2 0 01-2 2h-6.5", stroke: "currentColor" }),
    React593.createElement("path", { d: "M18.25 12c.5-1.5.5-2.5 0-4M16 9c.227.5.227 1.5 0 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef592 = React593.forwardRef(SvgHandContactless);
var HandContactless_default = ForwardRef592;

// node_modules/iconoir-react/dist/esm/Handbag.mjs
var React594 = __toESM(require_react(), 1);
var __assign593 = function() {
  __assign593 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign593.apply(this, arguments);
};
function SvgHandbag(passedProps, svgRef) {
  var context = React594.useContext(IconoirContext);
  var props = __assign593(__assign593({}, context), passedProps);
  return React594.createElement(
    "svg",
    __assign593({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React594.createElement("path", { d: "M9 8H4a2 2 0 00-2 2v9a2 2 0 002 2h16a2 2 0 002-2v-9a2 2 0 00-2-2h-5M9 8V3.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6V8M9 8h6M9 8v6m6-6v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef593 = React594.forwardRef(SvgHandbag);
var Handbag_default = ForwardRef593;

// node_modules/iconoir-react/dist/esm/HardDrive.mjs
var React595 = __toESM(require_react(), 1);
var __assign594 = function() {
  __assign594 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign594.apply(this, arguments);
};
function SvgHardDrive(passedProps, svgRef) {
  var context = React595.useContext(IconoirContext);
  var props = __assign594(__assign594({}, context), passedProps);
  return React595.createElement(
    "svg",
    __assign594({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React595.createElement("path", { d: "M10 17.01l.01-.011M6 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React595.createElement("path", { d: "M2 13v7.4a.6.6 0 00.6.6h18.8a.6.6 0 00.6-.6V13M2 13h20M2 13l2.872-9.572A.6.6 0 015.446 3h13.108a.6.6 0 01.574.428L22 13", stroke: "currentColor" })
  );
}
var ForwardRef594 = React595.forwardRef(SvgHardDrive);
var HardDrive_default = ForwardRef594;

// node_modules/iconoir-react/dist/esm/Hat.mjs
var React596 = __toESM(require_react(), 1);
var __assign595 = function() {
  __assign595 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign595.apply(this, arguments);
};
function SvgHat(passedProps, svgRef) {
  var context = React596.useContext(IconoirContext);
  var props = __assign595(__assign595({}, context), passedProps);
  return React596.createElement(
    "svg",
    __assign595({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React596.createElement("path", { d: "M7 17v-2a7 7 0 1114 0v2H7zm0 0H2M14 6.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef595 = React596.forwardRef(SvgHat);
var Hat_default = ForwardRef595;

// node_modules/iconoir-react/dist/esm/HdDisplay.mjs
var React597 = __toESM(require_react(), 1);
var __assign596 = function() {
  __assign596 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign596.apply(this, arguments);
};
function SvgHdDisplay(passedProps, svgRef) {
  var context = React597.useContext(IconoirContext);
  var props = __assign596(__assign596({}, context), passedProps);
  return React597.createElement(
    "svg",
    __assign596({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React597.createElement("path", { d: "M6 8.5V12m0 3.5V12m0 0h4.5m0 0V8.5m0 3.5v3.5M14 12V8.5c2.5 0 5 0 5 3.5s-2.5 3.5-5 3.5V12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React597.createElement("path", { d: "M1 15V9a6 6 0 016-6h10a6 6 0 016 6v6a6 6 0 01-6 6H7a6 6 0 01-6-6z", stroke: "currentColor" })
  );
}
var ForwardRef596 = React597.forwardRef(SvgHdDisplay);
var HdDisplay_default = ForwardRef596;

// node_modules/iconoir-react/dist/esm/Hd.mjs
var React598 = __toESM(require_react(), 1);
var __assign597 = function() {
  __assign597 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign597.apply(this, arguments);
};
function SvgHd(passedProps, svgRef) {
  var context = React598.useContext(IconoirContext);
  var props = __assign597(__assign597({}, context), passedProps);
  return React598.createElement(
    "svg",
    __assign597({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React598.createElement("path", { d: "M3 7v5m0 5v-5m0 0h7m0 0V7m0 5v5M13 12V7c4 0 8 0 8 5s-4 5-8 5v-5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef597 = React598.forwardRef(SvgHd);
var Hd_default = ForwardRef597;

// node_modules/iconoir-react/dist/esm/Hdr.mjs
var React599 = __toESM(require_react(), 1);
var __assign598 = function() {
  __assign598 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign598.apply(this, arguments);
};
function SvgHdr(passedProps, svgRef) {
  var context = React599.useContext(IconoirContext);
  var props = __assign598(__assign598({}, context), passedProps);
  return React599.createElement(
    "svg",
    __assign598({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React599.createElement("path", { d: "M1.5 8.5V12m0 3.5V12m0 0H6m0 0V8.5M6 12v3.5M17.5 15.5v-2.8m2.857 0c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H17.5v4.2m2.857 0H17.5m2.857 0l2.143 2.8M9.5 12V8.5c2.5 0 5 0 5 3.5s-2.5 3.5-5 3.5V12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef598 = React599.forwardRef(SvgHdr);
var Hdr_default = ForwardRef598;

// node_modules/iconoir-react/dist/esm/HeadsetCharge.mjs
var React600 = __toESM(require_react(), 1);
var __assign599 = function() {
  __assign599 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign599.apply(this, arguments);
};
function SvgHeadsetCharge(passedProps, svgRef) {
  var context = React600.useContext(IconoirContext);
  var props = __assign599(__assign599({}, context), passedProps);
  return React600.createElement(
    "svg",
    __assign599({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React600.createElement("path", { d: "M12.5 13L10 17h4l-2.5 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React600.createElement("path", { d: "M4 13.5V13c0-4.97 3.582-9 8-9s8 4.03 8 9v.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React600.createElement("path", { d: "M2 17.439v-1.877a2 2 0 011.515-1.94L4 13.5l1.254-.314a.6.6 0 01.746.582v5.464a.6.6 0 01-.746.582l-1.74-.435A2 2 0 012 17.439zM22 17.439v-1.877a2 2 0 00-1.515-1.94L20 13.5l-1.255-.314a.6.6 0 00-.745.582v5.464a.6.6 0 00.745.582l1.74-.435A2 2 0 0022 17.439z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef599 = React600.forwardRef(SvgHeadsetCharge);
var HeadsetCharge_default = ForwardRef599;

// node_modules/iconoir-react/dist/esm/HeadsetHelp.mjs
var React601 = __toESM(require_react(), 1);
var __assign600 = function() {
  __assign600 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign600.apply(this, arguments);
};
function SvgHeadsetHelp(passedProps, svgRef) {
  var context = React601.useContext(IconoirContext);
  var props = __assign600(__assign600({}, context), passedProps);
  return React601.createElement(
    "svg",
    __assign600({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React601.createElement("path", { d: "M20 11a8 8 0 10-16 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React601.createElement("path", { d: "M2 15.438v-1.876a2 2 0 011.515-1.94l1.74-.436a.6.6 0 01.745.582v5.463a.6.6 0 01-.746.583l-1.74-.435A2 2 0 012 15.439zM22 15.438v-1.876a2 2 0 00-1.515-1.94l-1.74-.436a.6.6 0 00-.745.582v5.463a.6.6 0 00.745.583l1.74-.435A2 2 0 0022 15.439zM20 18v.5a2 2 0 01-2 2h-3.5", stroke: "currentColor" }),
    React601.createElement("path", { d: "M13.5 22h-3a1.5 1.5 0 010-3h3a1.5 1.5 0 010 3z", stroke: "currentColor" })
  );
}
var ForwardRef600 = React601.forwardRef(SvgHeadsetHelp);
var HeadsetHelp_default = ForwardRef600;

// node_modules/iconoir-react/dist/esm/HeadsetIssue.mjs
var React602 = __toESM(require_react(), 1);
var __assign601 = function() {
  __assign601 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign601.apply(this, arguments);
};
function SvgHeadsetIssue(passedProps, svgRef) {
  var context = React602.useContext(IconoirContext);
  var props = __assign601(__assign601({}, context), passedProps);
  return React602.createElement(
    "svg",
    __assign601({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React602.createElement("path", { d: "M12 12v5M12 21.01l.01-.011M4 13.5V13c0-4.97 3.582-9 8-9s8 4.03 8 9v.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React602.createElement("path", { d: "M2 17.439v-1.877a2 2 0 011.515-1.94L4 13.5l1.254-.314a.6.6 0 01.746.582v5.464a.6.6 0 01-.746.582l-1.74-.435A2 2 0 012 17.439zM22 17.439v-1.877a2 2 0 00-1.515-1.94L20 13.5l-1.255-.314a.6.6 0 00-.745.582v5.464a.6.6 0 00.745.582l1.74-.435A2 2 0 0022 17.439z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef601 = React602.forwardRef(SvgHeadsetIssue);
var HeadsetIssue_default = ForwardRef601;

// node_modules/iconoir-react/dist/esm/Headset.mjs
var React603 = __toESM(require_react(), 1);
var __assign602 = function() {
  __assign602 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign602.apply(this, arguments);
};
function SvgHeadset(passedProps, svgRef) {
  var context = React603.useContext(IconoirContext);
  var props = __assign602(__assign602({}, context), passedProps);
  return React603.createElement(
    "svg",
    __assign602({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React603.createElement("path", { d: "M4 13.5V13c0-4.97 3.582-9 8-9s8 4.03 8 9v.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React603.createElement("path", { d: "M2 17.439v-1.877a2 2 0 011.515-1.94L4 13.5l1.254-.314a.6.6 0 01.746.582v5.464a.6.6 0 01-.746.582l-1.74-.435A2 2 0 012 17.439zM22 17.439v-1.877a2 2 0 00-1.515-1.94L20 13.5l-1.255-.314a.6.6 0 00-.745.582v5.464a.6.6 0 00.745.582l1.74-.435A2 2 0 0022 17.439z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef602 = React603.forwardRef(SvgHeadset);
var Headset_default = ForwardRef602;

// node_modules/iconoir-react/dist/esm/HealthShield.mjs
var React604 = __toESM(require_react(), 1);
var __assign603 = function() {
  __assign603 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign603.apply(this, arguments);
};
function SvgHealthShield(passedProps, svgRef) {
  var context = React604.useContext(IconoirContext);
  var props = __assign603(__assign603({}, context), passedProps);
  return React604.createElement(
    "svg",
    __assign603({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React604.createElement("path", { d: "M13.667 16h-3.334v-2.333H8v-3.334h2.333V8h3.334v2.333H16v3.334h-2.333V16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React604.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef603 = React604.forwardRef(SvgHealthShield);
var HealthShield_default = ForwardRef603;

// node_modules/iconoir-react/dist/esm/Healthcare.mjs
var React605 = __toESM(require_react(), 1);
var __assign604 = function() {
  __assign604 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign604.apply(this, arguments);
};
function SvgHealthcare(passedProps, svgRef) {
  var context = React605.useContext(IconoirContext);
  var props = __assign604(__assign604({}, context), passedProps);
  return React605.createElement(
    "svg",
    __assign604({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React605.createElement("path", { d: "M18 20l3.824-3.824a.6.6 0 00.176-.424V10.5A1.5 1.5 0 0020.5 9v0a1.5 1.5 0 00-1.5 1.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React605.createElement("path", { d: "M18 16l.858-.858a.484.484 0 00.142-.343v0a.485.485 0 00-.268-.433l-.443-.221a2 2 0 00-2.308.374l-.895.895a2 2 0 00-.586 1.414V20M6 20l-3.824-3.824A.6.6 0 012 15.752V10.5A1.5 1.5 0 013.5 9v0A1.5 1.5 0 015 10.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React605.createElement("path", { d: "M6 16l-.858-.858A.485.485 0 015 14.799v0c0-.183.104-.35.268-.433l.443-.221a2 2 0 012.308.374l.895.895a2 2 0 01.586 1.414V20M13.667 12h-3.334V9.667H8V6.333h2.333V4h3.334v2.333H16v3.334h-2.333V12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef604 = React605.forwardRef(SvgHealthcare);
var Healthcare_default = ForwardRef604;

// node_modules/iconoir-react/dist/esm/HeartArrowDown.mjs
var React606 = __toESM(require_react(), 1);
var __assign605 = function() {
  __assign605 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign605.apply(this, arguments);
};
function SvgHeartArrowDown(passedProps, svgRef) {
  var context = React606.useContext(IconoirContext);
  var props = __assign605(__assign605({}, context), passedProps);
  return React606.createElement(
    "svg",
    __assign605({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React606.createElement("path", { d: "M5.478 14.883l-1.824-1.89c-2.205-2.286-2.205-5.976 0-8.261a5.58 5.58 0 018.08 0l.266.274.265-.274A5.612 5.612 0 0116.305 3c1.52 0 2.973.624 4.04 1.732A5.95 5.95 0 0122 8.862a5.95 5.95 0 01-1.654 4.13c-.603.626-1.202 1.258-1.8 1.891M12 21.5V11M16 17.5l-4 4-4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef605 = React606.forwardRef(SvgHeartArrowDown);
var HeartArrowDown_default = ForwardRef605;

// node_modules/iconoir-react/dist/esm/Heart.mjs
var React607 = __toESM(require_react(), 1);
var __assign606 = function() {
  __assign606 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign606.apply(this, arguments);
};
function SvgHeart(passedProps, svgRef) {
  var context = React607.useContext(IconoirContext);
  var props = __assign606(__assign606({}, context), passedProps);
  return React607.createElement(
    "svg",
    __assign606({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React607.createElement("path", { d: "M22 8.862a5.95 5.95 0 01-1.654 4.13c-2.441 2.531-4.809 5.17-7.34 7.608-.581.55-1.502.53-2.057-.045l-7.295-7.562c-2.205-2.286-2.205-5.976 0-8.261a5.58 5.58 0 018.08 0l.266.274.265-.274A5.612 5.612 0 0116.305 3c1.52 0 2.973.624 4.04 1.732A5.95 5.95 0 0122 8.862z", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef606 = React607.forwardRef(SvgHeart);
var Heart_default = ForwardRef606;

// node_modules/iconoir-react/dist/esm/Heating.mjs
var React608 = __toESM(require_react(), 1);
var __assign607 = function() {
  __assign607 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign607.apply(this, arguments);
};
function SvgHeating(passedProps, svgRef) {
  var context = React608.useContext(IconoirContext);
  var props = __assign607(__assign607({}, context), passedProps);
  return React608.createElement(
    "svg",
    __assign607({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React608.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React608.createElement("path", { d: "M8 6s-2.5 3 0 6 0 6 0 6M12 6s-2.5 3 0 6 0 6 0 6M16 6s-2.5 3 0 6 0 6 0 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef607 = React608.forwardRef(SvgHeating);
var Heating_default = ForwardRef607;

// node_modules/iconoir-react/dist/esm/HeavyRain.mjs
var React609 = __toESM(require_react(), 1);
var __assign608 = function() {
  __assign608 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign608.apply(this, arguments);
};
function SvgHeavyRain(passedProps, svgRef) {
  var context = React609.useContext(IconoirContext);
  var props = __assign608(__assign608({}, context), passedProps);
  return React609.createElement(
    "svg",
    __assign608({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React609.createElement("path", { d: "M8 13v7M16 13v7M12 15v7M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef608 = React609.forwardRef(SvgHeavyRain);
var HeavyRain_default = ForwardRef608;

// node_modules/iconoir-react/dist/esm/HelpCircle.mjs
var React610 = __toESM(require_react(), 1);
var __assign609 = function() {
  __assign609 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign609.apply(this, arguments);
};
function SvgHelpCircle(passedProps, svgRef) {
  var context = React610.useContext(IconoirContext);
  var props = __assign609(__assign609({}, context), passedProps);
  return React610.createElement(
    "svg",
    __assign609({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React610.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React610.createElement("path", { d: "M9 9c0-3.5 5.5-3.5 5.5 0 0 2.5-2.5 2-2.5 5M12 18.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef609 = React610.forwardRef(SvgHelpCircle);
var HelpCircle_default = ForwardRef609;

// node_modules/iconoir-react/dist/esm/HelpSquare.mjs
var React611 = __toESM(require_react(), 1);
var __assign610 = function() {
  __assign610 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign610.apply(this, arguments);
};
function SvgHelpSquare(passedProps, svgRef) {
  var context = React611.useContext(IconoirContext);
  var props = __assign610(__assign610({}, context), passedProps);
  return React611.createElement(
    "svg",
    __assign610({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React611.createElement("path", { d: "M9 9c0-3.5 5.5-3.5 5.5 0 0 2.5-2.5 2-2.5 5M12 18.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React611.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef610 = React611.forwardRef(SvgHelpSquare);
var HelpSquare_default = ForwardRef610;

// node_modules/iconoir-react/dist/esm/Heptagon.mjs
var React612 = __toESM(require_react(), 1);
var __assign611 = function() {
  __assign611 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign611.apply(this, arguments);
};
function SvgHeptagon(passedProps, svgRef) {
  var context = React612.useContext(IconoirContext);
  var props = __assign611(__assign611({}, context), passedProps);
  return React612.createElement(
    "svg",
    __assign611({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React612.createElement("path", { d: "M11.74 1.625a.6.6 0 01.52 0l8.08 3.891a.6.6 0 01.324.407l1.996 8.743a.6.6 0 01-.116.508l-5.591 7.01a.6.6 0 01-.47.227H7.517a.6.6 0 01-.469-.226l-5.591-7.011a.6.6 0 01-.116-.508l1.996-8.743a.6.6 0 01.324-.407l8.08-3.89z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef611 = React612.forwardRef(SvgHeptagon);
var Heptagon_default = ForwardRef611;

// node_modules/iconoir-react/dist/esm/HerSlips.mjs
var React613 = __toESM(require_react(), 1);
var __assign612 = function() {
  __assign612 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign612.apply(this, arguments);
};
function SvgHerSlips(passedProps, svgRef) {
  var context = React613.useContext(IconoirContext);
  var props = __assign612(__assign612({}, context), passedProps);
  return React613.createElement(
    "svg",
    __assign612({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React613.createElement("path", { d: "M1 4.6a.6.6 0 01.6-.6h20.8a.6.6 0 01.6.6v3.912c0 .284-.199.53-.476.595-1.052.247-3.635.914-5.524 1.893-3.444 1.786-3.93 6.655-3.993 8.382a.637.637 0 01-.627.618h-.76a.637.637 0 01-.627-.618C10.93 17.655 10.443 12.786 7 11c-1.889-.98-4.472-1.646-5.524-1.893A.614.614 0 011 8.512V4.6z", stroke: "currentColor" })
  );
}
var ForwardRef612 = React613.forwardRef(SvgHerSlips);
var HerSlips_default = ForwardRef612;

// node_modules/iconoir-react/dist/esm/HexagonAlt.mjs
var React614 = __toESM(require_react(), 1);
var __assign613 = function() {
  __assign613 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign613.apply(this, arguments);
};
function SvgHexagonAlt(passedProps, svgRef) {
  var context = React614.useContext(IconoirContext);
  var props = __assign613(__assign613({}, context), passedProps);
  return React614.createElement(
    "svg",
    __assign613({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React614.createElement(
      "g",
      { clipPath: "url(#hexagon-alt_svg__clip0)" },
      React614.createElement("path", { d: "M6.327 2.774a.6.6 0 01.52-.3h10.307a.6.6 0 01.52.3l5.153 8.926a.6.6 0 010 .6l-5.154 8.926a.6.6 0 01-.52.3H6.847a.6.6 0 01-.52-.3L1.174 12.3a.6.6 0 010-.6l5.154-8.926z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
    ),
    React614.createElement(
      "defs",
      null,
      React614.createElement(
        "clipPath",
        { id: "hexagon-alt_svg__clip0" },
        React614.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef613 = React614.forwardRef(SvgHexagonAlt);
var HexagonAlt_default = ForwardRef613;

// node_modules/iconoir-react/dist/esm/HexagonDice.mjs
var React615 = __toESM(require_react(), 1);
var __assign614 = function() {
  __assign614 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign614.apply(this, arguments);
};
function SvgHexagonDice(passedProps, svgRef) {
  var context = React615.useContext(IconoirContext);
  var props = __assign614(__assign614({}, context), passedProps);
  return React615.createElement(
    "svg",
    __assign614({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React615.createElement("path", { d: "M11.7 1.173a.6.6 0 01.6 0l8.926 5.154a.6.6 0 01.3.52v10.307a.6.6 0 01-.3.52L12.3 22.826a.6.6 0 01-.6 0l-8.926-5.154a.6.6 0 01-.3-.52V6.847a.6.6 0 01.3-.52L11.7 1.174z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React615.createElement("path", { d: "M17 15H7l5-8 5 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React615.createElement("path", { d: "M2.5 6.5L12 7M2.5 6.5L7 15M21.5 6.5L17 15M21.5 6.5L12 7V1M21.5 17.5L17 15M2.5 17.5L7 15M7 15l5 8 5-8", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef614 = React615.forwardRef(SvgHexagonDice);
var HexagonDice_default = ForwardRef614;

// node_modules/iconoir-react/dist/esm/Hexagon.mjs
var React616 = __toESM(require_react(), 1);
var __assign615 = function() {
  __assign615 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign615.apply(this, arguments);
};
function SvgHexagon(passedProps, svgRef) {
  var context = React616.useContext(IconoirContext);
  var props = __assign615(__assign615({}, context), passedProps);
  return React616.createElement(
    "svg",
    __assign615({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React616.createElement("path", { d: "M11.7 1.173a.6.6 0 01.6 0l8.926 5.154a.6.6 0 01.3.52v10.307a.6.6 0 01-.3.52L12.3 22.826a.6.6 0 01-.6 0l-8.926-5.154a.6.6 0 01-.3-.52V6.847a.6.6 0 01.3-.52L11.7 1.174z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef615 = React616.forwardRef(SvgHexagon);
var Hexagon_default = ForwardRef615;

// node_modules/iconoir-react/dist/esm/HighPriority.mjs
var React617 = __toESM(require_react(), 1);
var __assign616 = function() {
  __assign616 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign616.apply(this, arguments);
};
function SvgHighPriority(passedProps, svgRef) {
  var context = React617.useContext(IconoirContext);
  var props = __assign616(__assign616({}, context), passedProps);
  return React617.createElement(
    "svg",
    __assign616({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React617.createElement("path", { d: "M11.576 1.424a.6.6 0 01.848 0l10.152 10.152a.6.6 0 010 .848L12.424 22.576a.6.6 0 01-.848 0L1.424 12.424a.6.6 0 010-.848L11.576 1.424zM12 8v4M12 16.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef616 = React617.forwardRef(SvgHighPriority);
var HighPriority_default = ForwardRef616;

// node_modules/iconoir-react/dist/esm/HistoricShieldAlt.mjs
var React618 = __toESM(require_react(), 1);
var __assign617 = function() {
  __assign617 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign617.apply(this, arguments);
};
function SvgHistoricShieldAlt(passedProps, svgRef) {
  var context = React618.useContext(IconoirContext);
  var props = __assign617(__assign617({}, context), passedProps);
  return React618.createElement(
    "svg",
    __assign617({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React618.createElement("path", { d: "M11.732 21.866l-5.52-2.76A4 4 0 014 15.528V2.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6v12.928a4 4 0 01-2.211 3.578l-5.52 2.76a.6.6 0 01-.537 0zM12 10V2M4 10h16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef617 = React618.forwardRef(SvgHistoricShieldAlt);
var HistoricShieldAlt_default = ForwardRef617;

// node_modules/iconoir-react/dist/esm/HistoricShield.mjs
var React619 = __toESM(require_react(), 1);
var __assign618 = function() {
  __assign618 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign618.apply(this, arguments);
};
function SvgHistoricShield(passedProps, svgRef) {
  var context = React619.useContext(IconoirContext);
  var props = __assign618(__assign618({}, context), passedProps);
  return React619.createElement(
    "svg",
    __assign618({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React619.createElement("path", { d: "M4 15.528V2.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6v12.928a4 4 0 01-2.211 3.578l-5.52 2.76a.6.6 0 01-.537 0l-5.52-2.76A4 4 0 014 15.528z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef618 = React619.forwardRef(SvgHistoricShield);
var HistoricShield_default = ForwardRef618;

// node_modules/iconoir-react/dist/esm/HomeAltSlimHoriz.mjs
var React620 = __toESM(require_react(), 1);
var __assign619 = function() {
  __assign619 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign619.apply(this, arguments);
};
function SvgHomeAltSlimHoriz(passedProps, svgRef) {
  var context = React620.useContext(IconoirContext);
  var props = __assign619(__assign619({}, context), passedProps);
  return React620.createElement(
    "svg",
    __assign619({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React620.createElement("path", { d: "M10 16h4M2 8l9.732-4.866a.6.6 0 01.536 0L22 8M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef619 = React620.forwardRef(SvgHomeAltSlimHoriz);
var HomeAltSlimHoriz_default = ForwardRef619;

// node_modules/iconoir-react/dist/esm/HomeAltSlim.mjs
var React621 = __toESM(require_react(), 1);
var __assign620 = function() {
  __assign620 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign620.apply(this, arguments);
};
function SvgHomeAltSlim(passedProps, svgRef) {
  var context = React621.useContext(IconoirContext);
  var props = __assign620(__assign620({}, context), passedProps);
  return React621.createElement(
    "svg",
    __assign620({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React621.createElement("path", { d: "M12 17v-4M2 8l9.732-4.866a.6.6 0 01.536 0L22 8M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef620 = React621.forwardRef(SvgHomeAltSlim);
var HomeAltSlim_default = ForwardRef620;

// node_modules/iconoir-react/dist/esm/HomeAlt.mjs
var React622 = __toESM(require_react(), 1);
var __assign621 = function() {
  __assign621 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign621.apply(this, arguments);
};
function SvgHomeAlt(passedProps, svgRef) {
  var context = React622.useContext(IconoirContext);
  var props = __assign621(__assign621({}, context), passedProps);
  return React622.createElement(
    "svg",
    __assign621({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React622.createElement("path", { d: "M10 18v-3a2 2 0 012-2v0a2 2 0 012 2v3M2 8l9.732-4.866a.6.6 0 01.536 0L22 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React622.createElement("path", { d: "M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef621 = React622.forwardRef(SvgHomeAlt);
var HomeAlt_default = ForwardRef621;

// node_modules/iconoir-react/dist/esm/HomeHospital.mjs
var React623 = __toESM(require_react(), 1);
var __assign622 = function() {
  __assign622 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign622.apply(this, arguments);
};
function SvgHomeHospital(passedProps, svgRef) {
  var context = React623.useContext(IconoirContext);
  var props = __assign622(__assign622({}, context), passedProps);
  return React623.createElement(
    "svg",
    __assign622({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React623.createElement("path", { d: "M3 9.5L12 4l9 5.5M19 13v6.4a.6.6 0 01-.6.6H5.6a.6.6 0 01-.6-.6V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React623.createElement("path", { d: "M13.667 17h-3.334v-2.333H8v-3.334h2.333V9h3.334v2.333H16v3.334h-2.333V17z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef622 = React623.forwardRef(SvgHomeHospital);
var HomeHospital_default = ForwardRef622;

// node_modules/iconoir-react/dist/esm/HomeSale.mjs
var React624 = __toESM(require_react(), 1);
var __assign623 = function() {
  __assign623 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign623.apply(this, arguments);
};
function SvgHomeSale(passedProps, svgRef) {
  var context = React624.useContext(IconoirContext);
  var props = __assign623(__assign623({}, context), passedProps);
  return React624.createElement(
    "svg",
    __assign623({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React624.createElement("path", { d: "M14 9.846c-1-.923-3.667-1.23-3.667.616S14 11.385 14 13.23s-3 1.846-4 .615M12 14.702V16M12 9.113V8M2 8l9.732-4.866a.6.6 0 01.536 0L22 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React624.createElement("path", { d: "M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef623 = React624.forwardRef(SvgHomeSale);
var HomeSale_default = ForwardRef623;

// node_modules/iconoir-react/dist/esm/HomeSecure.mjs
var React625 = __toESM(require_react(), 1);
var __assign624 = function() {
  __assign624 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign624.apply(this, arguments);
};
function SvgHomeSecure(passedProps, svgRef) {
  var context = React625.useContext(IconoirContext);
  var props = __assign624(__assign624({}, context), passedProps);
  return React625.createElement(
    "svg",
    __assign624({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React625.createElement("path", { d: "M14 12h.4a.6.6 0 01.6.6v2.8a.6.6 0 01-.6.6H9.6a.6.6 0 01-.6-.6v-2.8a.6.6 0 01.6-.6h.4m4 0v-2c0-.667-.4-2-2-2s-2 1.333-2 2v2m4 0h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React625.createElement("path", { d: "M2 8l9.732-4.866a.6.6 0 01.536 0L22 8M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef624 = React625.forwardRef(SvgHomeSecure);
var HomeSecure_default = ForwardRef624;

// node_modules/iconoir-react/dist/esm/HomeShield.mjs
var React626 = __toESM(require_react(), 1);
var __assign625 = function() {
  __assign625 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign625.apply(this, arguments);
};
function SvgHomeShield(passedProps, svgRef) {
  var context = React626.useContext(IconoirContext);
  var props = __assign625(__assign625({}, context), passedProps);
  return React626.createElement(
    "svg",
    __assign625({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React626.createElement("path", { d: "M12.502 9.13l2.049.531c.264.069.45.309.441.582C14.826 15.232 12 16 12 16s-2.826-.768-2.992-5.757a.584.584 0 01.441-.582l2.05-.53a2 2 0 011.003 0zM2 8l9.732-4.866a.6.6 0 01.536 0L22 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React626.createElement("path", { d: "M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef625 = React626.forwardRef(SvgHomeShield);
var HomeShield_default = ForwardRef625;

// node_modules/iconoir-react/dist/esm/HomeSimpleDoor.mjs
var React627 = __toESM(require_react(), 1);
var __assign626 = function() {
  __assign626 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign626.apply(this, arguments);
};
function SvgHomeSimpleDoor(passedProps, svgRef) {
  var context = React627.useContext(IconoirContext);
  var props = __assign626(__assign626({}, context), passedProps);
  return React627.createElement(
    "svg",
    __assign626({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React627.createElement("path", { d: "M9 21H7a4 4 0 01-4-4v-6.292a4 4 0 011.927-3.421l5-3.03a4 4 0 014.146 0l5 3.03A4 4 0 0121 10.707V17a4 4 0 01-4 4h-2m-6 0v-4a3 3 0 013-3v0a3 3 0 013 3v4m-6 0h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef626 = React627.forwardRef(SvgHomeSimpleDoor);
var HomeSimpleDoor_default = ForwardRef626;

// node_modules/iconoir-react/dist/esm/HomeSimple.mjs
var React628 = __toESM(require_react(), 1);
var __assign627 = function() {
  __assign627 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign627.apply(this, arguments);
};
function SvgHomeSimple(passedProps, svgRef) {
  var context = React628.useContext(IconoirContext);
  var props = __assign627(__assign627({}, context), passedProps);
  return React628.createElement(
    "svg",
    __assign627({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React628.createElement("path", { d: "M17 21H7a4 4 0 01-4-4v-6.292a4 4 0 011.927-3.421l5-3.03a4 4 0 014.146 0l5 3.03A4 4 0 0121 10.707V17a4 4 0 01-4 4zM9 17h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef627 = React628.forwardRef(SvgHomeSimple);
var HomeSimple_default = ForwardRef627;

// node_modules/iconoir-react/dist/esm/HomeTable.mjs
var React629 = __toESM(require_react(), 1);
var __assign628 = function() {
  __assign628 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign628.apply(this, arguments);
};
function SvgHomeTable(passedProps, svgRef) {
  var context = React629.useContext(IconoirContext);
  var props = __assign628(__assign628({}, context), passedProps);
  return React629.createElement(
    "svg",
    __assign628({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React629.createElement("path", { d: "M4 7v10M1 7h22M4 10h16M20 7v10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef628 = React629.forwardRef(SvgHomeTable);
var HomeTable_default = ForwardRef628;

// node_modules/iconoir-react/dist/esm/HomeTemperatureIn.mjs
var React630 = __toESM(require_react(), 1);
var __assign629 = function() {
  __assign629 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign629.apply(this, arguments);
};
function SvgHomeTemperatureIn(passedProps, svgRef) {
  var context = React630.useContext(IconoirContext);
  var props = __assign629(__assign629({}, context), passedProps);
  return React630.createElement(
    "svg",
    __assign629({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React630.createElement("path", { d: "M2 8l9.732-4.866a.6.6 0 01.536 0L22 8M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React630.createElement("path", { d: "M12 18a2 2 0 100-4 2 2 0 000 4zM12 7.5V14M12 12h2M12 9h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef629 = React630.forwardRef(SvgHomeTemperatureIn);
var HomeTemperatureIn_default = ForwardRef629;

// node_modules/iconoir-react/dist/esm/HomeTemperatureOut.mjs
var React631 = __toESM(require_react(), 1);
var __assign630 = function() {
  __assign630 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign630.apply(this, arguments);
};
function SvgHomeTemperatureOut(passedProps, svgRef) {
  var context = React631.useContext(IconoirContext);
  var props = __assign630(__assign630({}, context), passedProps);
  return React631.createElement(
    "svg",
    __assign630({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React631.createElement("path", { d: "M14 8L4.311 3.156a.6.6 0 00-.6.037L2.5 4M12 11v8a2 2 0 01-2 2H7m0 0H3.6a.6.6 0 01-.6-.6v-4.8a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6V21zM19 18a2 2 0 100-4 2 2 0 000 4zM19 7.5V14M19 12h2M19 9h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef630 = React631.forwardRef(SvgHomeTemperatureOut);
var HomeTemperatureOut_default = ForwardRef630;

// node_modules/iconoir-react/dist/esm/HomeUser.mjs
var React632 = __toESM(require_react(), 1);
var __assign631 = function() {
  __assign631 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign631.apply(this, arguments);
};
function SvgHomeUser(passedProps, svgRef) {
  var context = React632.useContext(IconoirContext);
  var props = __assign631(__assign631({}, context), passedProps);
  return React632.createElement(
    "svg",
    __assign631({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React632.createElement("path", { d: "M2.5 9.5L12 4l9.5 5.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React632.createElement("path", { d: "M7 21v-1a5 5 0 015-5v0a5 5 0 015 5v1", stroke: "currentColor" }),
    React632.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef631 = React632.forwardRef(SvgHomeUser);
var HomeUser_default = ForwardRef631;

// node_modules/iconoir-react/dist/esm/Home.mjs
var React633 = __toESM(require_react(), 1);
var __assign632 = function() {
  __assign632 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign632.apply(this, arguments);
};
function SvgHome(passedProps, svgRef) {
  var context = React633.useContext(IconoirContext);
  var props = __assign632(__assign632({}, context), passedProps);
  return React633.createElement(
    "svg",
    __assign632({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React633.createElement("path", { d: "M2 8l9.732-4.866a.6.6 0 01.536 0L22 8M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef632 = React633.forwardRef(SvgHome);
var Home_default = ForwardRef632;

// node_modules/iconoir-react/dist/esm/HorizDistributionLeft.mjs
var React634 = __toESM(require_react(), 1);
var __assign633 = function() {
  __assign633 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign633.apply(this, arguments);
};
function SvgHorizDistributionLeft(passedProps, svgRef) {
  var context = React634.useContext(IconoirContext);
  var props = __assign633(__assign633({}, context), passedProps);
  return React634.createElement(
    "svg",
    __assign633({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React634.createElement("path", { d: "M19 17V7m0 10h-5.4a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6H19m0 10v3m0-13V4M9 17V7m0 10H5.6a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6H9m0 10v3M9 7V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef633 = React634.forwardRef(SvgHorizDistributionLeft);
var HorizDistributionLeft_default = ForwardRef633;

// node_modules/iconoir-react/dist/esm/HorizDistributionRight.mjs
var React635 = __toESM(require_react(), 1);
var __assign634 = function() {
  __assign634 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign634.apply(this, arguments);
};
function SvgHorizDistributionRight(passedProps, svgRef) {
  var context = React635.useContext(IconoirContext);
  var props = __assign634(__assign634({}, context), passedProps);
  return React635.createElement(
    "svg",
    __assign634({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React635.createElement("path", { d: "M5 17V7m0 10h5.4a.6.6 0 00.6-.6V7.6a.6.6 0 00-.6-.6H5m0 10v3M5 7V4M15 17V7m0 10h3.4a.6.6 0 00.6-.6V7.6a.6.6 0 00-.6-.6H15m0 10v3m0-13V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef634 = React635.forwardRef(SvgHorizDistributionRight);
var HorizDistributionRight_default = ForwardRef634;

// node_modules/iconoir-react/dist/esm/HorizontalMerge.mjs
var React636 = __toESM(require_react(), 1);
var __assign635 = function() {
  __assign635 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign635.apply(this, arguments);
};
function SvgHorizontalMerge(passedProps, svgRef) {
  var context = React636.useContext(IconoirContext);
  var props = __assign635(__assign635({}, context), passedProps);
  return React636.createElement(
    "svg",
    __assign635({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React636.createElement("path", { d: "M22 12h-8m0 0l3.5-3.5M14 12l3.5 3.5M2 12h8m0 0L6.5 8.5M10 12l-3.5 3.5M10 21V3M14 21V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef635 = React636.forwardRef(SvgHorizontalMerge);
var HorizontalMerge_default = ForwardRef635;

// node_modules/iconoir-react/dist/esm/HorizontalSplit.mjs
var React637 = __toESM(require_react(), 1);
var __assign636 = function() {
  __assign636 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign636.apply(this, arguments);
};
function SvgHorizontalSplit(passedProps, svgRef) {
  var context = React637.useContext(IconoirContext);
  var props = __assign636(__assign636({}, context), passedProps);
  return React637.createElement(
    "svg",
    __assign636({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React637.createElement("path", { d: "M10 12H2m0 0l3.5-3.5M2 12l3.5 3.5M14 12h8m0 0l-3.5-3.5M22 12l-3.5 3.5M10 21V3M14 21V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef636 = React637.forwardRef(SvgHorizontalSplit);
var HorizontalSplit_default = ForwardRef636;

// node_modules/iconoir-react/dist/esm/HospitalSign.mjs
var React638 = __toESM(require_react(), 1);
var __assign637 = function() {
  __assign637 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign637.apply(this, arguments);
};
function SvgHospitalSign(passedProps, svgRef) {
  var context = React638.useContext(IconoirContext);
  var props = __assign637(__assign637({}, context), passedProps);
  return React638.createElement(
    "svg",
    __assign637({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React638.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM8 12h8m-8 0V7m0 5v5m8-5v5m0-5V7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef637 = React638.forwardRef(SvgHospitalSign);
var HospitalSign_default = ForwardRef637;

// node_modules/iconoir-react/dist/esm/Hospital.mjs
var React639 = __toESM(require_react(), 1);
var __assign638 = function() {
  __assign638 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign638.apply(this, arguments);
};
function SvgHospital(passedProps, svgRef) {
  var context = React639.useContext(IconoirContext);
  var props = __assign638(__assign638({}, context), passedProps);
  return React639.createElement(
    "svg",
    __assign638({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React639.createElement("path", { d: "M6.4 8a.6.6 0 00.6-.6V3.6a.6.6 0 01.6-.6h8.8a.6.6 0 01.6.6v3.8a.6.6 0 00.6.6h1.8a.6.6 0 01.6.6v11.8a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6V8.6a.6.6 0 01.6-.6h1.8z", stroke: "currentColor" }),
    React639.createElement("path", { d: "M9.992 8h2m2 0h-2m0 0V6m0 2v2M16 17.01l.01-.011M16 13.01l.01-.011M12 13.01l.01-.011M8 13.01l.01-.011M8 17.01l.01-.011M12 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef638 = React639.forwardRef(SvgHospital);
var Hospital_default = ForwardRef638;

// node_modules/iconoir-react/dist/esm/HotAirBalloon.mjs
var React640 = __toESM(require_react(), 1);
var __assign639 = function() {
  __assign639 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign639.apply(this, arguments);
};
function SvgHotAirBalloon(passedProps, svgRef) {
  var context = React640.useContext(IconoirContext);
  var props = __assign639(__assign639({}, context), passedProps);
  return React640.createElement(
    "svg",
    __assign639({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React640.createElement("path", { d: "M4 9.5c0 4.571 5.714 8 5.714 8h4.572S20 14.071 20 9.5s-3.582-8-8-8-8 3.429-8 8z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React640.createElement("path", { d: "M9 2c-3 6 1 15.5 1 15.5M14.884 2c3 6-1 15.5-1 15.5", stroke: "currentColor", strokeLinejoin: "round" }),
    React640.createElement("path", { d: "M13.4 23h-2.8a.6.6 0 01-.6-.6v-1.8a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v1.8a.6.6 0 01-.6.6z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef639 = React640.forwardRef(SvgHotAirBalloon);
var HotAirBalloon_default = ForwardRef639;

// node_modules/iconoir-react/dist/esm/Hourglass.mjs
var React641 = __toESM(require_react(), 1);
var __assign640 = function() {
  __assign640 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign640.apply(this, arguments);
};
function SvgHourglass(passedProps, svgRef) {
  var context = React641.useContext(IconoirContext);
  var props = __assign640(__assign640({}, context), passedProps);
  return React641.createElement(
    "svg",
    __assign640({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React641.createElement("path", { d: "M12 12a7 7 0 007-7H5a7 7 0 007 7zm0 0a7 7 0 017 7H5a7 7 0 017-7zM5 2h14M5 22h14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef640 = React641.forwardRef(SvgHourglass);
var Hourglass_default = ForwardRef640;

// node_modules/iconoir-react/dist/esm/HouseRooms.mjs
var React642 = __toESM(require_react(), 1);
var __assign641 = function() {
  __assign641 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign641.apply(this, arguments);
};
function SvgHouseRooms(passedProps, svgRef) {
  var context = React642.useContext(IconoirContext);
  var props = __assign641(__assign641({}, context), passedProps);
  return React642.createElement(
    "svg",
    __assign641({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React642.createElement("path", { d: "M11 19v2M11 12v4M16 12v4h-2M21 12H8M5 12H3M3 5l9-2 9 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React642.createElement("path", { d: "M21 8.6v11.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V8.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef641 = React642.forwardRef(SvgHouseRooms);
var HouseRooms_default = ForwardRef641;

// node_modules/iconoir-react/dist/esm/Html5.mjs
var React643 = __toESM(require_react(), 1);
var __assign642 = function() {
  __assign642 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign642.apply(this, arguments);
};
function SvgHtml5(passedProps, svgRef) {
  var context = React643.useContext(IconoirContext);
  var props = __assign642(__assign642({}, context), passedProps);
  return React643.createElement(
    "svg",
    __assign642({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React643.createElement("path", { d: "M4 3l1.778 17.09L12 22l6.222-1.91L20 3H4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React643.createElement("path", { d: "M17 7H7.5l.5 4.5h8l-.5 5.5-3.5 1-3.5-1-.25-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef642 = React643.forwardRef(SvgHtml5);
var Html5_default = ForwardRef642;

// node_modules/iconoir-react/dist/esm/Hydrogen.mjs
var React644 = __toESM(require_react(), 1);
var __assign643 = function() {
  __assign643 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign643.apply(this, arguments);
};
function SvgHydrogen(passedProps, svgRef) {
  var context = React644.useContext(IconoirContext);
  var props = __assign643(__assign643({}, context), passedProps);
  return React644.createElement(
    "svg",
    __assign643({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React644.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM10 8v4m0 4v-4m0 0h4m0 0V8m0 4v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef643 = React644.forwardRef(SvgHydrogen);
var Hydrogen_default = ForwardRef643;

// node_modules/iconoir-react/dist/esm/Iconoir.mjs
var React645 = __toESM(require_react(), 1);
var __assign644 = function() {
  __assign644 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign644.apply(this, arguments);
};
function SvgIconoir(passedProps, svgRef) {
  var context = React645.useContext(IconoirContext);
  var props = __assign644(__assign644({}, context), passedProps);
  return React645.createElement(
    "svg",
    __assign644({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React645.createElement("path", { d: "M12 16a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React645.createElement("path", { d: "M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef644 = React645.forwardRef(SvgIconoir);
var Iconoir_default = ForwardRef644;

// node_modules/iconoir-react/dist/esm/Import.mjs
var React646 = __toESM(require_react(), 1);
var __assign645 = function() {
  __assign645 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign645.apply(this, arguments);
};
function SvgImport(passedProps, svgRef) {
  var context = React646.useContext(IconoirContext);
  var props = __assign645(__assign645({}, context), passedProps);
  return React646.createElement(
    "svg",
    __assign645({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React646.createElement("path", { d: "M4 13v6a2 2 0 002 2h12a2 2 0 002-2v-6M12 3v12m0 0l-3.5-3.5M12 15l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef645 = React646.forwardRef(SvgImport);
var Import_default = ForwardRef645;

// node_modules/iconoir-react/dist/esm/Inclination.mjs
var React647 = __toESM(require_react(), 1);
var __assign646 = function() {
  __assign646 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign646.apply(this, arguments);
};
function SvgInclination(passedProps, svgRef) {
  var context = React647.useContext(IconoirContext);
  var props = __assign646(__assign646({}, context), passedProps);
  return React647.createElement(
    "svg",
    __assign646({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React647.createElement("path", { d: "M22 19H3.41a.6.6 0 01-.431-1.016L16.444 4M20 16c-.5-3.5-1-5-3-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef646 = React647.forwardRef(SvgInclination);
var Inclination_default = ForwardRef646;

// node_modules/iconoir-react/dist/esm/Industry.mjs
var React648 = __toESM(require_react(), 1);
var __assign647 = function() {
  __assign647 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign647.apply(this, arguments);
};
function SvgIndustry(passedProps, svgRef) {
  var context = React648.useContext(IconoirContext);
  var props = __assign647(__assign647({}, context), passedProps);
  return React648.createElement(
    "svg",
    __assign647({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React648.createElement("path", { d: "M18 10c0-1-1-2-3-2h-1a3 3 0 01-3-3V2M18 21h3v-9h-3v4.5m0 4.5v-4.5m0 4.5H3v-4l3.5-3 4 2.5 4-2.5 3.5 2.5M21 10c0-6-4-6-4-6s4 .5 4-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef647 = React648.forwardRef(SvgIndustry);
var Industry_default = ForwardRef647;

// node_modules/iconoir-react/dist/esm/Infinite.mjs
var React649 = __toESM(require_react(), 1);
var __assign648 = function() {
  __assign648 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign648.apply(this, arguments);
};
function SvgInfinite(passedProps, svgRef) {
  var context = React649.useContext(IconoirContext);
  var props = __assign648(__assign648({}, context), passedProps);
  return React649.createElement(
    "svg",
    __assign648({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React649.createElement("path", { d: "M14 9l-.25.375M10 9a5 5 0 100 6l.334-.5M10 9l4 6a5 5 0 100-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef648 = React649.forwardRef(SvgInfinite);
var Infinite_default = ForwardRef648;

// node_modules/iconoir-react/dist/esm/InfoEmpty.mjs
var React650 = __toESM(require_react(), 1);
var __assign649 = function() {
  __assign649 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign649.apply(this, arguments);
};
function SvgInfoEmpty(passedProps, svgRef) {
  var context = React650.useContext(IconoirContext);
  var props = __assign649(__assign649({}, context), passedProps);
  return React650.createElement(
    "svg",
    __assign649({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React650.createElement("path", { d: "M12 11.5v5M12 7.51l.01-.011M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef649 = React650.forwardRef(SvgInfoEmpty);
var InfoEmpty_default = ForwardRef649;

// node_modules/iconoir-react/dist/esm/InputField.mjs
var React651 = __toESM(require_react(), 1);
var __assign650 = function() {
  __assign650 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign650.apply(this, arguments);
};
function SvgInputField(passedProps, svgRef) {
  var context = React651.useContext(IconoirContext);
  var props = __assign650(__assign650({}, context), passedProps);
  return React651.createElement(
    "svg",
    __assign650({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React651.createElement("path", { d: "M4 6h16a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2zM5 8.5h1.5m1.5 0H6.5m0 0v7m0 0H5m1.5 0H8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef650 = React651.forwardRef(SvgInputField);
var InputField_default = ForwardRef650;

// node_modules/iconoir-react/dist/esm/InputOutput.mjs
var React652 = __toESM(require_react(), 1);
var __assign651 = function() {
  __assign651 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign651.apply(this, arguments);
};
function SvgInputOutput(passedProps, svgRef) {
  var context = React652.useContext(IconoirContext);
  var props = __assign651(__assign651({}, context), passedProps);
  return React652.createElement(
    "svg",
    __assign651({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React652.createElement("path", { d: "M14 19a7 7 0 100-14 7 7 0 000 14z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React652.createElement("path", { d: "M3 19V5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef651 = React652.forwardRef(SvgInputOutput);
var InputOutput_default = ForwardRef651;

// node_modules/iconoir-react/dist/esm/InputSearch.mjs
var React653 = __toESM(require_react(), 1);
var __assign652 = function() {
  __assign652 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign652.apply(this, arguments);
};
function SvgInputSearch(passedProps, svgRef) {
  var context = React653.useContext(IconoirContext);
  var props = __assign652(__assign652({}, context), passedProps);
  return React653.createElement(
    "svg",
    __assign652({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React653.createElement("path", { d: "M21 12v-2a5 5 0 00-5-5H8a5 5 0 00-5 5v0a5 5 0 005 5h4M20.124 19.119a3 3 0 10-4.248-4.237 3 3 0 004.248 4.237zm0 0L22 21", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef652 = React653.forwardRef(SvgInputSearch);
var InputSearch_default = ForwardRef652;

// node_modules/iconoir-react/dist/esm/Instagram.mjs
var React654 = __toESM(require_react(), 1);
var __assign653 = function() {
  __assign653 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign653.apply(this, arguments);
};
function SvgInstagram(passedProps, svgRef) {
  var context = React654.useContext(IconoirContext);
  var props = __assign653(__assign653({}, context), passedProps);
  return React654.createElement(
    "svg",
    __assign653({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React654.createElement("path", { d: "M12 16a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React654.createElement("path", { d: "M3 16V8a5 5 0 015-5h8a5 5 0 015 5v8a5 5 0 01-5 5H8a5 5 0 01-5-5z", stroke: "currentColor" }),
    React654.createElement("path", { d: "M17.5 6.51l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef653 = React654.forwardRef(SvgInstagram);
var Instagram_default = ForwardRef653;

// node_modules/iconoir-react/dist/esm/Internet.mjs
var React655 = __toESM(require_react(), 1);
var __assign654 = function() {
  __assign654 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign654.apply(this, arguments);
};
function SvgInternet(passedProps, svgRef) {
  var context = React655.useContext(IconoirContext);
  var props = __assign654(__assign654({}, context), passedProps);
  return React655.createElement(
    "svg",
    __assign654({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React655.createElement("path", { d: "M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12s4.477 10 10 10M13 2.05S16 6 16 12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React655.createElement("path", { d: "M11 21.95S8 18 8 12c0-6 3-9.95 3-9.95M2.63 15.5H12M2.63 8.5h18.74", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React655.createElement("path", { clipRule: "evenodd", d: "M21.879 17.917c.494.304.463 1.043-.045 1.101l-2.567.291-1.151 2.312c-.228.459-.933.234-1.05-.334l-1.255-6.116c-.099-.48.333-.782.75-.525l5.318 3.271z", stroke: "currentColor" })
  );
}
var ForwardRef654 = React655.forwardRef(SvgInternet);
var Internet_default = ForwardRef654;

// node_modules/iconoir-react/dist/esm/IntersectAlt.mjs
var React656 = __toESM(require_react(), 1);
var __assign655 = function() {
  __assign655 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign655.apply(this, arguments);
};
function SvgIntersectAlt(passedProps, svgRef) {
  var context = React656.useContext(IconoirContext);
  var props = __assign655(__assign655({}, context), passedProps);
  return React656.createElement(
    "svg",
    __assign655({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React656.createElement("path", { d: "M15.01 3l-.01.011M11.01 3l-.01.011M7.01 3L7 3.011M3.01 3L3 3.011M3.01 7L3 7.011M3.01 11l-.01.011M3.01 15l-.01.011M9 21.01l.01-.011M13 21.01l.01-.011M17 21.01l.01-.011M21 21.01l.01-.011M21 17.01l.01-.011M21 13.01l.01-.011M21 9.01l.01-.011M9 17v-7a1 1 0 011-1h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React656.createElement("path", { d: "M15 7v7a1 1 0 01-1 1H7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef655 = React656.forwardRef(SvgIntersectAlt);
var IntersectAlt_default = ForwardRef655;

// node_modules/iconoir-react/dist/esm/Intersect.mjs
var React657 = __toESM(require_react(), 1);
var __assign656 = function() {
  __assign656 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign656.apply(this, arguments);
};
function SvgIntersect(passedProps, svgRef) {
  var context = React657.useContext(IconoirContext);
  var props = __assign656(__assign656({}, context), passedProps);
  return React657.createElement(
    "svg",
    __assign656({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React657.createElement("path", { d: "M21 13.5v3M13.5 21h3M16.5 9H9.6a.6.6 0 00-.6.6v6.9M10.5 21h-.9a.6.6 0 01-.6-.6v-.9M21 19.5v.9a.6.6 0 01-.6.6h-.9M19.5 9h.9a.6.6 0 01.6.6v.9M3 10.5v-3M7.5 3h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React657.createElement("path", { d: "M7.5 15h6.9a.6.6 0 00.6-.6V7.5M4.5 15h-.9a.6.6 0 01-.6-.6v-.9M3 4.5v-.9a.6.6 0 01.6-.6h.9M13.5 3h.9a.6.6 0 01.6.6v.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef656 = React657.forwardRef(SvgIntersect);
var Intersect_default = ForwardRef656;

// node_modules/iconoir-react/dist/esm/IosSettings.mjs
var React658 = __toESM(require_react(), 1);
var __assign657 = function() {
  __assign657 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign657.apply(this, arguments);
};
function SvgIosSettings(passedProps, svgRef) {
  var context = React658.useContext(IconoirContext);
  var props = __assign657(__assign657({}, context), passedProps);
  return React658.createElement(
    "svg",
    __assign657({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React658.createElement("path", { d: "M12 18a6 6 0 100-12 6 6 0 000 12zM18 12h-6M9 6.803L12 12m0 0l-3 5.197", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React658.createElement("path", { d: "M12 19a7 7 0 100-14 7 7 0 000 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "1 3" }),
    React658.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React658.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef657 = React658.forwardRef(SvgIosSettings);
var IosSettings_default = ForwardRef657;

// node_modules/iconoir-react/dist/esm/IpAddress.mjs
var React659 = __toESM(require_react(), 1);
var __assign658 = function() {
  __assign658 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign658.apply(this, arguments);
};
function SvgIpAddress(passedProps, svgRef) {
  var context = React659.useContext(IconoirContext);
  var props = __assign658(__assign658({}, context), passedProps);
  return React659.createElement(
    "svg",
    __assign658({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React659.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React659.createElement("path", { d: "M12 9v6M9 9v6M12 12h2.5a1.5 1.5 0 001.5-1.5v0A1.5 1.5 0 0014.5 9H12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef658 = React659.forwardRef(SvgIpAddress);
var IpAddress_default = ForwardRef658;

// node_modules/iconoir-react/dist/esm/IrisScan.mjs
var React660 = __toESM(require_react(), 1);
var __assign659 = function() {
  __assign659 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign659.apply(this, arguments);
};
function SvgIrisScan(passedProps, svgRef) {
  var context = React660.useContext(IconoirContext);
  var props = __assign659(__assign659({}, context), passedProps);
  return React660.createElement(
    "svg",
    __assign659({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React660.createElement("path", { d: "M6 3H3v3M12 14a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React660.createElement("path", { d: "M21 12c-1.889 2.991-5.282 6-9 6s-7.111-3.009-9-6c2.299-2.842 4.992-6 9-6s6.701 3.158 9 6zM18 3h3v3M6 21H3v-3M18 21h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef659 = React660.forwardRef(SvgIrisScan);
var IrisScan_default = ForwardRef659;

// node_modules/iconoir-react/dist/esm/ItalicSquare.mjs
var React661 = __toESM(require_react(), 1);
var __assign660 = function() {
  __assign660 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign660.apply(this, arguments);
};
function SvgItalicSquare(passedProps, svgRef) {
  var context = React661.useContext(IconoirContext);
  var props = __assign660(__assign660({}, context), passedProps);
  return React661.createElement(
    "svg",
    __assign660({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React661.createElement("path", { d: "M12 6h2m2 0h-2m0 0l-4 12m0 0H8m2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React661.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef660 = React661.forwardRef(SvgItalicSquare);
var ItalicSquare_default = ForwardRef660;

// node_modules/iconoir-react/dist/esm/Italic.mjs
var React662 = __toESM(require_react(), 1);
var __assign661 = function() {
  __assign661 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign661.apply(this, arguments);
};
function SvgItalic(passedProps, svgRef) {
  var context = React662.useContext(IconoirContext);
  var props = __assign661(__assign661({}, context), passedProps);
  return React662.createElement(
    "svg",
    __assign661({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React662.createElement("path", { d: "M11 5h3m3 0h-3m0 0l-4 14m0 0H7m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef661 = React662.forwardRef(SvgItalic);
var Italic_default = ForwardRef661;

// node_modules/iconoir-react/dist/esm/Jellyfish.mjs
var React663 = __toESM(require_react(), 1);
var __assign662 = function() {
  __assign662 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign662.apply(this, arguments);
};
function SvgJellyfish(passedProps, svgRef) {
  var context = React663.useContext(IconoirContext);
  var props = __assign662(__assign662({}, context), passedProps);
  return React663.createElement(
    "svg",
    __assign662({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React663.createElement("path", { d: "M12 2c4.97 0 9 4.104 9 9.167 0 .068 0 .136-.002.204-.02.954-.865 1.629-1.819 1.629H4.821c-.954 0-1.798-.675-1.819-1.629A9.52 9.52 0 013 11.167C3 6.104 7.03 2 12 2zM6 13l1 1.125c.57.642.57 1.608 0 2.25v0a1.693 1.693 0 000 2.25v0c.57.642.57 1.608 0 2.25L6 22M11 13l1 1.125c.57.642.57 1.608 0 2.25v0a1.693 1.693 0 000 2.25v0c.57.642.57 1.608 0 2.25L11 22M16 13l1 1.125c.57.642.57 1.608 0 2.25v0a1.693 1.693 0 000 2.25v0c.57.642.57 1.608 0 2.25L16 22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef662 = React663.forwardRef(SvgJellyfish);
var Jellyfish_default = ForwardRef662;

// node_modules/iconoir-react/dist/esm/JournalPage.mjs
var React664 = __toESM(require_react(), 1);
var __assign663 = function() {
  __assign663 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign663.apply(this, arguments);
};
function SvgJournalPage(passedProps, svgRef) {
  var context = React664.useContext(IconoirContext);
  var props = __assign663(__assign663({}, context), passedProps);
  return React664.createElement(
    "svg",
    __assign663({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React664.createElement("path", { d: "M6 6h8M6 10h12M13 14h5M13 18h5M2 21.4V2.6a.6.6 0 01.6-.6h15.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0122 5.75V21.4a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React664.createElement("path", { d: "M6 18v-4h3v4H6zM18 2v3.4a.6.6 0 00.6.6H22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef663 = React664.forwardRef(SvgJournalPage);
var JournalPage_default = ForwardRef663;

// node_modules/iconoir-react/dist/esm/Journal.mjs
var React665 = __toESM(require_react(), 1);
var __assign664 = function() {
  __assign664 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign664.apply(this, arguments);
};
function SvgJournal(passedProps, svgRef) {
  var context = React665.useContext(IconoirContext);
  var props = __assign664(__assign664({}, context), passedProps);
  return React665.createElement(
    "svg",
    __assign664({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React665.createElement("path", { d: "M6 6h12M6 10h12M13 14h5M13 18h5M2 21.4V2.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v18.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React665.createElement("path", { d: "M6 18v-4h3v4H6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef664 = React665.forwardRef(SvgJournal);
var Journal_default = ForwardRef664;

// node_modules/iconoir-react/dist/esm/JpegFormat.mjs
var React666 = __toESM(require_react(), 1);
var __assign665 = function() {
  __assign665 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign665.apply(this, arguments);
};
function SvgJpegFormat(passedProps, svgRef) {
  var context = React666.useContext(IconoirContext);
  var props = __assign665(__assign665({}, context), passedProps);
  return React666.createElement(
    "svg",
    __assign665({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React666.createElement("path", { d: "M7 15v-3m0 0V9h3v3H7zM16 9h-3v6h3M22 9h-3v6h3v-2.4M4 9v4.2C4 15 2 15 2 15M13 12h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React666.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef665 = React666.forwardRef(SvgJpegFormat);
var JpegFormat_default = ForwardRef665;

// node_modules/iconoir-react/dist/esm/JpgFormat.mjs
var React667 = __toESM(require_react(), 1);
var __assign666 = function() {
  __assign666 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign666.apply(this, arguments);
};
function SvgJpgFormat(passedProps, svgRef) {
  var context = React667.useContext(IconoirContext);
  var props = __assign666(__assign666({}, context), passedProps);
  return React667.createElement(
    "svg",
    __assign666({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React667.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React667.createElement("path", { d: "M10 15v-3m0 0V9h3v3h-3zM19 9h-3v6h3v-2.4M7 9v4.2C7 15 5 15 5 15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef666 = React667.forwardRef(SvgJpgFormat);
var JpgFormat_default = ForwardRef666;

// node_modules/iconoir-react/dist/esm/KanbanBoard.mjs
var React668 = __toESM(require_react(), 1);
var __assign667 = function() {
  __assign667 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign667.apply(this, arguments);
};
function SvgKanbanBoard(passedProps, svgRef) {
  var context = React668.useContext(IconoirContext);
  var props = __assign667(__assign667({}, context), passedProps);
  return React668.createElement(
    "svg",
    __assign667({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React668.createElement("path", { d: "M3 3.6v16.8a.6.6 0 00.6.6h16.8a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6zM6 6v10M10 6v3M14 6v7M18 6v5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef667 = React668.forwardRef(SvgKanbanBoard);
var KanbanBoard_default = ForwardRef667;

// node_modules/iconoir-react/dist/esm/KeyAltBack.mjs
var React669 = __toESM(require_react(), 1);
var __assign668 = function() {
  __assign668 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign668.apply(this, arguments);
};
function SvgKeyAltBack(passedProps, svgRef) {
  var context = React669.useContext(IconoirContext);
  var props = __assign668(__assign668({}, context), passedProps);
  return React669.createElement(
    "svg",
    __assign668({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React669.createElement("path", { d: "M14 12a4 4 0 108 0 4 4 0 00-8 0zm0 0H2v3M6 12v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef668 = React669.forwardRef(SvgKeyAltBack);
var KeyAltBack_default = ForwardRef668;

// node_modules/iconoir-react/dist/esm/KeyAltMinus.mjs
var React670 = __toESM(require_react(), 1);
var __assign669 = function() {
  __assign669 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign669.apply(this, arguments);
};
function SvgKeyAltMinus(passedProps, svgRef) {
  var context = React670.useContext(IconoirContext);
  var props = __assign669(__assign669({}, context), passedProps);
  return React670.createElement(
    "svg",
    __assign669({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React670.createElement("path", { d: "M14.992 18h6M12.412 10.343a4 4 0 105.657-5.657 4 4 0 00-5.657 5.657zm0 0l-8.485 8.485 2.121 2.122M6.755 16l2.122 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef669 = React670.forwardRef(SvgKeyAltMinus);
var KeyAltMinus_default = ForwardRef669;

// node_modules/iconoir-react/dist/esm/KeyAltPlus.mjs
var React671 = __toESM(require_react(), 1);
var __assign670 = function() {
  __assign670 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign670.apply(this, arguments);
};
function SvgKeyAltPlus(passedProps, svgRef) {
  var context = React671.useContext(IconoirContext);
  var props = __assign670(__assign670({}, context), passedProps);
  return React671.createElement(
    "svg",
    __assign670({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React671.createElement("path", { d: "M14.992 18h3m3 0h-3m0 0v-3m0 3v3M12.412 10.343a4 4 0 105.657-5.657 4 4 0 00-5.657 5.657zm0 0l-8.485 8.485 2.121 2.122M6.755 16l2.122 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef670 = React671.forwardRef(SvgKeyAltPlus);
var KeyAltPlus_default = ForwardRef670;

// node_modules/iconoir-react/dist/esm/KeyAltRemove.mjs
var React672 = __toESM(require_react(), 1);
var __assign671 = function() {
  __assign671 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign671.apply(this, arguments);
};
function SvgKeyAltRemove(passedProps, svgRef) {
  var context = React672.useContext(IconoirContext);
  var props = __assign671(__assign671({}, context), passedProps);
  return React672.createElement(
    "svg",
    __assign671({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React672.createElement("path", { d: "M15.87 20.121L17.993 18m2.121-2.121L17.993 18m0 0l-2.122-2.121M17.992 18l2.121 2.121M12.412 10.343a4 4 0 105.657-5.657 4 4 0 00-5.657 5.657zm0 0l-8.485 8.485 2.121 2.122M6.755 16l2.122 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef671 = React672.forwardRef(SvgKeyAltRemove);
var KeyAltRemove_default = ForwardRef671;

// node_modules/iconoir-react/dist/esm/KeyAlt.mjs
var React673 = __toESM(require_react(), 1);
var __assign672 = function() {
  __assign672 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign672.apply(this, arguments);
};
function SvgKeyAlt(passedProps, svgRef) {
  var context = React673.useContext(IconoirContext);
  var props = __assign672(__assign672({}, context), passedProps);
  return React673.createElement(
    "svg",
    __assign672({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React673.createElement("path", { d: "M10 12a4 4 0 11-8 0 4 4 0 018 0zm0 0h12v3M18 12v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef672 = React673.forwardRef(SvgKeyAlt);
var KeyAlt_default = ForwardRef672;

// node_modules/iconoir-react/dist/esm/KeyCommand.mjs
var React674 = __toESM(require_react(), 1);
var __assign673 = function() {
  __assign673 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign673.apply(this, arguments);
};
function SvgKeyCommand(passedProps, svgRef) {
  var context = React674.useContext(IconoirContext);
  var props = __assign673(__assign673({}, context), passedProps);
  return React674.createElement(
    "svg",
    __assign673({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React674.createElement("path", { d: "M9 6v12M15 6v12M9 6a3 3 0 10-3 3h12a3 3 0 10-3-3M9 18a3 3 0 11-3-3h12a3 3 0 11-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef673 = React674.forwardRef(SvgKeyCommand);
var KeyCommand_default = ForwardRef673;

// node_modules/iconoir-react/dist/esm/KeyframeAlignCenter.mjs
var React675 = __toESM(require_react(), 1);
var __assign674 = function() {
  __assign674 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign674.apply(this, arguments);
};
function SvgKeyframeAlignCenter(passedProps, svgRef) {
  var context = React675.useContext(IconoirContext);
  var props = __assign674(__assign674({}, context), passedProps);
  return React675.createElement(
    "svg",
    __assign674({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React675.createElement("path", { d: "M16.68 12.384l-4.22 5.063a.6.6 0 01-.92 0l-4.22-5.063a.6.6 0 010-.768l4.22-5.063a.6.6 0 01.92 0l4.22 5.063a.6.6 0 010 .768zM12 22v-2M12 4V2M4 12H2M22 12h-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef674 = React675.forwardRef(SvgKeyframeAlignCenter);
var KeyframeAlignCenter_default = ForwardRef674;

// node_modules/iconoir-react/dist/esm/KeyframeAlignHorizontal.mjs
var React676 = __toESM(require_react(), 1);
var __assign675 = function() {
  __assign675 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign675.apply(this, arguments);
};
function SvgKeyframeAlignHorizontal(passedProps, svgRef) {
  var context = React676.useContext(IconoirContext);
  var props = __assign675(__assign675({}, context), passedProps);
  return React676.createElement(
    "svg",
    __assign675({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React676.createElement("path", { d: "M16.68 12.384l-4.22 5.063a.6.6 0 01-.92 0l-4.22-5.063a.6.6 0 010-.768l4.22-5.063a.6.6 0 01.92 0l4.22 5.063a.6.6 0 010 .768zM4 12H2M22 12h-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef675 = React676.forwardRef(SvgKeyframeAlignHorizontal);
var KeyframeAlignHorizontal_default = ForwardRef675;

// node_modules/iconoir-react/dist/esm/KeyframeAlignVertical.mjs
var React677 = __toESM(require_react(), 1);
var __assign676 = function() {
  __assign676 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign676.apply(this, arguments);
};
function SvgKeyframeAlignVertical(passedProps, svgRef) {
  var context = React677.useContext(IconoirContext);
  var props = __assign676(__assign676({}, context), passedProps);
  return React677.createElement(
    "svg",
    __assign676({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React677.createElement("path", { d: "M16.68 12.384l-4.22 5.063a.6.6 0 01-.92 0l-4.22-5.063a.6.6 0 010-.768l4.22-5.063a.6.6 0 01.92 0l4.22 5.063a.6.6 0 010 .768zM12 22v-2M12 4V2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef676 = React677.forwardRef(SvgKeyframeAlignVertical);
var KeyframeAlignVertical_default = ForwardRef676;

// node_modules/iconoir-react/dist/esm/KeyframePosition.mjs
var React678 = __toESM(require_react(), 1);
var __assign677 = function() {
  __assign677 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign677.apply(this, arguments);
};
function SvgKeyframePosition(passedProps, svgRef) {
  var context = React678.useContext(IconoirContext);
  var props = __assign677(__assign677({}, context), passedProps);
  return React678.createElement(
    "svg",
    __assign677({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React678.createElement("path", { d: "M16.68 9.384l-4.22 5.063a.6.6 0 01-.92 0L7.32 9.384a.6.6 0 010-.768l4.22-5.063a.6.6 0 01.92 0l4.22 5.063a.6.6 0 010 .768zM3 20h9m9 0h-9m0 0v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef677 = React678.forwardRef(SvgKeyframePosition);
var KeyframePosition_default = ForwardRef677;

// node_modules/iconoir-react/dist/esm/Keyframe.mjs
var React679 = __toESM(require_react(), 1);
var __assign678 = function() {
  __assign678 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign678.apply(this, arguments);
};
function SvgKeyframe(passedProps, svgRef) {
  var context = React679.useContext(IconoirContext);
  var props = __assign678(__assign678({}, context), passedProps);
  return React679.createElement(
    "svg",
    __assign678({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React679.createElement("path", { d: "M20.777 13.345l-7.297 8.027a2 2 0 01-2.96 0l-7.297-8.027a2 2 0 010-2.69l7.297-8.027a2 2 0 012.96 0l7.297 8.027a2 2 0 010 2.69z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef678 = React679.forwardRef(SvgKeyframe);
var Keyframe_default = ForwardRef678;

// node_modules/iconoir-react/dist/esm/KeyframesCouple.mjs
var React680 = __toESM(require_react(), 1);
var __assign679 = function() {
  __assign679 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign679.apply(this, arguments);
};
function SvgKeyframesCouple(passedProps, svgRef) {
  var context = React680.useContext(IconoirContext);
  var props = __assign679(__assign679({}, context), passedProps);
  return React680.createElement(
    "svg",
    __assign679({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React680.createElement("path", { d: "M15.819 13.329l-5.324 5.99a2 2 0 01-2.99 0l-5.324-5.99a2 2 0 010-2.658l5.324-5.99a2 2 0 012.99 0l5.324 5.99a2 2 0 010 2.658z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React680.createElement("path", { d: "M12 6.375l1.505-1.693a2 2 0 012.99 0l5.324 5.99a2 2 0 010 2.657l-5.324 5.99a2 2 0 01-2.99 0L12 17.624", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef679 = React680.forwardRef(SvgKeyframesCouple);
var KeyframesCouple_default = ForwardRef679;

// node_modules/iconoir-react/dist/esm/Keyframes.mjs
var React681 = __toESM(require_react(), 1);
var __assign680 = function() {
  __assign680 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign680.apply(this, arguments);
};
function SvgKeyframes(passedProps, svgRef) {
  var context = React681.useContext(IconoirContext);
  var props = __assign680(__assign680({}, context), passedProps);
  return React681.createElement(
    "svg",
    __assign680({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React681.createElement("path", { d: "M13.848 13.317L9.505 18.28a2 2 0 01-3.01 0l-4.343-4.963a2 2 0 010-2.634L6.495 5.72a2 2 0 013.01 0l4.343 4.963a2 2 0 010 2.634z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React681.createElement("path", { d: "M13 19l4.884-5.698a2 2 0 000-2.604L13 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React681.createElement("path", { d: "M17 19l4.884-5.698a2 2 0 000-2.604L17 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef680 = React681.forwardRef(SvgKeyframes);
var Keyframes_default = ForwardRef680;

// node_modules/iconoir-react/dist/esm/Label.mjs
var React682 = __toESM(require_react(), 1);
var __assign681 = function() {
  __assign681 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign681.apply(this, arguments);
};
function SvgLabel(passedProps, svgRef) {
  var context = React682.useContext(IconoirContext);
  var props = __assign681(__assign681({}, context), passedProps);
  return React682.createElement(
    "svg",
    __assign681({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React682.createElement("path", { d: "M3 17.4V6.6a.6.6 0 01.6-.6h13.079c.2 0 .388.1.5.267l3.6 5.4a.6.6 0 010 .666l-3.6 5.4a.6.6 0 01-.5.267H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef681 = React682.forwardRef(SvgLabel);
var Label_default = ForwardRef681;

// node_modules/iconoir-react/dist/esm/Lamp.mjs
var React683 = __toESM(require_react(), 1);
var __assign682 = function() {
  __assign682 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign682.apply(this, arguments);
};
function SvgLamp(passedProps, svgRef) {
  var context = React683.useContext(IconoirContext);
  var props = __assign682(__assign682({}, context), passedProps);
  return React683.createElement(
    "svg",
    __assign682({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React683.createElement("path", { d: "M9 21h3m3 0h-3m0 0V11m0-4v4m0 0H6l3-8h6l3 8h-6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef682 = React683.forwardRef(SvgLamp);
var Lamp_default = ForwardRef682;

// node_modules/iconoir-react/dist/esm/Language.mjs
var React684 = __toESM(require_react(), 1);
var __assign683 = function() {
  __assign683 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign683.apply(this, arguments);
};
function SvgLanguage(passedProps, svgRef) {
  var context = React684.useContext(IconoirContext);
  var props = __assign683(__assign683({}, context), passedProps);
  return React684.createElement(
    "svg",
    __assign683({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React684.createElement("path", { d: "M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React684.createElement("path", { d: "M13 2.05S16 6 16 12c0 6-3 9.95-3 9.95M11 21.95S8 18 8 12c0-6 3-9.95 3-9.95M2.63 15.5h18.74M2.63 8.5h18.74", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef683 = React684.forwardRef(SvgLanguage);
var Language_default = ForwardRef683;

// node_modules/iconoir-react/dist/esm/LaptopCharging.mjs
var React685 = __toESM(require_react(), 1);
var __assign684 = function() {
  __assign684 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign684.apply(this, arguments);
};
function SvgLaptopCharging(passedProps, svgRef) {
  var context = React685.useContext(IconoirContext);
  var props = __assign684(__assign684({}, context), passedProps);
  return React685.createElement(
    "svg",
    __assign684({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React685.createElement("path", { d: "M3.2 14.222V4a2 2 0 012-2h13.6a2 2 0 012 2v10.222m-17.6 0h17.6m-17.6 0l-1.48 5.234A2 2 0 003.644 22h16.712a2 2 0 001.924-2.544l-1.48-5.234", stroke: "currentColor" }),
    React685.createElement("path", { d: "M11.667 5L10 8h4l-1.667 3M11 19h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef684 = React685.forwardRef(SvgLaptopCharging);
var LaptopCharging_default = ForwardRef684;

// node_modules/iconoir-react/dist/esm/LaptopFix.mjs
var React686 = __toESM(require_react(), 1);
var __assign685 = function() {
  __assign685 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign685.apply(this, arguments);
};
function SvgLaptopFix(passedProps, svgRef) {
  var context = React686.useContext(IconoirContext);
  var props = __assign685(__assign685({}, context), passedProps);
  return React686.createElement(
    "svg",
    __assign685({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React686.createElement("path", { d: "M20.8 14.222H3.654a.6.6 0 00-.578.437L1.72 19.456A2 2 0 003.644 22h16.712a2 2 0 001.924-2.544l-1.48-5.234zm0 0v-6.11M3.2 14.222V4a2 2 0 012-2H12M11 19h2M17.657 4.828l-2.829 2.829M20.485 4.828A2 2 0 1117.657 2M14.828 10.485A2 2 0 0012 7.657", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef685 = React686.forwardRef(SvgLaptopFix);
var LaptopFix_default = ForwardRef685;

// node_modules/iconoir-react/dist/esm/LaptopIssue.mjs
var React687 = __toESM(require_react(), 1);
var __assign686 = function() {
  __assign686 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign686.apply(this, arguments);
};
function SvgLaptopIssue(passedProps, svgRef) {
  var context = React687.useContext(IconoirContext);
  var props = __assign686(__assign686({}, context), passedProps);
  return React687.createElement(
    "svg",
    __assign686({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React687.createElement("path", { d: "M3.2 14.222V4a2 2 0 012-2h13.6a2 2 0 012 2v10.222m-17.6 0h17.6m-17.6 0l-1.48 5.234A2 2 0 003.644 22h16.712a2 2 0 001.924-2.544l-1.48-5.234", stroke: "currentColor" }),
    React687.createElement("path", { d: "M12 5v3M12 11.01l.01-.011M11 19h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef686 = React687.forwardRef(SvgLaptopIssue);
var LaptopIssue_default = ForwardRef686;

// node_modules/iconoir-react/dist/esm/Laptop.mjs
var React688 = __toESM(require_react(), 1);
var __assign687 = function() {
  __assign687 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign687.apply(this, arguments);
};
function SvgLaptop(passedProps, svgRef) {
  var context = React688.useContext(IconoirContext);
  var props = __assign687(__assign687({}, context), passedProps);
  return React688.createElement(
    "svg",
    __assign687({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React688.createElement("path", { d: "M3.2 14.222V4a2 2 0 012-2h13.6a2 2 0 012 2v10.222m-17.6 0h17.6m-17.6 0l-1.48 5.234A2 2 0 003.644 22h16.712a2 2 0 001.924-2.544l-1.48-5.234", stroke: "currentColor" }),
    React688.createElement("path", { d: "M11 19h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef687 = React688.forwardRef(SvgLaptop);
var Laptop_default = ForwardRef687;

// node_modules/iconoir-react/dist/esm/LargeSuitcase.mjs
var React689 = __toESM(require_react(), 1);
var __assign688 = function() {
  __assign688 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign688.apply(this, arguments);
};
function SvgLargeSuitcase(passedProps, svgRef) {
  var context = React689.useContext(IconoirContext);
  var props = __assign688(__assign688({}, context), passedProps);
  return React689.createElement(
    "svg",
    __assign688({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React689.createElement("path", { d: "M8 7H4a2 2 0 00-2 2v10a2 2 0 002 2h16a2 2 0 002-2V9a2 2 0 00-2-2h-4M8 7V3.6a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6V7M8 7h8", stroke: "currentColor" })
  );
}
var ForwardRef688 = React689.forwardRef(SvgLargeSuitcase);
var LargeSuitcase_default = ForwardRef688;

// node_modules/iconoir-react/dist/esm/LayoutLeft.mjs
var React690 = __toESM(require_react(), 1);
var __assign689 = function() {
  __assign689 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign689.apply(this, arguments);
};
function SvgLayoutLeft(passedProps, svgRef) {
  var context = React690.useContext(IconoirContext);
  var props = __assign689(__assign689({}, context), passedProps);
  return React690.createElement(
    "svg",
    __assign689({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React690.createElement("path", { d: "M3.6 3h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6zM9.75 9.75V21M3 9.75h18", stroke: "currentColor" })
  );
}
var ForwardRef689 = React690.forwardRef(SvgLayoutLeft);
var LayoutLeft_default = ForwardRef689;

// node_modules/iconoir-react/dist/esm/LayoutRight.mjs
var React691 = __toESM(require_react(), 1);
var __assign690 = function() {
  __assign690 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign690.apply(this, arguments);
};
function SvgLayoutRight(passedProps, svgRef) {
  var context = React691.useContext(IconoirContext);
  var props = __assign690(__assign690({}, context), passedProps);
  return React691.createElement(
    "svg",
    __assign690({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React691.createElement("path", { d: "M20.4 3H3.6a.6.6 0 00-.6.6v16.8a.6.6 0 00.6.6h16.8a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6zM14.25 9.75V21M21 9.75H3", stroke: "currentColor" })
  );
}
var ForwardRef690 = React691.forwardRef(SvgLayoutRight);
var LayoutRight_default = ForwardRef690;

// node_modules/iconoir-react/dist/esm/LeaderboardStar.mjs
var React692 = __toESM(require_react(), 1);
var __assign691 = function() {
  __assign691 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign691.apply(this, arguments);
};
function SvgLeaderboardStar(passedProps, svgRef) {
  var context = React692.useContext(IconoirContext);
  var props = __assign691(__assign691({}, context), passedProps);
  return React692.createElement(
    "svg",
    __assign691({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React692.createElement("path", { d: "M15 21H9v-8.4a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6V21zM20.4 21H15v-2.9a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6zM9 21v-4.9a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6v4.3a.6.6 0 00.6.6H9zM10.806 5.113l.909-1.927a.312.312 0 01.57 0l.91 1.927 2.032.311c.261.04.365.376.176.568l-1.47 1.5.347 2.118c.044.272-.228.48-.462.351l-1.818-1-1.818 1c-.233.128-.506-.079-.462-.351l.347-2.118-1.47-1.5c-.19-.192-.085-.528.175-.568l2.034-.31z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef691 = React692.forwardRef(SvgLeaderboardStar);
var LeaderboardStar_default = ForwardRef691;

// node_modules/iconoir-react/dist/esm/Leaderboard.mjs
var React693 = __toESM(require_react(), 1);
var __assign692 = function() {
  __assign692 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign692.apply(this, arguments);
};
function SvgLeaderboard(passedProps, svgRef) {
  var context = React693.useContext(IconoirContext);
  var props = __assign692(__assign692({}, context), passedProps);
  return React693.createElement(
    "svg",
    __assign692({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React693.createElement("path", { d: "M15 19H9V8.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6V19zM15 5H9M20.4 19H15v-3.9a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6v3.3a.6.6 0 01-.6.6zM9 19v-5.9a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6v5.3a.6.6 0 00.6.6H9z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef692 = React693.forwardRef(SvgLeaderboard);
var Leaderboard_default = ForwardRef692;

// node_modules/iconoir-react/dist/esm/Leaf.mjs
var React694 = __toESM(require_react(), 1);
var __assign693 = function() {
  __assign693 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign693.apply(this, arguments);
};
function SvgLeaf(passedProps, svgRef) {
  var context = React694.useContext(IconoirContext);
  var props = __assign693(__assign693({}, context), passedProps);
  return React694.createElement(
    "svg",
    __assign693({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React694.createElement("path", { d: "M7 21s.5-4.5 4-8.5M19.13 4.242l.594 6.175c.374 3.886-2.54 7.346-6.425 7.72-3.813.367-7.267-2.42-7.634-6.233a6.936 6.936 0 016.239-7.569l6.571-.632a.6.6 0 01.655.54z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef693 = React694.forwardRef(SvgLeaf);
var Leaf_default = ForwardRef693;

// node_modules/iconoir-react/dist/esm/Learning.mjs
var React695 = __toESM(require_react(), 1);
var __assign694 = function() {
  __assign694 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign694.apply(this, arguments);
};
function SvgLearning(passedProps, svgRef) {
  var context = React695.useContext(IconoirContext);
  var props = __assign694(__assign694({}, context), passedProps);
  return React695.createElement(
    "svg",
    __assign694({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React695.createElement("path", { d: "M6.818 22v-2.857C6.52 16.166 3 14.572 3 10c0-4.57 2.727-8.056 8.182-8 3.927.042 7.636 2.286 7.636 6.858L21 12.286c0 2.286-2.182 2.286-2.182 2.286s.546 5.714-4.364 5.714V22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React695.createElement("path", { d: "M11 12a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React695.createElement("path", { d: "M11 13a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "0.3 2" })
  );
}
var ForwardRef694 = React695.forwardRef(SvgLearning);
var Learning_default = ForwardRef694;

// node_modules/iconoir-react/dist/esm/LeftRoundArrow.mjs
var React696 = __toESM(require_react(), 1);
var __assign695 = function() {
  __assign695 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign695.apply(this, arguments);
};
function SvgLeftRoundArrow(passedProps, svgRef) {
  var context = React696.useContext(IconoirContext);
  var props = __assign695(__assign695({}, context), passedProps);
  return React696.createElement(
    "svg",
    __assign695({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React696.createElement("path", { d: "M16.75 12h-10m0 0l2.75 2.75M6.75 12L9.5 9.25", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React696.createElement("path", { d: "M2 15V9a4 4 0 014-4h12a4 4 0 014 4v6a4 4 0 01-4 4H6a4 4 0 01-4-4z", stroke: "currentColor" })
  );
}
var ForwardRef695 = React696.forwardRef(SvgLeftRoundArrow);
var LeftRoundArrow_default = ForwardRef695;

// node_modules/iconoir-react/dist/esm/Lens.mjs
var React697 = __toESM(require_react(), 1);
var __assign696 = function() {
  __assign696 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign696.apply(this, arguments);
};
function SvgLens(passedProps, svgRef) {
  var context = React697.useContext(IconoirContext);
  var props = __assign696(__assign696({}, context), passedProps);
  return React697.createElement(
    "svg",
    __assign696({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React697.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM17.197 9c-.1-.172-.207-.34-.323-.5M17.811 13.5a6.01 6.01 0 01-4.311 4.311", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef696 = React697.forwardRef(SvgLens);
var Lens_default = ForwardRef696;

// node_modules/iconoir-react/dist/esm/Lifebelt.mjs
var React698 = __toESM(require_react(), 1);
var __assign697 = function() {
  __assign697 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign697.apply(this, arguments);
};
function SvgLifebelt(passedProps, svgRef) {
  var context = React698.useContext(IconoirContext);
  var props = __assign697(__assign697({}, context), passedProps);
  return React698.createElement(
    "svg",
    __assign697({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React698.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React698.createElement("path", { d: "M8 12a4 4 0 108 0 4 4 0 00-8 0zM9.235 14.89L5 19M14.765 14.89L19 19M14.765 9.11L19 5M9.235 9.11L5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef697 = React698.forwardRef(SvgLifebelt);
var Lifebelt_default = ForwardRef697;

// node_modules/iconoir-react/dist/esm/LightBulbOff.mjs
var React699 = __toESM(require_react(), 1);
var __assign698 = function() {
  __assign698 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign698.apply(this, arguments);
};
function SvgLightBulbOff(passedProps, svgRef) {
  var context = React699.useContext(IconoirContext);
  var props = __assign698(__assign698({}, context), passedProps);
  return React699.createElement(
    "svg",
    __assign698({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React699.createElement("path", { d: "M9 18h6M10 21h4M16.5 11.5c1-1 1.477-2.013 1.5-3.5.048-3.05-2-5-6-5-1.168 0-2.169.166-3 .477M9 15c0-2-.5-2.5-1.5-3.5S6.023 9.487 6 8a5.618 5.618 0 01.168-1.5M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef698 = React699.forwardRef(SvgLightBulbOff);
var LightBulbOff_default = ForwardRef698;

// node_modules/iconoir-react/dist/esm/LightBulbOn.mjs
var React700 = __toESM(require_react(), 1);
var __assign699 = function() {
  __assign699 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign699.apply(this, arguments);
};
function SvgLightBulbOn(passedProps, svgRef) {
  var context = React700.useContext(IconoirContext);
  var props = __assign699(__assign699({}, context), passedProps);
  return React700.createElement(
    "svg",
    __assign699({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React700.createElement("path", { d: "M21 2l-1 1M3 2l1 1M21 16l-1-1M3 16l1-1M9 18h6M10 21h4M12 3C8 3 5.952 4.95 6 8c.023 1.487.5 2.5 1.5 3.5S9 13 9 15h6c0-2 .5-2.5 1.5-3.5h0c1-1 1.477-2.013 1.5-3.5.048-3.05-2-5-6-5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef699 = React700.forwardRef(SvgLightBulbOn);
var LightBulbOn_default = ForwardRef699;

// node_modules/iconoir-react/dist/esm/LightBulb.mjs
var React701 = __toESM(require_react(), 1);
var __assign700 = function() {
  __assign700 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign700.apply(this, arguments);
};
function SvgLightBulb(passedProps, svgRef) {
  var context = React701.useContext(IconoirContext);
  var props = __assign700(__assign700({}, context), passedProps);
  return React701.createElement(
    "svg",
    __assign700({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React701.createElement("path", { d: "M9 18h6M10 21h4M9 15c.001-2-.499-2.5-1.5-3.5-1-1-1.476-2.013-1.5-3.5-.047-3.05 2-5 6-5 4.001 0 6.049 1.95 6 5-.023 1.487-.5 2.5-1.5 3.5-.999 1-1.499 1.5-1.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef700 = React701.forwardRef(SvgLightBulb);
var LightBulb_default = ForwardRef700;

// node_modules/iconoir-react/dist/esm/LineSpace.mjs
var React702 = __toESM(require_react(), 1);
var __assign701 = function() {
  __assign701 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign701.apply(this, arguments);
};
function SvgLineSpace(passedProps, svgRef) {
  var context = React702.useContext(IconoirContext);
  var props = __assign701(__assign701({}, context), passedProps);
  return React702.createElement(
    "svg",
    __assign701({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React702.createElement("path", { d: "M11 6h10M11 12h10M11 18h10M5 19V5m0 14l-2-2.5M5 19l2-2.5M5 5L3 7m2-2l2 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef701 = React702.forwardRef(SvgLineSpace);
var LineSpace_default = ForwardRef701;

// node_modules/iconoir-react/dist/esm/Linear.mjs
var React703 = __toESM(require_react(), 1);
var __assign702 = function() {
  __assign702 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign702.apply(this, arguments);
};
function SvgLinear(passedProps, svgRef) {
  var context = React703.useContext(IconoirContext);
  var props = __assign702(__assign702({}, context), passedProps);
  return React703.createElement(
    "svg",
    __assign702({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React703.createElement("path", { d: "M3 20L21 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef702 = React703.forwardRef(SvgLinear);
var Linear_default = ForwardRef702;

// node_modules/iconoir-react/dist/esm/Link.mjs
var React704 = __toESM(require_react(), 1);
var __assign703 = function() {
  __assign703 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign703.apply(this, arguments);
};
function SvgLink(passedProps, svgRef) {
  var context = React704.useContext(IconoirContext);
  var props = __assign703(__assign703({}, context), passedProps);
  return React704.createElement(
    "svg",
    __assign703({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React704.createElement("path", { d: "M14 11.998C14 9.506 11.683 7 8.857 7H7.143C4.303 7 2 9.238 2 11.998c0 2.378 1.71 4.368 4 4.873a5.3 5.3 0 001.143.124", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React704.createElement("path", { d: "M10 11.998c0 2.491 2.317 4.997 5.143 4.997h1.714c2.84 0 5.143-2.237 5.143-4.997 0-2.379-1.71-4.37-4-4.874A5.304 5.304 0 0016.857 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef703 = React704.forwardRef(SvgLink);
var Link_default = ForwardRef703;

// node_modules/iconoir-react/dist/esm/LinkedIn.mjs
var React705 = __toESM(require_react(), 1);
var __assign704 = function() {
  __assign704 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign704.apply(this, arguments);
};
function SvgLinkedIn(passedProps, svgRef) {
  var context = React705.useContext(IconoirContext);
  var props = __assign704(__assign704({}, context), passedProps);
  return React705.createElement(
    "svg",
    __assign704({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React705.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5zM7 17v-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React705.createElement("path", { d: "M11 17v-3.25M11 10v3.75m0 0c0-3.75 6-3.75 6 0V17M7 7.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef704 = React705.forwardRef(SvgLinkedIn);
var LinkedIn_default = ForwardRef704;

// node_modules/iconoir-react/dist/esm/Linux.mjs
var React706 = __toESM(require_react(), 1);
var __assign705 = function() {
  __assign705 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign705.apply(this, arguments);
};
function SvgLinux(passedProps, svgRef) {
  var context = React706.useContext(IconoirContext);
  var props = __assign705(__assign705({}, context), passedProps);
  return React706.createElement(
    "svg",
    __assign705({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React706.createElement("path", { d: "M2.5 20c1 0 2-.8 2-2v-7c0-3.5 3.1-7 7.5-7M21.5 20c-1 0-2-.8-2-2v-7c0-3.5-3.1-7-7.5-7", stroke: "currentColor", strokeLinecap: "round" }),
    React706.createElement("path", { d: "M12 19c2.761 0 5-1.12 5-2.5S14.761 14 12 14s-5 1.12-5 2.5S9.239 19 12 19z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React706.createElement("path", { d: "M7.75 15c-.463-.635-.75-1.52-.75-2.5C7 10.567 8.12 9 9.5 9s2.5 1.567 2.5 3.5c0 .455-.062.89-.175 1.29M16.25 15c.463-.635.75-1.52.75-2.5 0-1.933-1.12-3.5-2.5-3.5S12 10.567 12 12.5c0 .455.062.89.175 1.29M9.5 12v2M14.5 12v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef705 = React706.forwardRef(SvgLinux);
var Linux_default = ForwardRef705;

// node_modules/iconoir-react/dist/esm/ListSelect.mjs
var React707 = __toESM(require_react(), 1);
var __assign706 = function() {
  __assign706 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign706.apply(this, arguments);
};
function SvgListSelect(passedProps, svgRef) {
  var context = React707.useContext(IconoirContext);
  var props = __assign706(__assign706({}, context), passedProps);
  return React707.createElement(
    "svg",
    __assign706({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React707.createElement("path", { d: "M9 6h11M5 6.01l.01-.011M5 12.01l.01-.011M3.8 17.8l.8.8 2-2M9 12h11M9 18h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef706 = React707.forwardRef(SvgListSelect);
var ListSelect_default = ForwardRef706;

// node_modules/iconoir-react/dist/esm/List.mjs
var React708 = __toESM(require_react(), 1);
var __assign707 = function() {
  __assign707 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign707.apply(this, arguments);
};
function SvgList(passedProps, svgRef) {
  var context = React708.useContext(IconoirContext);
  var props = __assign707(__assign707({}, context), passedProps);
  return React708.createElement(
    "svg",
    __assign707({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React708.createElement("path", { d: "M8 6h12M4 6.01l.01-.011M4 12.01l.01-.011M4 18.01l.01-.011M8 12h12M8 18h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef707 = React708.forwardRef(SvgList);
var List_default = ForwardRef707;

// node_modules/iconoir-react/dist/esm/LitecoinCircle.mjs
var React709 = __toESM(require_react(), 1);
var __assign708 = function() {
  __assign708 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign708.apply(this, arguments);
};
function SvgLitecoinCircle(passedProps, svgRef) {
  var context = React709.useContext(IconoirContext);
  var props = __assign708(__assign708({}, context), passedProps);
  return React709.createElement(
    "svg",
    __assign708({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React709.createElement("path", { d: "M10.5 7v9.4a.6.6 0 00.6.6h4.4", stroke: "currentColor", strokeLinecap: "round" }),
    React709.createElement("path", { d: "M8.5 13l4.5-2M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef708 = React709.forwardRef(SvgLitecoinCircle);
var LitecoinCircle_default = ForwardRef708;

// node_modules/iconoir-react/dist/esm/LitecoinRotateOut.mjs
var React710 = __toESM(require_react(), 1);
var __assign709 = function() {
  __assign709 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign709.apply(this, arguments);
};
function SvgLitecoinRotateOut(passedProps, svgRef) {
  var context = React710.useContext(IconoirContext);
  var props = __assign709(__assign709({}, context), passedProps);
  return React710.createElement(
    "svg",
    __assign709({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React710.createElement("path", { d: "M21.168 8A10.003 10.003 0 0012 2C6.815 2 2.55 5.947 2.05 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React710.createElement("path", { d: "M18 8h3.4a.6.6 0 00.6-.6V4M2.881 16c1.544 3.532 5.068 6 9.168 6 5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React710.createElement("path", { d: "M6.05 16h-3.4a.6.6 0 00-.6.6V20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React710.createElement("path", { d: "M10.5 7v9.4a.6.6 0 00.6.6h4.4", stroke: "currentColor", strokeLinecap: "round" }),
    React710.createElement("path", { d: "M8.5 13l4.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef709 = React710.forwardRef(SvgLitecoinRotateOut);
var LitecoinRotateOut_default = ForwardRef709;

// node_modules/iconoir-react/dist/esm/LoadActionFloppy.mjs
var React711 = __toESM(require_react(), 1);
var __assign710 = function() {
  __assign710 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign710.apply(this, arguments);
};
function SvgLoadActionFloppy(passedProps, svgRef) {
  var context = React711.useContext(IconoirContext);
  var props = __assign710(__assign710({}, context), passedProps);
  return React711.createElement(
    "svg",
    __assign710({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React711.createElement("path", { d: "M3 6.5V5a2 2 0 012-2h11.172a2 2 0 011.414.586l2.828 2.828A2 2 0 0121 7.828V19a2 2 0 01-2 2H5a2 2 0 01-2-2v-1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React711.createElement("path", { d: "M8 3h8v5.4a.6.6 0 01-.6.6H8.6a.6.6 0 01-.6-.6V3zM18 21v-7.4a.6.6 0 00-.6-.6H15M6 21v-3.5M12 12H1m0 0l3-3m-3 3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef710 = React711.forwardRef(SvgLoadActionFloppy);
var LoadActionFloppy_default = ForwardRef710;

// node_modules/iconoir-react/dist/esm/LockKey.mjs
var React712 = __toESM(require_react(), 1);
var __assign711 = function() {
  __assign711 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign711.apply(this, arguments);
};
function SvgLockKey(passedProps, svgRef) {
  var context = React712.useContext(IconoirContext);
  var props = __assign711(__assign711({}, context), passedProps);
  return React712.createElement(
    "svg",
    __assign711({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React712.createElement("path", { d: "M14.667 12h.733a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6H8.6a.6.6 0 01-.6-.6v-3.8a.6.6 0 01.6-.6h.733m5.334 0V9.5c0-.833-.534-2.5-2.667-2.5S9.333 8.667 9.333 9.5V12m5.334 0H9.333", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React712.createElement("path", { d: "M3 19V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" })
  );
}
var ForwardRef711 = React712.forwardRef(SvgLockKey);
var LockKey_default = ForwardRef711;

// node_modules/iconoir-react/dist/esm/Lock.mjs
var React713 = __toESM(require_react(), 1);
var __assign712 = function() {
  __assign712 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign712.apply(this, arguments);
};
function SvgLock(passedProps, svgRef) {
  var context = React713.useContext(IconoirContext);
  var props = __assign712(__assign712({}, context), passedProps);
  return React713.createElement(
    "svg",
    __assign712({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React713.createElement("path", { d: "M16 12h1.4a.6.6 0 01.6.6v6.8a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6v-6.8a.6.6 0 01.6-.6H8m8 0V8c0-1.333-.8-4-4-4S8 6.667 8 8v4m8 0H8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef712 = React713.forwardRef(SvgLock);
var Lock_default = ForwardRef712;

// node_modules/iconoir-react/dist/esm/LockedBook.mjs
var React714 = __toESM(require_react(), 1);
var __assign713 = function() {
  __assign713 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign713.apply(this, arguments);
};
function SvgLockedBook(passedProps, svgRef) {
  var context = React714.useContext(IconoirContext);
  var props = __assign713(__assign713({}, context), passedProps);
  return React714.createElement(
    "svg",
    __assign713({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React714.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114", stroke: "currentColor", strokeLinecap: "round" }),
    React714.createElement("path", { d: "M14 10h.4a.6.6 0 01.6.6v2.8a.6.6 0 01-.6.6H9.6a.6.6 0 01-.6-.6v-2.8a.6.6 0 01.6-.6h.4m4 0V8c0-.667-.4-2-2-2s-2 1.333-2 2v2m4 0h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React714.createElement("path", { d: "M6 17h14M6 21h14", stroke: "currentColor", strokeLinecap: "round" }),
    React714.createElement("path", { d: "M6 21a2 2 0 110-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef713 = React714.forwardRef(SvgLockedBook);
var LockedBook_default = ForwardRef713;

// node_modules/iconoir-react/dist/esm/LockedWindow.mjs
var React715 = __toESM(require_react(), 1);
var __assign714 = function() {
  __assign714 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign714.apply(this, arguments);
};
function SvgLockedWindow(passedProps, svgRef) {
  var context = React715.useContext(IconoirContext);
  var props = __assign714(__assign714({}, context), passedProps);
  return React715.createElement(
    "svg",
    __assign714({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React715.createElement("path", { d: "M14 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v8", stroke: "currentColor", strokeLinecap: "round" }),
    React715.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M21.167 18.5h.233a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 01.6-.6h.233m3.334 0v-1.75c0-.583-.334-1.75-1.667-1.75s-1.667 1.167-1.667 1.75v1.75m3.334 0h-3.334", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef714 = React715.forwardRef(SvgLockedWindow);
var LockedWindow_default = ForwardRef714;

// node_modules/iconoir-react/dist/esm/Loft3D.mjs
var React716 = __toESM(require_react(), 1);
var __assign715 = function() {
  __assign715 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign715.apply(this, arguments);
};
function SvgLoft3D(passedProps, svgRef) {
  var context = React716.useContext(IconoirContext);
  var props = __assign715(__assign715({}, context), passedProps);
  return React716.createElement(
    "svg",
    __assign715({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React716.createElement("path", { d: "M22 17c-9 0-11 6-20 6M22 1C13 1 11 7 2 7M12 16.5v-9m0 9l2.5-2.5M12 16.5L9.5 14M12 7.5l2.5 2.5M12 7.5L9.5 10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef715 = React716.forwardRef(SvgLoft3D);
var Loft3D_default = ForwardRef715;

// node_modules/iconoir-react/dist/esm/LogDenied.mjs
var React717 = __toESM(require_react(), 1);
var __assign716 = function() {
  __assign716 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign716.apply(this, arguments);
};
function SvgLogDenied(passedProps, svgRef) {
  var context = React717.useContext(IconoirContext);
  var props = __assign716(__assign716({}, context), passedProps);
  return React717.createElement(
    "svg",
    __assign716({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React717.createElement("path", { d: "M17.857 9.2a4 4 0 00-5.713 5.6m5.713-5.6a4 4 0 01-5.713 5.6m5.713-5.6l-5.714 5.6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React717.createElement("path", { d: "M19 6V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2h10a2 2 0 002-2v-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef716 = React717.forwardRef(SvgLogDenied);
var LogDenied_default = ForwardRef716;

// node_modules/iconoir-react/dist/esm/LogIn.mjs
var React718 = __toESM(require_react(), 1);
var __assign717 = function() {
  __assign717 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign717.apply(this, arguments);
};
function SvgLogIn(passedProps, svgRef) {
  var context = React718.useContext(IconoirContext);
  var props = __assign717(__assign717({}, context), passedProps);
  return React718.createElement(
    "svg",
    __assign717({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React718.createElement("path", { d: "M19 12h-7m0 0l3 3m-3-3l3-3M19 6V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2h10a2 2 0 002-2v-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef717 = React718.forwardRef(SvgLogIn);
var LogIn_default = ForwardRef717;

// node_modules/iconoir-react/dist/esm/LogOut.mjs
var React719 = __toESM(require_react(), 1);
var __assign718 = function() {
  __assign718 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign718.apply(this, arguments);
};
function SvgLogOut(passedProps, svgRef) {
  var context = React719.useContext(IconoirContext);
  var props = __assign718(__assign718({}, context), passedProps);
  return React719.createElement(
    "svg",
    __assign718({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React719.createElement("path", { d: "M12 12h7m0 0l-3 3m3-3l-3-3M19 6V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2h10a2 2 0 002-2v-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef718 = React719.forwardRef(SvgLogOut);
var LogOut_default = ForwardRef718;

// node_modules/iconoir-react/dist/esm/LongArrowDownLeft.mjs
var React720 = __toESM(require_react(), 1);
var __assign719 = function() {
  __assign719 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign719.apply(this, arguments);
};
function SvgLongArrowDownLeft(passedProps, svgRef) {
  var context = React720.useContext(IconoirContext);
  var props = __assign719(__assign719({}, context), passedProps);
  return React720.createElement(
    "svg",
    __assign719({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React720.createElement("path", { d: "M10.25 19.25l-3.5-3.5 3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React720.createElement("path", { d: "M6.75 15.75h6a4 4 0 004-4v-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef719 = React720.forwardRef(SvgLongArrowDownLeft);
var LongArrowDownLeft_default = ForwardRef719;

// node_modules/iconoir-react/dist/esm/LongArrowDownRight.mjs
var React721 = __toESM(require_react(), 1);
var __assign720 = function() {
  __assign720 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign720.apply(this, arguments);
};
function SvgLongArrowDownRight(passedProps, svgRef) {
  var context = React721.useContext(IconoirContext);
  var props = __assign720(__assign720({}, context), passedProps);
  return React721.createElement(
    "svg",
    __assign720({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React721.createElement("path", { d: "M13.25 19.25l3.5-3.5-3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React721.createElement("path", { d: "M16.75 15.75h-6a4 4 0 01-4-4v-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef720 = React721.forwardRef(SvgLongArrowDownRight);
var LongArrowDownRight_default = ForwardRef720;

// node_modules/iconoir-react/dist/esm/LongArrowLeftDown.mjs
var React722 = __toESM(require_react(), 1);
var __assign721 = function() {
  __assign721 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign721.apply(this, arguments);
};
function SvgLongArrowLeftDown(passedProps, svgRef) {
  var context = React722.useContext(IconoirContext);
  var props = __assign721(__assign721({}, context), passedProps);
  return React722.createElement(
    "svg",
    __assign721({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React722.createElement("path", { d: "M4.5 13.5L8 17l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React722.createElement("path", { d: "M8 17v-6a4 4 0 014-4h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef721 = React722.forwardRef(SvgLongArrowLeftDown);
var LongArrowLeftDown_default = ForwardRef721;

// node_modules/iconoir-react/dist/esm/LongArrowLeftUp.mjs
var React723 = __toESM(require_react(), 1);
var __assign722 = function() {
  __assign722 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign722.apply(this, arguments);
};
function SvgLongArrowLeftUp(passedProps, svgRef) {
  var context = React723.useContext(IconoirContext);
  var props = __assign722(__assign722({}, context), passedProps);
  return React723.createElement(
    "svg",
    __assign722({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React723.createElement("path", { d: "M4.5 10.5L8 7l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React723.createElement("path", { d: "M8 7v6a4 4 0 004 4h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef722 = React723.forwardRef(SvgLongArrowLeftUp);
var LongArrowLeftUp_default = ForwardRef722;

// node_modules/iconoir-react/dist/esm/LongArrowRightDown.mjs
var React724 = __toESM(require_react(), 1);
var __assign723 = function() {
  __assign723 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign723.apply(this, arguments);
};
function SvgLongArrowRightDown(passedProps, svgRef) {
  var context = React724.useContext(IconoirContext);
  var props = __assign723(__assign723({}, context), passedProps);
  return React724.createElement(
    "svg",
    __assign723({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React724.createElement("path", { d: "M19 13.5L15.5 17 12 13.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React724.createElement("path", { d: "M15.5 17v-6a4 4 0 00-4-4h-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef723 = React724.forwardRef(SvgLongArrowRightDown);
var LongArrowRightDown_default = ForwardRef723;

// node_modules/iconoir-react/dist/esm/LongArrowRightUp1.mjs
var React725 = __toESM(require_react(), 1);
var __assign724 = function() {
  __assign724 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign724.apply(this, arguments);
};
function SvgLongArrowRightUp1(passedProps, svgRef) {
  var context = React725.useContext(IconoirContext);
  var props = __assign724(__assign724({}, context), passedProps);
  return React725.createElement(
    "svg",
    __assign724({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React725.createElement("path", { d: "M15.5 7v6a4 4 0 01-4 4h-7m11-10l3.5 3.5M15.5 7L12 10.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef724 = React725.forwardRef(SvgLongArrowRightUp1);
var LongArrowRightUp1_default = ForwardRef724;

// node_modules/iconoir-react/dist/esm/LongArrowRightUp.mjs
var React726 = __toESM(require_react(), 1);
var __assign725 = function() {
  __assign725 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign725.apply(this, arguments);
};
function SvgLongArrowRightUp(passedProps, svgRef) {
  var context = React726.useContext(IconoirContext);
  var props = __assign725(__assign725({}, context), passedProps);
  return React726.createElement(
    "svg",
    __assign725({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React726.createElement("path", { d: "M19 10.5L15.5 7 12 10.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React726.createElement("path", { d: "M15.5 7v6a4 4 0 01-4 4h-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef725 = React726.forwardRef(SvgLongArrowRightUp);
var LongArrowRightUp_default = ForwardRef725;

// node_modules/iconoir-react/dist/esm/LongArrowUpLeft.mjs
var React727 = __toESM(require_react(), 1);
var __assign726 = function() {
  __assign726 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign726.apply(this, arguments);
};
function SvgLongArrowUpLeft(passedProps, svgRef) {
  var context = React727.useContext(IconoirContext);
  var props = __assign726(__assign726({}, context), passedProps);
  return React727.createElement(
    "svg",
    __assign726({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React727.createElement("path", { d: "M10.25 4.75l-3.5 3.5 3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React727.createElement("path", { d: "M6.75 8.25h6a4 4 0 014 4v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef726 = React727.forwardRef(SvgLongArrowUpLeft);
var LongArrowUpLeft_default = ForwardRef726;

// node_modules/iconoir-react/dist/esm/LongArrowUpRight.mjs
var React728 = __toESM(require_react(), 1);
var __assign727 = function() {
  __assign727 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign727.apply(this, arguments);
};
function SvgLongArrowUpRight(passedProps, svgRef) {
  var context = React728.useContext(IconoirContext);
  var props = __assign727(__assign727({}, context), passedProps);
  return React728.createElement(
    "svg",
    __assign727({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React728.createElement("path", { d: "M13.25 4.75l3.5 3.5-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React728.createElement("path", { d: "M16.75 8.25h-6a4 4 0 00-4 4v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef727 = React728.forwardRef(SvgLongArrowUpRight);
var LongArrowUpRight_default = ForwardRef727;

// node_modules/iconoir-react/dist/esm/LotOfCash.mjs
var React729 = __toESM(require_react(), 1);
var __assign728 = function() {
  __assign728 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign728.apply(this, arguments);
};
function SvgLotOfCash(passedProps, svgRef) {
  var context = React729.useContext(IconoirContext);
  var props = __assign728(__assign728({}, context), passedProps);
  return React729.createElement(
    "svg",
    __assign728({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React729.createElement("path", { d: "M4 18v-8a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2H6a2 2 0 01-2-2zM18.5 14.01l.01-.011M7.5 14.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React729.createElement("path", { d: "M4 16H3a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v2M13 16a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef728 = React729.forwardRef(SvgLotOfCash);
var LotOfCash_default = ForwardRef728;

// node_modules/iconoir-react/dist/esm/Lullaby.mjs
var React730 = __toESM(require_react(), 1);
var __assign729 = function() {
  __assign729 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign729.apply(this, arguments);
};
function SvgLullaby(passedProps, svgRef) {
  var context = React730.useContext(IconoirContext);
  var props = __assign729(__assign729({}, context), passedProps);
  return React730.createElement(
    "svg",
    __assign729({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React730.createElement("path", { d: "M3 11.507a9.493 9.493 0 0018 4.219c-8.507 0-12.726-4.22-12.726-12.726A9.494 9.494 0 003 11.507z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React730.createElement("path", { d: "M19 9.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0 0V3.6a.6.6 0 01.6-.6H21", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef729 = React730.forwardRef(SvgLullaby);
var Lullaby_default = ForwardRef729;

// node_modules/iconoir-react/dist/esm/MacControlKey.mjs
var React731 = __toESM(require_react(), 1);
var __assign730 = function() {
  __assign730 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign730.apply(this, arguments);
};
function SvgMacControlKey(passedProps, svgRef) {
  var context = React731.useContext(IconoirContext);
  var props = __assign730(__assign730({}, context), passedProps);
  return React731.createElement(
    "svg",
    __assign730({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React731.createElement("path", { d: "M3 19V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React731.createElement("path", { d: "M8 14l4-4 4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef730 = React731.forwardRef(SvgMacControlKey);
var MacControlKey_default = ForwardRef730;

// node_modules/iconoir-react/dist/esm/MacDock.mjs
var React732 = __toESM(require_react(), 1);
var __assign731 = function() {
  __assign731 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign731.apply(this, arguments);
};
function SvgMacDock(passedProps, svgRef) {
  var context = React732.useContext(IconoirContext);
  var props = __assign731(__assign731({}, context), passedProps);
  return React732.createElement(
    "svg",
    __assign731({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React732.createElement("path", { d: "M8 17a.5.5 0 110-1 .5.5 0 010 1zM12 17a.5.5 0 110-1 .5.5 0 010 1zM16 17a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React732.createElement("path", { d: "M21 21H3a1 1 0 01-1-1V4a1 1 0 011-1h18a1 1 0 011 1v16a1 1 0 01-1 1zM2 17.5l2-1M22 17.5l-2-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef731 = React732.forwardRef(SvgMacDock);
var MacDock_default = ForwardRef731;

// node_modules/iconoir-react/dist/esm/MacOptionKey.mjs
var React733 = __toESM(require_react(), 1);
var __assign732 = function() {
  __assign732 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign732.apply(this, arguments);
};
function SvgMacOptionKey(passedProps, svgRef) {
  var context = React733.useContext(IconoirContext);
  var props = __assign732(__assign732({}, context), passedProps);
  return React733.createElement(
    "svg",
    __assign732({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React733.createElement("path", { d: "M3 19V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React733.createElement("path", { d: "M14 10h3M17 14h-5l-1.667-4H7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef732 = React733.forwardRef(SvgMacOptionKey);
var MacOptionKey_default = ForwardRef732;

// node_modules/iconoir-react/dist/esm/MacOsWindow.mjs
var React734 = __toESM(require_react(), 1);
var __assign733 = function() {
  __assign733 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign733.apply(this, arguments);
};
function SvgMacOsWindow(passedProps, svgRef) {
  var context = React734.useContext(IconoirContext);
  var props = __assign733(__assign733({}, context), passedProps);
  return React734.createElement(
    "svg",
    __assign733({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React734.createElement("path", { d: "M3 17V7a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React734.createElement("path", { d: "M6 8.01l.01-.011M8 8.01l.01-.011M10 8.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef733 = React734.forwardRef(SvgMacOsWindow);
var MacOsWindow_default = ForwardRef733;

// node_modules/iconoir-react/dist/esm/MagicWand.mjs
var React735 = __toESM(require_react(), 1);
var __assign734 = function() {
  __assign734 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign734.apply(this, arguments);
};
function SvgMagicWand(passedProps, svgRef) {
  var context = React735.useContext(IconoirContext);
  var props = __assign734(__assign734({}, context), passedProps);
  return React735.createElement(
    "svg",
    __assign734({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React735.createElement("path", { d: "M3 21l10-10m5-5l-2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React735.createElement("path", { d: "M9.5 2l.945 2.555L13 5.5l-2.555.945L9.5 9l-.945-2.555L6 5.5l2.555-.945L9.5 2zM19 10l.54 1.46L21 12l-1.46.54L19 14l-.54-1.46L17 12l1.46-.54L19 10z", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef734 = React735.forwardRef(SvgMagicWand);
var MagicWand_default = ForwardRef734;

// node_modules/iconoir-react/dist/esm/MagnetEnergy.mjs
var React736 = __toESM(require_react(), 1);
var __assign735 = function() {
  __assign735 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign735.apply(this, arguments);
};
function SvgMagnetEnergy(passedProps, svgRef) {
  var context = React736.useContext(IconoirContext);
  var props = __assign735(__assign735({}, context), passedProps);
  return React736.createElement(
    "svg",
    __assign735({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React736.createElement("path", { d: "M5 9v6.74C5 19.199 8.134 22 12 22s7-2.802 7-6.26V9M5 9h3M16 9h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React736.createElement("path", { d: "M14.074 11.5v3.56c0 1.072-.928 1.94-2.074 1.94s-2.074-.868-2.074-1.94V11.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React736.createElement("path", { d: "M10 13H5M19 13h-5", stroke: "currentColor", strokeLinejoin: "round" }),
    React736.createElement("path", { d: "M11.667 2L10 5h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef735 = React736.forwardRef(SvgMagnetEnergy);
var MagnetEnergy_default = ForwardRef735;

// node_modules/iconoir-react/dist/esm/Magnet.mjs
var React737 = __toESM(require_react(), 1);
var __assign736 = function() {
  __assign736 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign736.apply(this, arguments);
};
function SvgMagnet(passedProps, svgRef) {
  var context = React737.useContext(IconoirContext);
  var props = __assign736(__assign736({}, context), passedProps);
  return React737.createElement(
    "svg",
    __assign736({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React737.createElement("path", { d: "M4 4v8.296C4 16.551 7.582 20 12 20s8-3.45 8-7.704V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React737.createElement("path", { d: "M4 4h5.63v6.818C9.63 12.023 10.69 13 12 13s2.37-.977 2.37-2.182V4H20M9 8H4M20 8h-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef736 = React737.forwardRef(SvgMagnet);
var Magnet_default = ForwardRef736;

// node_modules/iconoir-react/dist/esm/MailIn.mjs
var React738 = __toESM(require_react(), 1);
var __assign737 = function() {
  __assign737 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign737.apply(this, arguments);
};
function SvgMailIn(passedProps, svgRef) {
  var context = React738.useContext(IconoirContext);
  var props = __assign737(__assign737({}, context), passedProps);
  return React738.createElement(
    "svg",
    __assign737({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React738.createElement("path", { d: "M5 9l4.5 3L14 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React738.createElement("path", { d: "M17 19H3a2 2 0 01-2-2V7a2 2 0 012-2h13a2 2 0 012 2v2", stroke: "currentColor", strokeLinecap: "round" }),
    React738.createElement("path", { d: "M23 14h-6m0 0l3-3m-3 3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef737 = React738.forwardRef(SvgMailIn);
var MailIn_default = ForwardRef737;

// node_modules/iconoir-react/dist/esm/MailOpened.mjs
var React739 = __toESM(require_react(), 1);
var __assign738 = function() {
  __assign738 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign738.apply(this, arguments);
};
function SvgMailOpened(passedProps, svgRef) {
  var context = React739.useContext(IconoirContext);
  var props = __assign738(__assign738({}, context), passedProps);
  return React739.createElement(
    "svg",
    __assign738({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React739.createElement("path", { d: "M7 12l5 3.5 5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React739.createElement("path", { d: "M2 20V9.132a2 2 0 01.971-1.715l8-4.8a2 2 0 012.058 0l8 4.8A2 2 0 0122 9.132V20a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" })
  );
}
var ForwardRef738 = React739.forwardRef(SvgMailOpened);
var MailOpened_default = ForwardRef738;

// node_modules/iconoir-react/dist/esm/MailOut.mjs
var React740 = __toESM(require_react(), 1);
var __assign739 = function() {
  __assign739 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign739.apply(this, arguments);
};
function SvgMailOut(passedProps, svgRef) {
  var context = React740.useContext(IconoirContext);
  var props = __assign739(__assign739({}, context), passedProps);
  return React740.createElement(
    "svg",
    __assign739({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React740.createElement("path", { d: "M5 9l4.5 3L14 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React740.createElement("path", { d: "M17 19H3a2 2 0 01-2-2V7a2 2 0 012-2h13a2 2 0 012 2v2", stroke: "currentColor", strokeLinecap: "round" }),
    React740.createElement("path", { d: "M17 14h6m0 0l-3-3m3 3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef739 = React740.forwardRef(SvgMailOut);
var MailOut_default = ForwardRef739;

// node_modules/iconoir-react/dist/esm/Mail.mjs
var React741 = __toESM(require_react(), 1);
var __assign740 = function() {
  __assign740 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign740.apply(this, arguments);
};
function SvgMail(passedProps, svgRef) {
  var context = React741.useContext(IconoirContext);
  var props = __assign740(__assign740({}, context), passedProps);
  return React741.createElement(
    "svg",
    __assign740({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React741.createElement("path", { d: "M7 9l5 3.5L17 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React741.createElement("path", { d: "M2 17V7a2 2 0 012-2h16a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" })
  );
}
var ForwardRef740 = React741.forwardRef(SvgMail);
var Mail_default = ForwardRef740;

// node_modules/iconoir-react/dist/esm/Male.mjs
var React742 = __toESM(require_react(), 1);
var __assign741 = function() {
  __assign741 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign741.apply(this, arguments);
};
function SvgMale(passedProps, svgRef) {
  var context = React742.useContext(IconoirContext);
  var props = __assign741(__assign741({}, context), passedProps);
  return React742.createElement(
    "svg",
    __assign741({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React742.createElement("path", { d: "M14.232 9.747a6 6 0 10-8.465 8.506 6 6 0 008.465-8.506zm0 0L20 4m0 0h-4m4 0v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef741 = React742.forwardRef(SvgMale);
var Male_default = ForwardRef741;

// node_modules/iconoir-react/dist/esm/MapIssue.mjs
var React743 = __toESM(require_react(), 1);
var __assign742 = function() {
  __assign742 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign742.apply(this, arguments);
};
function SvgMapIssue(passedProps, svgRef) {
  var context = React743.useContext(IconoirContext);
  var props = __assign742(__assign742({}, context), passedProps);
  return React743.createElement(
    "svg",
    __assign742({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React743.createElement("path", { d: "M9 19l-5.21 1.737a.6.6 0 01-.79-.57V5.433a.6.6 0 01.41-.569L9 3m0 16l5.21 1.737a.6.6 0 00.79-.57V5.433a.6.6 0 00-.41-.569L9 3m0 16V3M15 5l5.21-1.737a.6.6 0 01.79.57V15M17.121 22.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L17.12 18.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef742 = React743.forwardRef(SvgMapIssue);
var MapIssue_default = ForwardRef742;

// node_modules/iconoir-react/dist/esm/Map.mjs
var React744 = __toESM(require_react(), 1);
var __assign743 = function() {
  __assign743 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign743.apply(this, arguments);
};
function SvgMap(passedProps, svgRef) {
  var context = React744.useContext(IconoirContext);
  var props = __assign743(__assign743({}, context), passedProps);
  return React744.createElement(
    "svg",
    __assign743({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React744.createElement("path", { d: "M9 19l-5.21 1.737a.6.6 0 01-.79-.57V5.433a.6.6 0 01.41-.569L9 3m0 16l6 2m-6-2V3m6 18l5.59-1.863a.6.6 0 00.41-.57V3.832a.6.6 0 00-.79-.569L15 5m0 16V5m0 0L9 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef743 = React744.forwardRef(SvgMap);
var Map_default = ForwardRef743;

// node_modules/iconoir-react/dist/esm/MapsArrowDiagonal.mjs
var React745 = __toESM(require_react(), 1);
var __assign744 = function() {
  __assign744 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign744.apply(this, arguments);
};
function SvgMapsArrowDiagonal(passedProps, svgRef) {
  var context = React745.useContext(IconoirContext);
  var props = __assign744(__assign744({}, context), passedProps);
  return React745.createElement(
    "svg",
    __assign744({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React745.createElement("path", { d: "M4.031 8.917l15.477-4.334a.5.5 0 01.616.617l-4.333 15.476a.5.5 0 01-.94.067l-3.248-7.382a.5.5 0 00-.256-.257L3.965 9.856a.5.5 0 01.066-.94z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef744 = React745.forwardRef(SvgMapsArrowDiagonal);
var MapsArrowDiagonal_default = ForwardRef744;

// node_modules/iconoir-react/dist/esm/MapsArrowIssue.mjs
var React746 = __toESM(require_react(), 1);
var __assign745 = function() {
  __assign745 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign745.apply(this, arguments);
};
function SvgMapsArrowIssue(passedProps, svgRef) {
  var context = React746.useContext(IconoirContext);
  var props = __assign745(__assign745({}, context), passedProps);
  return React746.createElement(
    "svg",
    __assign745({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React746.createElement("path", { d: "M14 17.278l-1.819-.707a.5.5 0 00-.362 0l-7.517 2.923a.5.5 0 01-.617-.711l7.88-14.008a.5.5 0 01.87 0l6.065 10.78M17.121 22.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L17.12 18.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef745 = React746.forwardRef(SvgMapsArrowIssue);
var MapsArrowIssue_default = ForwardRef745;

// node_modules/iconoir-react/dist/esm/MapsArrow.mjs
var React747 = __toESM(require_react(), 1);
var __assign746 = function() {
  __assign746 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign746.apply(this, arguments);
};
function SvgMapsArrow(passedProps, svgRef) {
  var context = React747.useContext(IconoirContext);
  var props = __assign746(__assign746({}, context), passedProps);
  return React747.createElement(
    "svg",
    __assign746({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React747.createElement("path", { d: "M3.685 18.783l7.88-14.008a.5.5 0 01.87 0l7.88 14.008a.5.5 0 01-.617.71l-7.517-2.922a.5.5 0 00-.362 0l-7.517 2.923a.5.5 0 01-.617-.711z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef746 = React747.forwardRef(SvgMapsArrow);
var MapsArrow_default = ForwardRef746;

// node_modules/iconoir-react/dist/esm/MapsGoStraight.mjs
var React748 = __toESM(require_react(), 1);
var __assign747 = function() {
  __assign747 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign747.apply(this, arguments);
};
function SvgMapsGoStraight(passedProps, svgRef) {
  var context = React748.useContext(IconoirContext);
  var props = __assign747(__assign747({}, context), passedProps);
  return React748.createElement(
    "svg",
    __assign747({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React748.createElement("path", { d: "M4.365 19.787l7.303-6.492a.5.5 0 01.664 0l7.303 6.492c.38.338.072.962-.427.864l-7.113-1.382a.498.498 0 00-.19 0l-7.113 1.383c-.499.097-.808-.527-.427-.865zM12 10.5V4m0 0L8 6.5M12 4l4 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef747 = React748.forwardRef(SvgMapsGoStraight);
var MapsGoStraight_default = ForwardRef747;

// node_modules/iconoir-react/dist/esm/MapsTurnBack.mjs
var React749 = __toESM(require_react(), 1);
var __assign748 = function() {
  __assign748 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign748.apply(this, arguments);
};
function SvgMapsTurnBack(passedProps, svgRef) {
  var context = React749.useContext(IconoirContext);
  var props = __assign748(__assign748({}, context), passedProps);
  return React749.createElement(
    "svg",
    __assign748({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React749.createElement("path", { d: "M4.365 19.787l7.303-6.492a.5.5 0 01.664 0l7.303 6.492c.38.338.072.962-.427.864l-7.113-1.382a.498.498 0 00-.19 0l-7.113 1.383c-.499.097-.808-.527-.427-.865zM5.5 11V6v0s0-3.5 3-3.5C12 2.5 12 6 12 6v4.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React749.createElement("path", { d: "M9 7.5L5.5 11 2 7.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef748 = React749.forwardRef(SvgMapsTurnBack);
var MapsTurnBack_default = ForwardRef748;

// node_modules/iconoir-react/dist/esm/MapsTurnLeft.mjs
var React750 = __toESM(require_react(), 1);
var __assign749 = function() {
  __assign749 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign749.apply(this, arguments);
};
function SvgMapsTurnLeft(passedProps, svgRef) {
  var context = React750.useContext(IconoirContext);
  var props = __assign749(__assign749({}, context), passedProps);
  return React750.createElement(
    "svg",
    __assign749({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React750.createElement("path", { d: "M4.365 19.787l7.303-6.492a.5.5 0 01.664 0l7.303 6.492c.38.338.072.962-.427.864l-7.113-1.382a.498.498 0 00-.19 0l-7.113 1.383c-.499.097-.808-.527-.427-.865zM5 6.5h3s0 0 0 0 4 0 4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React750.createElement("path", { d: "M8.5 9L5 6.5 8.5 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef749 = React750.forwardRef(SvgMapsTurnLeft);
var MapsTurnLeft_default = ForwardRef749;

// node_modules/iconoir-react/dist/esm/MapsTurnRight.mjs
var React751 = __toESM(require_react(), 1);
var __assign750 = function() {
  __assign750 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign750.apply(this, arguments);
};
function SvgMapsTurnRight(passedProps, svgRef) {
  var context = React751.useContext(IconoirContext);
  var props = __assign750(__assign750({}, context), passedProps);
  return React751.createElement(
    "svg",
    __assign750({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React751.createElement("path", { d: "M4.365 19.787l7.303-6.492a.5.5 0 01.664 0l7.303 6.492c.38.338.072.962-.427.864l-7.113-1.382a.498.498 0 00-.19 0l-7.113 1.383c-.499.097-.808-.527-.427-.865zM19 6.5h-3s0 0 0 0-4 0-4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React751.createElement("path", { d: "M15.5 9L19 6.5 15.5 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef750 = React751.forwardRef(SvgMapsTurnRight);
var MapsTurnRight_default = ForwardRef750;

// node_modules/iconoir-react/dist/esm/MaskSquare.mjs
var React752 = __toESM(require_react(), 1);
var __assign751 = function() {
  __assign751 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign751.apply(this, arguments);
};
function SvgMaskSquare(passedProps, svgRef) {
  var context = React752.useContext(IconoirContext);
  var props = __assign751(__assign751({}, context), passedProps);
  return React752.createElement(
    "svg",
    __assign751({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React752.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React752.createElement("path", { d: "M10 17.659a6 6 0 004-11.317m-4 11.317a6 6 0 114-11.317m-4 11.317L14 6.34", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef751 = React752.forwardRef(SvgMaskSquare);
var MaskSquare_default = ForwardRef751;

// node_modules/iconoir-react/dist/esm/MastercardCard.mjs
var React753 = __toESM(require_react(), 1);
var __assign752 = function() {
  __assign752 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign752.apply(this, arguments);
};
function SvgMastercardCard(passedProps, svgRef) {
  var context = React753.useContext(IconoirContext);
  var props = __assign752(__assign752({}, context), passedProps);
  return React753.createElement(
    "svg",
    __assign752({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React753.createElement("path", { d: "M22 9v8a2 2 0 01-2 2H4a2 2 0 01-2-2V7a2 2 0 012-2h16a2 2 0 012 2v2zm0 0H6M16.5 13.382a1.5 1.5 0 110 2.236M16.5 13.382a1.5 1.5 0 100 2.236", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef752 = React753.forwardRef(SvgMastercardCard);
var MastercardCard_default = ForwardRef752;

// node_modules/iconoir-react/dist/esm/MathBook.mjs
var React754 = __toESM(require_react(), 1);
var __assign753 = function() {
  __assign753 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign753.apply(this, arguments);
};
function SvgMathBook(passedProps, svgRef) {
  var context = React754.useContext(IconoirContext);
  var props = __assign753(__assign753({}, context), passedProps);
  return React754.createElement(
    "svg",
    __assign753({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React754.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114M6 17h14M6 21h14", stroke: "currentColor", strokeLinecap: "round" }),
    React754.createElement("path", { d: "M6 21a2 2 0 110-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React754.createElement("path", { d: "M10 10h4", stroke: "currentColor", strokeLinecap: "round" }),
    React754.createElement("path", { d: "M12 13.01l.01-.011M12 7.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef753 = React754.forwardRef(SvgMathBook);
var MathBook_default = ForwardRef753;

// node_modules/iconoir-react/dist/esm/Maximize.mjs
var React755 = __toESM(require_react(), 1);
var __assign754 = function() {
  __assign754 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign754.apply(this, arguments);
};
function SvgMaximize(passedProps, svgRef) {
  var context = React755.useContext(IconoirContext);
  var props = __assign754(__assign754({}, context), passedProps);
  return React755.createElement(
    "svg",
    __assign754({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React755.createElement("path", { d: "M7 4H4v3M17 4h3v3M7 20H4v-3M17 20h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef754 = React755.forwardRef(SvgMaximize);
var Maximize_default = ForwardRef754;

// node_modules/iconoir-react/dist/esm/Medal1St.mjs
var React756 = __toESM(require_react(), 1);
var __assign755 = function() {
  __assign755 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign755.apply(this, arguments);
};
function SvgMedal1St(passedProps, svgRef) {
  var context = React756.useContext(IconoirContext);
  var props = __assign755(__assign755({}, context), passedProps);
  return React756.createElement(
    "svg",
    __assign755({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React756.createElement("path", { d: "M14.272 10.445L18 2m-8.684 8.632L5 2m7.761 8.048L8.835 2m5.525 0l-1.04 2.5M6 16a6 6 0 1012 0 6 6 0 00-12 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React756.createElement("path", { d: "M10.5 15l2-1.5v5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef755 = React756.forwardRef(SvgMedal1St);
var Medal1St_default = ForwardRef755;

// node_modules/iconoir-react/dist/esm/Medal.mjs
var React757 = __toESM(require_react(), 1);
var __assign756 = function() {
  __assign756 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign756.apply(this, arguments);
};
function SvgMedal(passedProps, svgRef) {
  var context = React757.useContext(IconoirContext);
  var props = __assign756(__assign756({}, context), passedProps);
  return React757.createElement(
    "svg",
    __assign756({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React757.createElement("path", { d: "M14.272 10.445L18 2m-8.684 8.632L5 2m7.761 8.048L8.835 2m5.525 0l-1.04 2.5M6 16a6 6 0 1012 0 6 6 0 00-12 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef756 = React757.forwardRef(SvgMedal);
var Medal_default = ForwardRef756;

// node_modules/iconoir-react/dist/esm/MediaImageFolder.mjs
var React758 = __toESM(require_react(), 1);
var __assign757 = function() {
  __assign757 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign757.apply(this, arguments);
};
function SvgMediaImageFolder(passedProps, svgRef) {
  var context = React758.useContext(IconoirContext);
  var props = __assign757(__assign757({}, context), passedProps);
  return React758.createElement(
    "svg",
    __assign757({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React758.createElement("path", { d: "M22 12.6v7.8a.6.6 0 01-.6.6h-7.8a.6.6 0 01-.6-.6v-7.8a.6.6 0 01.6-.6h7.8a.6.6 0 01.6.6zM19.5 14.51l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React758.createElement("path", { d: "M13 18.2l3.5-1.2 5.5 2M2 10V3.6a.6.6 0 01.6-.6h6.178a.6.6 0 01.39.144l3.164 2.712a.6.6 0 00.39.144H21.4a.6.6 0 01.6.6V9M2 10v8.4a.6.6 0 00.6.6H10m-8-9h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef757 = React758.forwardRef(SvgMediaImageFolder);
var MediaImageFolder_default = ForwardRef757;

// node_modules/iconoir-react/dist/esm/MediaImageList.mjs
var React759 = __toESM(require_react(), 1);
var __assign758 = function() {
  __assign758 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign758.apply(this, arguments);
};
function SvgMediaImageList(passedProps, svgRef) {
  var context = React759.useContext(IconoirContext);
  var props = __assign758(__assign758({}, context), passedProps);
  return React759.createElement(
    "svg",
    __assign758({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React759.createElement("path", { d: "M21 7.6v12.8a.6.6 0 01-.6.6H7.6a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6h12.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React759.createElement("path", { d: "M18 4H4.6a.6.6 0 00-.6.6V18M7 16.8l5.444-1.8L21 18M16.5 13a1.5 1.5 0 110-3 1.5 1.5 0 010 3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef758 = React759.forwardRef(SvgMediaImageList);
var MediaImageList_default = ForwardRef758;

// node_modules/iconoir-react/dist/esm/MediaImage.mjs
var React760 = __toESM(require_react(), 1);
var __assign759 = function() {
  __assign759 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign759.apply(this, arguments);
};
function SvgMediaImage(passedProps, svgRef) {
  var context = React760.useContext(IconoirContext);
  var props = __assign759(__assign759({}, context), passedProps);
  return React760.createElement(
    "svg",
    __assign759({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React760.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React760.createElement("path", { d: "M3 16l7-3 11 5M16 10a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef759 = React760.forwardRef(SvgMediaImage);
var MediaImage_default = ForwardRef759;

// node_modules/iconoir-react/dist/esm/MediaVideoFolder.mjs
var React761 = __toESM(require_react(), 1);
var __assign760 = function() {
  __assign760 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign760.apply(this, arguments);
};
function SvgMediaVideoFolder(passedProps, svgRef) {
  var context = React761.useContext(IconoirContext);
  var props = __assign760(__assign760({}, context), passedProps);
  return React761.createElement(
    "svg",
    __assign760({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React761.createElement("path", { d: "M22 12.6v7.8a.6.6 0 01-.6.6h-7.8a.6.6 0 01-.6-.6v-7.8a.6.6 0 01.6-.6h7.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React761.createElement("path", { d: "M16.918 14.574a.6.6 0 00-.918.508v2.835a.6.6 0 00.918.51l2.268-1.418a.6.6 0 000-1.018l-2.268-1.417zM2 10V3.6a.6.6 0 01.6-.6h6.178a.6.6 0 01.39.144l3.164 2.712a.6.6 0 00.39.144H21.4a.6.6 0 01.6.6V9M2 10v8.4a.6.6 0 00.6.6H10m-8-9h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef760 = React761.forwardRef(SvgMediaVideoFolder);
var MediaVideoFolder_default = ForwardRef760;

// node_modules/iconoir-react/dist/esm/MediaVideoList.mjs
var React762 = __toESM(require_react(), 1);
var __assign761 = function() {
  __assign761 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign761.apply(this, arguments);
};
function SvgMediaVideoList(passedProps, svgRef) {
  var context = React762.useContext(IconoirContext);
  var props = __assign761(__assign761({}, context), passedProps);
  return React762.createElement(
    "svg",
    __assign761({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React762.createElement("path", { d: "M21 7.6v12.8a.6.6 0 01-.6.6H7.6a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6h12.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React762.createElement("path", { d: "M18 4H4.6a.6.6 0 00-.6.6V18M12.909 11.545a.6.6 0 00-.909.515v3.88a.6.6 0 00.909.515l3.233-1.94a.6.6 0 000-1.03l-3.233-1.94z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef761 = React762.forwardRef(SvgMediaVideoList);
var MediaVideoList_default = ForwardRef761;

// node_modules/iconoir-react/dist/esm/MediaVideo.mjs
var React763 = __toESM(require_react(), 1);
var __assign762 = function() {
  __assign762 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign762.apply(this, arguments);
};
function SvgMediaVideo(passedProps, svgRef) {
  var context = React763.useContext(IconoirContext);
  var props = __assign762(__assign762({}, context), passedProps);
  return React763.createElement(
    "svg",
    __assign762({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React763.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React763.createElement("path", { d: "M9.898 8.513a.6.6 0 00-.898.52v5.933a.6.6 0 00.898.521l5.19-2.966a.6.6 0 000-1.042l-5.19-2.966z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef762 = React763.forwardRef(SvgMediaVideo);
var MediaVideo_default = ForwardRef762;

// node_modules/iconoir-react/dist/esm/MediumPriority.mjs
var React764 = __toESM(require_react(), 1);
var __assign763 = function() {
  __assign763 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign763.apply(this, arguments);
};
function SvgMediumPriority(passedProps, svgRef) {
  var context = React764.useContext(IconoirContext);
  var props = __assign763(__assign763({}, context), passedProps);
  return React764.createElement(
    "svg",
    __assign763({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React764.createElement(
      "g",
      { clipPath: "url(#medium-priority_svg__clip0_2475_13213)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React764.createElement("path", { d: "M11.576 1.424a.6.6 0 01.848 0l10.152 10.152a.6.6 0 010 .848L12.424 22.576a.6.6 0 01-.848 0L1.424 12.424a.6.6 0 010-.848L11.576 1.424zM6 12h4M14 12h4" })
    ),
    React764.createElement(
      "defs",
      null,
      React764.createElement(
        "clipPath",
        { id: "medium-priority_svg__clip0_2475_13213" },
        React764.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef763 = React764.forwardRef(SvgMediumPriority);
var MediumPriority_default = ForwardRef763;

// node_modules/iconoir-react/dist/esm/Medium.mjs
var React765 = __toESM(require_react(), 1);
var __assign764 = function() {
  __assign764 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign764.apply(this, arguments);
};
function SvgMedium(passedProps, svgRef) {
  var context = React765.useContext(IconoirContext);
  var props = __assign764(__assign764({}, context), passedProps);
  return React765.createElement(
    "svg",
    __assign764({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React765.createElement("path", { d: "M7 16a4 4 0 100-8 4 4 0 000 8zM15 16c1.105 0 2-1.79 2-4s-.895-4-2-4-2 1.79-2 4 .895 4 2 4zM20 16c.552 0 1-1.79 1-4s-.448-4-1-4-1 1.79-1 4 .448 4 1 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef764 = React765.forwardRef(SvgMedium);
var Medium_default = ForwardRef764;

// node_modules/iconoir-react/dist/esm/Megaphone.mjs
var React766 = __toESM(require_react(), 1);
var __assign765 = function() {
  __assign765 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign765.apply(this, arguments);
};
function SvgMegaphone(passedProps, svgRef) {
  var context = React766.useContext(IconoirContext);
  var props = __assign765(__assign765({}, context), passedProps);
  return React766.createElement(
    "svg",
    __assign765({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React766.createElement("path", { d: "M14 14V6m0 8l6.102 3.487a.6.6 0 00.898-.52V3.033a.6.6 0 00-.898-.521L14 6m0 8H7a4 4 0 01-4-4v0a4 4 0 014-4h7M7.757 19.3L7 14h4l.677 4.74a1.98 1.98 0 01-3.92.56z", stroke: "currentColor" })
  );
}
var ForwardRef765 = React766.forwardRef(SvgMegaphone);
var Megaphone_default = ForwardRef765;

// node_modules/iconoir-react/dist/esm/MenuScale.mjs
var React767 = __toESM(require_react(), 1);
var __assign766 = function() {
  __assign766 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign766.apply(this, arguments);
};
function SvgMenuScale(passedProps, svgRef) {
  var context = React767.useContext(IconoirContext);
  var props = __assign766(__assign766({}, context), passedProps);
  return React767.createElement(
    "svg",
    __assign766({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React767.createElement("path", { d: "M3 5h8M3 12h13M3 19h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef766 = React767.forwardRef(SvgMenuScale);
var MenuScale_default = ForwardRef766;

// node_modules/iconoir-react/dist/esm/Menu.mjs
var React768 = __toESM(require_react(), 1);
var __assign767 = function() {
  __assign767 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign767.apply(this, arguments);
};
function SvgMenu(passedProps, svgRef) {
  var context = React768.useContext(IconoirContext);
  var props = __assign767(__assign767({}, context), passedProps);
  return React768.createElement(
    "svg",
    __assign767({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React768.createElement("path", { d: "M3 5h18M3 12h18M3 19h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef767 = React768.forwardRef(SvgMenu);
var Menu_default = ForwardRef767;

// node_modules/iconoir-react/dist/esm/MessageAlert.mjs
var React769 = __toESM(require_react(), 1);
var __assign768 = function() {
  __assign768 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign768.apply(this, arguments);
};
function SvgMessageAlert(passedProps, svgRef) {
  var context = React769.useContext(IconoirContext);
  var props = __assign768(__assign768({}, context), passedProps);
  return React769.createElement(
    "svg",
    __assign768({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React769.createElement("path", { d: "M12 7v2M12 13.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React769.createElement("path", { d: "M3 20.29V5a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H7.961a2 2 0 00-1.561.75l-2.331 2.914A.6.6 0 013 20.29z", stroke: "currentColor" })
  );
}
var ForwardRef768 = React769.forwardRef(SvgMessageAlert);
var MessageAlert_default = ForwardRef768;

// node_modules/iconoir-react/dist/esm/MessageText.mjs
var React770 = __toESM(require_react(), 1);
var __assign769 = function() {
  __assign769 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign769.apply(this, arguments);
};
function SvgMessageText(passedProps, svgRef) {
  var context = React770.useContext(IconoirContext);
  var props = __assign769(__assign769({}, context), passedProps);
  return React770.createElement(
    "svg",
    __assign769({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React770.createElement("path", { d: "M7 12h10M7 8h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React770.createElement("path", { d: "M3 20.29V5a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H7.961a2 2 0 00-1.561.75l-2.331 2.914A.6.6 0 013 20.29z", stroke: "currentColor" })
  );
}
var ForwardRef769 = React770.forwardRef(SvgMessageText);
var MessageText_default = ForwardRef769;

// node_modules/iconoir-react/dist/esm/Message.mjs
var React771 = __toESM(require_react(), 1);
var __assign770 = function() {
  __assign770 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign770.apply(this, arguments);
};
function SvgMessage(passedProps, svgRef) {
  var context = React771.useContext(IconoirContext);
  var props = __assign770(__assign770({}, context), passedProps);
  return React771.createElement(
    "svg",
    __assign770({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React771.createElement("path", { d: "M3 20.29V5a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H7.961a2 2 0 00-1.561.75l-2.331 2.914A.6.6 0 013 20.29z", stroke: "currentColor" })
  );
}
var ForwardRef770 = React771.forwardRef(SvgMessage);
var Message_default = ForwardRef770;

// node_modules/iconoir-react/dist/esm/Metro.mjs
var React772 = __toESM(require_react(), 1);
var __assign771 = function() {
  __assign771 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign771.apply(this, arguments);
};
function SvgMetro(passedProps, svgRef) {
  var context = React772.useContext(IconoirContext);
  var props = __assign771(__assign771({}, context), passedProps);
  return React772.createElement(
    "svg",
    __assign771({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React772.createElement("path", { d: "M14 16.01l.01-.011M10 16.01l.01-.011M22 12v3a5 5 0 01-5 5H7a5 5 0 01-5-5v-3C2 6.477 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React772.createElement("path", { d: "M18 12v3a5 5 0 01-5 5h-2a5 5 0 01-5-5v-3a5 5 0 015-5h2a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React772.createElement("path", { d: "M10.5 20l-2 2.5M13.5 20l2 2.5M16.5 20l2 2.5M7.5 20l-2 2.5", stroke: "currentColor", strokeLinecap: "round" }),
    React772.createElement("path", { d: "M11.786 10h.428C13.2 10 14 10.8 14 11.786a.214.214 0 01-.214.214h-3.572a.214.214 0 01-.214-.214C10 10.8 10.8 10 11.786 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef771 = React772.forwardRef(SvgMetro);
var Metro_default = ForwardRef771;

// node_modules/iconoir-react/dist/esm/MicAdd.mjs
var React773 = __toESM(require_react(), 1);
var __assign772 = function() {
  __assign772 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign772.apply(this, arguments);
};
function SvgMicAdd(passedProps, svgRef) {
  var context = React773.useContext(IconoirContext);
  var props = __assign772(__assign772({}, context), passedProps);
  return React773.createElement(
    "svg",
    __assign772({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React773.createElement("path", { d: "M16.992 19h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React773.createElement("rect", { x: 5, y: 2, width: 6, height: 12, rx: 3, stroke: "currentColor" }),
    React773.createElement("path", { d: "M1 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M8 18v4m0 0H5m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef772 = React773.forwardRef(SvgMicAdd);
var MicAdd_default = ForwardRef772;

// node_modules/iconoir-react/dist/esm/MicCheck.mjs
var React774 = __toESM(require_react(), 1);
var __assign773 = function() {
  __assign773 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign773.apply(this, arguments);
};
function SvgMicCheck(passedProps, svgRef) {
  var context = React774.useContext(IconoirContext);
  var props = __assign773(__assign773({}, context), passedProps);
  return React774.createElement(
    "svg",
    __assign773({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React774.createElement("path", { d: "M15.5 20.5l2 2 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React774.createElement("rect", { x: 5, y: 2, width: 6, height: 12, rx: 3, stroke: "currentColor" }),
    React774.createElement("path", { d: "M1 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M8 18v4m0 0H5m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef773 = React774.forwardRef(SvgMicCheck);
var MicCheck_default = ForwardRef773;

// node_modules/iconoir-react/dist/esm/MicMute.mjs
var React775 = __toESM(require_react(), 1);
var __assign774 = function() {
  __assign774 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign774.apply(this, arguments);
};
function SvgMicMute(passedProps, svgRef) {
  var context = React775.useContext(IconoirContext);
  var props = __assign774(__assign774({}, context), passedProps);
  return React775.createElement(
    "svg",
    __assign774({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React775.createElement("path", { d: "M3 3l18 18M9 9v0a5 5 0 005 5v0m1-3.5V5a3 3 0 00-3-3v0a3 3 0 00-3 3v.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React775.createElement("path", { d: "M5 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M12 18v4m0 0H9m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef774 = React775.forwardRef(SvgMicMute);
var MicMute_default = ForwardRef774;

// node_modules/iconoir-react/dist/esm/MicRemove.mjs
var React776 = __toESM(require_react(), 1);
var __assign775 = function() {
  __assign775 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign775.apply(this, arguments);
};
function SvgMicRemove(passedProps, svgRef) {
  var context = React776.useContext(IconoirContext);
  var props = __assign775(__assign775({}, context), passedProps);
  return React776.createElement(
    "svg",
    __assign775({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React776.createElement("path", { d: "M16.992 19h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React776.createElement("rect", { x: 5, y: 2, width: 6, height: 12, rx: 3, stroke: "currentColor" }),
    React776.createElement("path", { d: "M1 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M8 18v4m0 0H5m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef775 = React776.forwardRef(SvgMicRemove);
var MicRemove_default = ForwardRef775;

// node_modules/iconoir-react/dist/esm/MicSpeaking.mjs
var React777 = __toESM(require_react(), 1);
var __assign776 = function() {
  __assign776 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign776.apply(this, arguments);
};
function SvgMicSpeaking(passedProps, svgRef) {
  var context = React777.useContext(IconoirContext);
  var props = __assign776(__assign776({}, context), passedProps);
  return React777.createElement(
    "svg",
    __assign776({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React777.createElement("rect", { x: 9, y: 2, width: 6, height: 12, rx: 3, stroke: "currentColor" }),
    React777.createElement("path", { d: "M5 3v2M1 2v4m18-3v2m4-3v4M5 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M12 18v4m0 0H9m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef776 = React777.forwardRef(SvgMicSpeaking);
var MicSpeaking_default = ForwardRef776;

// node_modules/iconoir-react/dist/esm/MicWarning.mjs
var React778 = __toESM(require_react(), 1);
var __assign777 = function() {
  __assign777 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign777.apply(this, arguments);
};
function SvgMicWarning(passedProps, svgRef) {
  var context = React778.useContext(IconoirContext);
  var props = __assign777(__assign777({}, context), passedProps);
  return React778.createElement(
    "svg",
    __assign777({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React778.createElement("path", { d: "M21 14v4M21 22.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React778.createElement("rect", { x: 7, y: 2, width: 6, height: 12, rx: 3, stroke: "currentColor" }),
    React778.createElement("path", { d: "M3 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M10 18v4m0 0H7m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef777 = React778.forwardRef(SvgMicWarning);
var MicWarning_default = ForwardRef777;

// node_modules/iconoir-react/dist/esm/Mic.mjs
var React779 = __toESM(require_react(), 1);
var __assign778 = function() {
  __assign778 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign778.apply(this, arguments);
};
function SvgMic(passedProps, svgRef) {
  var context = React779.useContext(IconoirContext);
  var props = __assign778(__assign778({}, context), passedProps);
  return React779.createElement(
    "svg",
    __assign778({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React779.createElement("rect", { x: 9, y: 2, width: 6, height: 12, rx: 3, stroke: "currentColor" }),
    React779.createElement("path", { d: "M5 10v1a7 7 0 007 7v0a7 7 0 007-7v-1M12 18v4m0 0H9m3 0h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef778 = React779.forwardRef(SvgMic);
var Mic_default = ForwardRef778;

// node_modules/iconoir-react/dist/esm/Microscope.mjs
var React780 = __toESM(require_react(), 1);
var __assign779 = function() {
  __assign779 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign779.apply(this, arguments);
};
function SvgMicroscope(passedProps, svgRef) {
  var context = React780.useContext(IconoirContext);
  var props = __assign779(__assign779({}, context), passedProps);
  return React780.createElement(
    "svg",
    __assign779({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React780.createElement("path", { d: "M19 22H7m-2 0h2m0 0v-3M19 16h-9M16 2h-4M12 7c-3 0-5 1-5 4v2M16 4.6v6.8a.6.6 0 01-.6.6h-2.8a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React780.createElement("path", { d: "M7 19a3 3 0 110-6 3 3 0 010 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef779 = React780.forwardRef(SvgMicroscope);
var Microscope_default = ForwardRef779;

// node_modules/iconoir-react/dist/esm/Minus1.mjs
var React781 = __toESM(require_react(), 1);
var __assign780 = function() {
  __assign780 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign780.apply(this, arguments);
};
function SvgMinus1(passedProps, svgRef) {
  var context = React781.useContext(IconoirContext);
  var props = __assign780(__assign780({}, context), passedProps);
  return React781.createElement(
    "svg",
    __assign780({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React781.createElement("path", { d: "M6 12h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef780 = React781.forwardRef(SvgMinus1);
var Minus1_default = ForwardRef780;

// node_modules/iconoir-react/dist/esm/MinusCircle.mjs
var React782 = __toESM(require_react(), 1);
var __assign781 = function() {
  __assign781 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign781.apply(this, arguments);
};
function SvgMinusCircle(passedProps, svgRef) {
  var context = React782.useContext(IconoirContext);
  var props = __assign781(__assign781({}, context), passedProps);
  return React782.createElement(
    "svg",
    __assign781({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React782.createElement("path", { d: "M8 12h8M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef781 = React782.forwardRef(SvgMinusCircle);
var MinusCircle_default = ForwardRef781;

// node_modules/iconoir-react/dist/esm/MinusHexagon.mjs
var React783 = __toESM(require_react(), 1);
var __assign782 = function() {
  __assign782 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign782.apply(this, arguments);
};
function SvgMinusHexagon(passedProps, svgRef) {
  var context = React783.useContext(IconoirContext);
  var props = __assign782(__assign782({}, context), passedProps);
  return React783.createElement(
    "svg",
    __assign782({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React783.createElement("path", { d: "M9 12h6M11.7 1.173a.6.6 0 01.6 0l8.926 5.154a.6.6 0 01.3.52v10.307a.6.6 0 01-.3.52L12.3 22.826a.6.6 0 01-.6 0l-8.926-5.154a.6.6 0 01-.3-.52V6.847a.6.6 0 01.3-.52L11.7 1.174z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef782 = React783.forwardRef(SvgMinusHexagon);
var MinusHexagon_default = ForwardRef782;

// node_modules/iconoir-react/dist/esm/MinusPinAlt.mjs
var React784 = __toESM(require_react(), 1);
var __assign783 = function() {
  __assign783 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign783.apply(this, arguments);
};
function SvgMinusPinAlt(passedProps, svgRef) {
  var context = React784.useContext(IconoirContext);
  var props = __assign783(__assign783({}, context), passedProps);
  return React784.createElement(
    "svg",
    __assign783({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React784.createElement("path", { d: "M16 9.2C16 13.177 9 20 9 20S2 13.177 2 9.2C2 5.224 5.134 2 9 2s7 3.224 7 7.2z", stroke: "currentColor" }),
    React784.createElement("path", { d: "M16 19h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React784.createElement("path", { d: "M9 10a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef783 = React784.forwardRef(SvgMinusPinAlt);
var MinusPinAlt_default = ForwardRef783;

// node_modules/iconoir-react/dist/esm/MinusSquare.mjs
var React785 = __toESM(require_react(), 1);
var __assign784 = function() {
  __assign784 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign784.apply(this, arguments);
};
function SvgMinusSquare(passedProps, svgRef) {
  var context = React785.useContext(IconoirContext);
  var props = __assign784(__assign784({}, context), passedProps);
  return React785.createElement(
    "svg",
    __assign784({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React785.createElement("path", { d: "M9 12h6M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef784 = React785.forwardRef(SvgMinusSquare);
var MinusSquare_default = ForwardRef784;

// node_modules/iconoir-react/dist/esm/Minus.mjs
var React786 = __toESM(require_react(), 1);
var __assign785 = function() {
  __assign785 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign785.apply(this, arguments);
};
function SvgMinus(passedProps, svgRef) {
  var context = React786.useContext(IconoirContext);
  var props = __assign785(__assign785({}, context), passedProps);
  return React786.createElement(
    "svg",
    __assign785({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React786.createElement("path", { d: "M6 12h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef785 = React786.forwardRef(SvgMinus);
var Minus_default = ForwardRef785;

// node_modules/iconoir-react/dist/esm/Mirror.mjs
var React787 = __toESM(require_react(), 1);
var __assign786 = function() {
  __assign786 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign786.apply(this, arguments);
};
function SvgMirror(passedProps, svgRef) {
  var context = React787.useContext(IconoirContext);
  var props = __assign786(__assign786({}, context), passedProps);
  return React787.createElement(
    "svg",
    __assign786({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React787.createElement("path", { d: "M20 4v16a2 2 0 01-2 2H6a2 2 0 01-2-2V4a2 2 0 012-2h12a2 2 0 012 2zM20 5l-6 5M20 9l-7.5 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef786 = React787.forwardRef(SvgMirror);
var Mirror_default = ForwardRef786;

// node_modules/iconoir-react/dist/esm/MissingFont.mjs
var React788 = __toESM(require_react(), 1);
var __assign787 = function() {
  __assign787 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign787.apply(this, arguments);
};
function SvgMissingFont(passedProps, svgRef) {
  var context = React788.useContext(IconoirContext);
  var props = __assign787(__assign787({}, context), passedProps);
  return React788.createElement(
    "svg",
    __assign787({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React788.createElement("path", { d: "M3.469 18.374l1.064-2.341m9.58 2.341l-1.064-2.341m0 0L8.79 6.664l-4.258 9.367m8.516 0H4.533M15.178 8.794c0-3.725 5.854-3.725 5.854 0 0 2.661-2.66 2.13-2.66 5.322M18.371 18.385l.01-.012", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef787 = React788.forwardRef(SvgMissingFont);
var MissingFont_default = ForwardRef787;

// node_modules/iconoir-react/dist/esm/ModernTv4K.mjs
var React789 = __toESM(require_react(), 1);
var __assign788 = function() {
  __assign788 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign788.apply(this, arguments);
};
function SvgModernTv4K(passedProps, svgRef) {
  var context = React789.useContext(IconoirContext);
  var props = __assign788(__assign788({}, context), passedProps);
  return React789.createElement(
    "svg",
    __assign788({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React789.createElement("path", { d: "M7 21h10M13.5 7v4m0 2v-2m0 0l1.37-1.566M17 7l-2.13 2.434m0 0L17 13M9.5 7l-3 4.5H10V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React789.createElement("path", { d: "M2 16.4V3.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef788 = React789.forwardRef(SvgModernTv4K);
var ModernTv4K_default = ForwardRef788;

// node_modules/iconoir-react/dist/esm/ModernTv.mjs
var React790 = __toESM(require_react(), 1);
var __assign789 = function() {
  __assign789 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign789.apply(this, arguments);
};
function SvgModernTv(passedProps, svgRef) {
  var context = React790.useContext(IconoirContext);
  var props = __assign789(__assign789({}, context), passedProps);
  return React790.createElement(
    "svg",
    __assign789({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React790.createElement("path", { d: "M7 21h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React790.createElement("path", { d: "M2 16.4V3.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef789 = React790.forwardRef(SvgModernTv);
var ModernTv_default = ForwardRef789;

// node_modules/iconoir-react/dist/esm/MoneySquare.mjs
var React791 = __toESM(require_react(), 1);
var __assign790 = function() {
  __assign790 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign790.apply(this, arguments);
};
function SvgMoneySquare(passedProps, svgRef) {
  var context = React791.useContext(IconoirContext);
  var props = __assign790(__assign790({}, context), passedProps);
  return React791.createElement(
    "svg",
    __assign790({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React791.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React791.createElement("path", { d: "M15 8.5c-.685-.685-1.891-1.161-3-1.191M9 15c.644.86 1.843 1.35 3 1.391m0-9.082c-1.32-.036-2.5.561-2.5 2.191 0 3 5.5 1.5 5.5 4.5 0 1.711-1.464 2.446-3 2.391m0-9.082V5.5m0 10.891V18.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef790 = React791.forwardRef(SvgMoneySquare);
var MoneySquare_default = ForwardRef790;

// node_modules/iconoir-react/dist/esm/MoonSat.mjs
var React792 = __toESM(require_react(), 1);
var __assign791 = function() {
  __assign791 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign791.apply(this, arguments);
};
function SvgMoonSat(passedProps, svgRef) {
  var context = React792.useContext(IconoirContext);
  var props = __assign791(__assign791({}, context), passedProps);
  return React792.createElement(
    "svg",
    __assign791({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React792.createElement("circle", { cx: 12, cy: 12, r: 10, stroke: "currentColor" }),
    React792.createElement("path", { d: "M7.633 3.067A3.001 3.001 0 114.017 6.32M22 13.05a3.5 3.5 0 10-3 5.914", stroke: "currentColor" }),
    React792.createElement("path", { d: "M14.5 8.51l.01-.011M10 17a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef791 = React792.forwardRef(SvgMoonSat);
var MoonSat_default = ForwardRef791;

// node_modules/iconoir-react/dist/esm/MoreHorizCircle.mjs
var React793 = __toESM(require_react(), 1);
var __assign792 = function() {
  __assign792 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign792.apply(this, arguments);
};
function SvgMoreHorizCircle(passedProps, svgRef) {
  var context = React793.useContext(IconoirContext);
  var props = __assign792(__assign792({}, context), passedProps);
  return React793.createElement(
    "svg",
    __assign792({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React793.createElement("path", { d: "M7 12.5a.5.5 0 100-1 .5.5 0 000 1zM12 12.5a.5.5 0 100-1 .5.5 0 000 1zM17 12.5a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React793.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef792 = React793.forwardRef(SvgMoreHorizCircle);
var MoreHorizCircle_default = ForwardRef792;

// node_modules/iconoir-react/dist/esm/MoreHoriz.mjs
var React794 = __toESM(require_react(), 1);
var __assign793 = function() {
  __assign793 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign793.apply(this, arguments);
};
function SvgMoreHoriz(passedProps, svgRef) {
  var context = React794.useContext(IconoirContext);
  var props = __assign793(__assign793({}, context), passedProps);
  return React794.createElement(
    "svg",
    __assign793({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React794.createElement("path", { d: "M20 12.5a.5.5 0 100-1 .5.5 0 000 1zM12 12.5a.5.5 0 100-1 .5.5 0 000 1zM4 12.5a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef793 = React794.forwardRef(SvgMoreHoriz);
var MoreHoriz_default = ForwardRef793;

// node_modules/iconoir-react/dist/esm/MoreVertCircle.mjs
var React795 = __toESM(require_react(), 1);
var __assign794 = function() {
  __assign794 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign794.apply(this, arguments);
};
function SvgMoreVertCircle(passedProps, svgRef) {
  var context = React795.useContext(IconoirContext);
  var props = __assign794(__assign794({}, context), passedProps);
  return React795.createElement(
    "svg",
    __assign794({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React795.createElement("path", { d: "M12 7.5a.5.5 0 100-1 .5.5 0 000 1zM12 17.5a.5.5 0 100-1 .5.5 0 000 1zM12 12.5a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React795.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef794 = React795.forwardRef(SvgMoreVertCircle);
var MoreVertCircle_default = ForwardRef794;

// node_modules/iconoir-react/dist/esm/MoreVert.mjs
var React796 = __toESM(require_react(), 1);
var __assign795 = function() {
  __assign795 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign795.apply(this, arguments);
};
function SvgMoreVert(passedProps, svgRef) {
  var context = React796.useContext(IconoirContext);
  var props = __assign795(__assign795({}, context), passedProps);
  return React796.createElement(
    "svg",
    __assign795({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React796.createElement("path", { d: "M12 12.5a.5.5 0 100-1 .5.5 0 000 1zM12 20.5a.5.5 0 100-1 .5.5 0 000 1zM12 4.5a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef795 = React796.forwardRef(SvgMoreVert);
var MoreVert_default = ForwardRef795;

// node_modules/iconoir-react/dist/esm/Motorcycle.mjs
var React797 = __toESM(require_react(), 1);
var __assign796 = function() {
  __assign796 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign796.apply(this, arguments);
};
function SvgMotorcycle(passedProps, svgRef) {
  var context = React797.useContext(IconoirContext);
  var props = __assign796(__assign796({}, context), passedProps);
  return React797.createElement(
    "svg",
    __assign796({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React797.createElement("path", { d: "M5 19a4 4 0 100-8 4 4 0 000 8zM19 15l-3-9 1-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React797.createElement("path", { d: "M16 8.5h-4.5l-4.5 3M5.5 15.5H12l1-2.5 3.5-4.5M8.5 10c-2-1.5-5-1.5-7 0M19 19a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef796 = React797.forwardRef(SvgMotorcycle);
var Motorcycle_default = ForwardRef796;

// node_modules/iconoir-react/dist/esm/MouseButtonLeft.mjs
var React798 = __toESM(require_react(), 1);
var __assign797 = function() {
  __assign797 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign797.apply(this, arguments);
};
function SvgMouseButtonLeft(passedProps, svgRef) {
  var context = React798.useContext(IconoirContext);
  var props = __assign797(__assign797({}, context), passedProps);
  return React798.createElement(
    "svg",
    __assign797({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React798.createElement("path", { d: "M20 10v4a8 8 0 11-16 0V9a7 7 0 017-7h1a8 8 0 018 8z", stroke: "currentColor", strokeLinecap: "round" }),
    React798.createElement("path", { d: "M12 2v6.4a.6.6 0 01-.6.6H4", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef797 = React798.forwardRef(SvgMouseButtonLeft);
var MouseButtonLeft_default = ForwardRef797;

// node_modules/iconoir-react/dist/esm/MouseButtonRight.mjs
var React799 = __toESM(require_react(), 1);
var __assign798 = function() {
  __assign798 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign798.apply(this, arguments);
};
function SvgMouseButtonRight(passedProps, svgRef) {
  var context = React799.useContext(IconoirContext);
  var props = __assign798(__assign798({}, context), passedProps);
  return React799.createElement(
    "svg",
    __assign798({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React799.createElement("path", { d: "M4 10v4a8 8 0 1016 0V9a7 7 0 00-7-7h-1a8 8 0 00-8 8z", stroke: "currentColor", strokeLinecap: "round" }),
    React799.createElement("path", { d: "M12 2v6.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef798 = React799.forwardRef(SvgMouseButtonRight);
var MouseButtonRight_default = ForwardRef798;

// node_modules/iconoir-react/dist/esm/MouseScrollWheel.mjs
var React800 = __toESM(require_react(), 1);
var __assign799 = function() {
  __assign799 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign799.apply(this, arguments);
};
function SvgMouseScrollWheel(passedProps, svgRef) {
  var context = React800.useContext(IconoirContext);
  var props = __assign799(__assign799({}, context), passedProps);
  return React800.createElement(
    "svg",
    __assign799({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React800.createElement("path", { d: "M12 5l.53-.53a.75.75 0 00-1.06 0L12 5zm0 8l-.53.53a.75.75 0 001.06 0L12 13zM9.47 6.47a.75.75 0 001.06 1.06L9.47 6.47zm4 1.06a.75.75 0 101.06-1.06l-1.06 1.06zm-2.94 2.94a.75.75 0 10-1.06 1.06l1.06-1.06zm4 1.06a.75.75 0 10-1.06-1.06l1.06 1.06zM3.25 10v4h1.5v-4h-1.5zm17.5 4v-4h-1.5v4h1.5zm-9.5-9v8h1.5V5h-1.5zm.22-.53l-2 2 1.06 1.06 2-2-1.06-1.06zm0 1.06l2 2 1.06-1.06-2-2-1.06 1.06zm1.06 6.94l-2-2-1.06 1.06 2 2 1.06-1.06zm0 1.06l2-2-1.06-1.06-2 2 1.06 1.06zM20.75 10A8.75 8.75 0 0012 1.25v1.5A7.25 7.25 0 0119.25 10h1.5zM12 22.75A8.75 8.75 0 0020.75 14h-1.5A7.25 7.25 0 0112 21.25v1.5zM3.25 14A8.75 8.75 0 0012 22.75v-1.5A7.25 7.25 0 014.75 14h-1.5zm1.5-4A7.25 7.25 0 0112 2.75v-1.5A8.75 8.75 0 003.25 10h1.5z", fill: "currentColor" })
  );
}
var ForwardRef799 = React800.forwardRef(SvgMouseScrollWheel);
var MouseScrollWheel_default = ForwardRef799;

// node_modules/iconoir-react/dist/esm/MoveDown.mjs
var React801 = __toESM(require_react(), 1);
var __assign800 = function() {
  __assign800 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign800.apply(this, arguments);
};
function SvgMoveDown(passedProps, svgRef) {
  var context = React801.useContext(IconoirContext);
  var props = __assign800(__assign800({}, context), passedProps);
  return React801.createElement(
    "svg",
    __assign800({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React801.createElement("path", { d: "M12 6a2 2 0 110-4 2 2 0 010 4zM12 9v13m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef800 = React801.forwardRef(SvgMoveDown);
var MoveDown_default = ForwardRef800;

// node_modules/iconoir-react/dist/esm/MoveLeft.mjs
var React802 = __toESM(require_react(), 1);
var __assign801 = function() {
  __assign801 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign801.apply(this, arguments);
};
function SvgMoveLeft(passedProps, svgRef) {
  var context = React802.useContext(IconoirContext);
  var props = __assign801(__assign801({}, context), passedProps);
  return React802.createElement(
    "svg",
    __assign801({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React802.createElement("path", { d: "M20 14a2 2 0 110-4 2 2 0 010 4zM15 12H2m0 0l3-3m-3 3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef801 = React802.forwardRef(SvgMoveLeft);
var MoveLeft_default = ForwardRef801;

// node_modules/iconoir-react/dist/esm/MoveRight.mjs
var React803 = __toESM(require_react(), 1);
var __assign802 = function() {
  __assign802 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign802.apply(this, arguments);
};
function SvgMoveRight(passedProps, svgRef) {
  var context = React803.useContext(IconoirContext);
  var props = __assign802(__assign802({}, context), passedProps);
  return React803.createElement(
    "svg",
    __assign802({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React803.createElement("path", { d: "M4 14a2 2 0 110-4 2 2 0 010 4zM9 12h13m0 0l-3-3m3 3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef802 = React803.forwardRef(SvgMoveRight);
var MoveRight_default = ForwardRef802;

// node_modules/iconoir-react/dist/esm/MoveRuler.mjs
var React804 = __toESM(require_react(), 1);
var __assign803 = function() {
  __assign803 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign803.apply(this, arguments);
};
function SvgMoveRuler(passedProps, svgRef) {
  var context = React804.useContext(IconoirContext);
  var props = __assign803(__assign803({}, context), passedProps);
  return React804.createElement(
    "svg",
    __assign803({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React804.createElement("path", { d: "M15.4 22H8.6a.6.6 0 01-.6-.6V2.6a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6v18.8a.6.6 0 01-.6.6zM16 17h-3M16 7h-3M13 12h10m0 0l-2 2m2-2l-2-2M1 12l2-2m-2 2l2 2m-2-2h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef803 = React804.forwardRef(SvgMoveRuler);
var MoveRuler_default = ForwardRef803;

// node_modules/iconoir-react/dist/esm/MoveUp.mjs
var React805 = __toESM(require_react(), 1);
var __assign804 = function() {
  __assign804 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign804.apply(this, arguments);
};
function SvgMoveUp(passedProps, svgRef) {
  var context = React805.useContext(IconoirContext);
  var props = __assign804(__assign804({}, context), passedProps);
  return React805.createElement(
    "svg",
    __assign804({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React805.createElement("path", { d: "M12 22a2 2 0 110-4 2 2 0 010 4zM12 15V2m0 0l3 3m-3-3L9 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef804 = React805.forwardRef(SvgMoveUp);
var MoveUp_default = ForwardRef804;

// node_modules/iconoir-react/dist/esm/Movie.mjs
var React806 = __toESM(require_react(), 1);
var __assign805 = function() {
  __assign805 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign805.apply(this, arguments);
};
function SvgMovie(passedProps, svgRef) {
  var context = React806.useContext(IconoirContext);
  var props = __assign805(__assign805({}, context), passedProps);
  return React806.createElement(
    "svg",
    __assign805({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React806.createElement("path", { d: "M7 8.01l.01-.011M17 8.01l.01-.011M7 12.01l.01-.011M17 12.01l.01-.011M7 16.01l.01-.011M17 16.01l.01-.011M7 2H3.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H7M7 2v2m0-2h10m0 0h3.4a.6.6 0 01.6.6v18.8a.6.6 0 01-.6.6H17m0-20v2m0 18v-2m0 2H7m0 0v-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef805 = React806.forwardRef(SvgMovie);
var Movie_default = ForwardRef805;

// node_modules/iconoir-react/dist/esm/MpegFormat.mjs
var React807 = __toESM(require_react(), 1);
var __assign806 = function() {
  __assign806 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign806.apply(this, arguments);
};
function SvgMpegFormat(passedProps, svgRef) {
  var context = React807.useContext(IconoirContext);
  var props = __assign806(__assign806({}, context), passedProps);
  return React807.createElement(
    "svg",
    __assign806({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React807.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React807.createElement("path", { d: "M7.5 15v-3m0 0V9h3v3h-3zM1.5 15V9L3 12l1.5-3v6M16.5 9h-3v6h3M22.5 9h-3v6h3v-2.4M13.5 12h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef806 = React807.forwardRef(SvgMpegFormat);
var MpegFormat_default = ForwardRef806;

// node_modules/iconoir-react/dist/esm/MultiBubble.mjs
var React808 = __toESM(require_react(), 1);
var __assign807 = function() {
  __assign807 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign807.apply(this, arguments);
};
function SvgMultiBubble(passedProps, svgRef) {
  var context = React808.useContext(IconoirContext);
  var props = __assign807(__assign807({}, context), passedProps);
  return React808.createElement(
    "svg",
    __assign807({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React808.createElement("path", { d: "M7.5 22a5.5 5.5 0 10-4.764-2.75l-.461 2.475 2.475-.46A5.474 5.474 0 007.5 22z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React808.createElement("path", { d: "M15.282 17.898A7.946 7.946 0 0018 16.93l3.6.67-.67-3.6A8 8 0 106.083 8.849", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef807 = React808.forwardRef(SvgMultiBubble);
var MultiBubble_default = ForwardRef807;

// node_modules/iconoir-react/dist/esm/MultiMacOsWindow.mjs
var React809 = __toESM(require_react(), 1);
var __assign808 = function() {
  __assign808 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign808.apply(this, arguments);
};
function SvgMultiMacOsWindow(passedProps, svgRef) {
  var context = React809.useContext(IconoirContext);
  var props = __assign808(__assign808({}, context), passedProps);
  return React809.createElement(
    "svg",
    __assign808({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React809.createElement("path", { d: "M7 19v-8a2 2 0 012-2h11a2 2 0 012 2v8a2 2 0 01-2 2H9a2 2 0 01-2-2z", stroke: "currentColor" }),
    React809.createElement("path", { d: "M10 12.01l.01-.011M12 12.01l.01-.011M14 12.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React809.createElement("path", { d: "M6.5 16H4a2 2 0 01-2-2V6a2 2 0 012-2h11a2 2 0 012 2v3", stroke: "currentColor" }),
    React809.createElement("path", { d: "M5 7.01l.01-.011M7 7.01l.01-.011M9 7.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef808 = React809.forwardRef(SvgMultiMacOsWindow);
var MultiMacOsWindow_default = ForwardRef808;

// node_modules/iconoir-react/dist/esm/MultiWindow.mjs
var React810 = __toESM(require_react(), 1);
var __assign809 = function() {
  __assign809 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign809.apply(this, arguments);
};
function SvgMultiWindow(passedProps, svgRef) {
  var context = React810.useContext(IconoirContext);
  var props = __assign809(__assign809({}, context), passedProps);
  return React810.createElement(
    "svg",
    __assign809({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React810.createElement("path", { d: "M7 19v-8a2 2 0 012-2h11a2 2 0 012 2v8a2 2 0 01-2 2H9a2 2 0 01-2-2z", stroke: "currentColor" }),
    React810.createElement("path", { d: "M6.5 16H4a2 2 0 01-2-2V6a2 2 0 012-2h11a2 2 0 012 2v3", stroke: "currentColor" }),
    React810.createElement("path", { d: "M10 12h1M5 7h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef809 = React810.forwardRef(SvgMultiWindow);
var MultiWindow_default = ForwardRef809;

// node_modules/iconoir-react/dist/esm/MultiplePagesAdd.mjs
var React811 = __toESM(require_react(), 1);
var __assign810 = function() {
  __assign810 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign810.apply(this, arguments);
};
function SvgMultiplePagesAdd(passedProps, svgRef) {
  var context = React811.useContext(IconoirContext);
  var props = __assign810(__assign810({}, context), passedProps);
  return React811.createElement(
    "svg",
    __assign810({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React811.createElement("path", { d: "M1.992 19h3m3 0h-3m0 0v-3m0 3v3M7 2h9.5L21 6.5V19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React811.createElement("path", { d: "M11 22h5.5a1.5 1.5 0 001.5-1.5V8.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0014.25 5H4.5A1.5 1.5 0 003 6.5V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React811.createElement("path", { d: "M14 5v3.4a.6.6 0 00.6.6H18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef810 = React811.forwardRef(SvgMultiplePagesAdd);
var MultiplePagesAdd_default = ForwardRef810;

// node_modules/iconoir-react/dist/esm/MultiplePagesDelete.mjs
var React812 = __toESM(require_react(), 1);
var __assign811 = function() {
  __assign811 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign811.apply(this, arguments);
};
function SvgMultiplePagesDelete(passedProps, svgRef) {
  var context = React812.useContext(IconoirContext);
  var props = __assign811(__assign811({}, context), passedProps);
  return React812.createElement(
    "svg",
    __assign811({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React812.createElement("path", { d: "M2.87 21.121L4.993 19m2.121-2.121L4.993 19m0 0L2.87 16.879M4.992 19l2.121 2.121M7 2h9.5L21 6.5V19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React812.createElement("path", { d: "M11 22h5.5a1.5 1.5 0 001.5-1.5V8.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0014.25 5H4.5A1.5 1.5 0 003 6.5V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React812.createElement("path", { d: "M14 5v3.4a.6.6 0 00.6.6H18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef811 = React812.forwardRef(SvgMultiplePagesDelete);
var MultiplePagesDelete_default = ForwardRef811;

// node_modules/iconoir-react/dist/esm/MultiplePagesEmpty.mjs
var React813 = __toESM(require_react(), 1);
var __assign812 = function() {
  __assign812 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign812.apply(this, arguments);
};
function SvgMultiplePagesEmpty(passedProps, svgRef) {
  var context = React813.useContext(IconoirContext);
  var props = __assign812(__assign812({}, context), passedProps);
  return React813.createElement(
    "svg",
    __assign812({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React813.createElement("path", { d: "M7 2h9.5L21 6.5V19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React813.createElement("path", { d: "M3 20.5v-14A1.5 1.5 0 014.5 5h9.752a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0118 8.75V20.5a1.5 1.5 0 01-1.5 1.5h-12A1.5 1.5 0 013 20.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React813.createElement("path", { d: "M14 5v3.4a.6.6 0 00.6.6H18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef812 = React813.forwardRef(SvgMultiplePagesEmpty);
var MultiplePagesEmpty_default = ForwardRef812;

// node_modules/iconoir-react/dist/esm/MultiplePagesRemove.mjs
var React814 = __toESM(require_react(), 1);
var __assign813 = function() {
  __assign813 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign813.apply(this, arguments);
};
function SvgMultiplePagesRemove(passedProps, svgRef) {
  var context = React814.useContext(IconoirContext);
  var props = __assign813(__assign813({}, context), passedProps);
  return React814.createElement(
    "svg",
    __assign813({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React814.createElement("path", { d: "M7 2h9.5L21 6.5V19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React814.createElement("path", { d: "M11 22h5.5a1.5 1.5 0 001.5-1.5V8.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0014.25 5H4.5A1.5 1.5 0 003 6.5V13M1.992 19h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React814.createElement("path", { d: "M14 5v3.4a.6.6 0 00.6.6H18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef813 = React814.forwardRef(SvgMultiplePagesRemove);
var MultiplePagesRemove_default = ForwardRef813;

// node_modules/iconoir-react/dist/esm/MultiplePages.mjs
var React815 = __toESM(require_react(), 1);
var __assign814 = function() {
  __assign814 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign814.apply(this, arguments);
};
function SvgMultiplePages(passedProps, svgRef) {
  var context = React815.useContext(IconoirContext);
  var props = __assign814(__assign814({}, context), passedProps);
  return React815.createElement(
    "svg",
    __assign814({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React815.createElement("path", { d: "M7 18h7M7 14h1M7 10h3M7 2h9.5L21 6.5V19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React815.createElement("path", { d: "M3 20.5v-14A1.5 1.5 0 014.5 5h9.752a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0118 8.75V20.5a1.5 1.5 0 01-1.5 1.5h-12A1.5 1.5 0 013 20.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React815.createElement("path", { d: "M14 5v3.4a.6.6 0 00.6.6H18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef814 = React815.forwardRef(SvgMultiplePages);
var MultiplePages_default = ForwardRef814;

// node_modules/iconoir-react/dist/esm/MusicDoubleNoteAdd.mjs
var React816 = __toESM(require_react(), 1);
var __assign815 = function() {
  __assign815 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign815.apply(this, arguments);
};
function SvgMusicDoubleNoteAdd(passedProps, svgRef) {
  var context = React816.useContext(IconoirContext);
  var props = __assign815(__assign815({}, context), passedProps);
  return React816.createElement(
    "svg",
    __assign815({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React816.createElement("path", { d: "M17 6.5h3m3 0h-3m0 0v-3m0 3v3M6 16V5l8-1M15 14v-4M12 19h1a2 2 0 002-2v-3h-3a2 2 0 00-2 2v1a2 2 0 002 2zM3 21h1a2 2 0 002-2v-3H3a2 2 0 00-2 2v1a2 2 0 002 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef815 = React816.forwardRef(SvgMusicDoubleNoteAdd);
var MusicDoubleNoteAdd_default = ForwardRef815;

// node_modules/iconoir-react/dist/esm/MusicDoubleNote.mjs
var React817 = __toESM(require_react(), 1);
var __assign816 = function() {
  __assign816 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign816.apply(this, arguments);
};
function SvgMusicDoubleNote(passedProps, svgRef) {
  var context = React817.useContext(IconoirContext);
  var props = __assign816(__assign816({}, context), passedProps);
  return React817.createElement(
    "svg",
    __assign816({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React817.createElement("path", { d: "M20 14V3L9 5v11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React817.createElement("path", { d: "M17 19h1a2 2 0 002-2v-3h-3a2 2 0 00-2 2v1a2 2 0 002 2zM6 21h1a2 2 0 002-2v-3H6a2 2 0 00-2 2v1a2 2 0 002 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef816 = React817.forwardRef(SvgMusicDoubleNote);
var MusicDoubleNote_default = ForwardRef816;

// node_modules/iconoir-react/dist/esm/MusicNoteAdd.mjs
var React818 = __toESM(require_react(), 1);
var __assign817 = function() {
  __assign817 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign817.apply(this, arguments);
};
function SvgMusicNoteAdd(passedProps, svgRef) {
  var context = React818.useContext(IconoirContext);
  var props = __assign817(__assign817({}, context), passedProps);
  return React818.createElement(
    "svg",
    __assign817({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React818.createElement("path", { d: "M16 10h3m3 0h-3m0 0V7m0 3v3M7 16v3a2 2 0 01-2 2H4a2 2 0 01-2-2v-1a2 2 0 012-2h3zm0 0V8m0 0V4l5-1v4L7 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef817 = React818.forwardRef(SvgMusicNoteAdd);
var MusicNoteAdd_default = ForwardRef817;

// node_modules/iconoir-react/dist/esm/MusicNote.mjs
var React819 = __toESM(require_react(), 1);
var __assign818 = function() {
  __assign818 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign818.apply(this, arguments);
};
function SvgMusicNote(passedProps, svgRef) {
  var context = React819.useContext(IconoirContext);
  var props = __assign818(__assign818({}, context), passedProps);
  return React819.createElement(
    "svg",
    __assign818({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React819.createElement("path", { d: "M12 16v3a2 2 0 01-2 2H9a2 2 0 01-2-2v-1a2 2 0 012-2h3zm0 0V8m0 0V4l5-1v4l-5 1z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef818 = React819.forwardRef(SvgMusicNote);
var MusicNote_default = ForwardRef818;

// node_modules/iconoir-react/dist/esm/NavArrowDown.mjs
var React820 = __toESM(require_react(), 1);
var __assign819 = function() {
  __assign819 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign819.apply(this, arguments);
};
function SvgNavArrowDown(passedProps, svgRef) {
  var context = React820.useContext(IconoirContext);
  var props = __assign819(__assign819({}, context), passedProps);
  return React820.createElement(
    "svg",
    __assign819({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React820.createElement("path", { d: "M6 9l6 6 6-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef819 = React820.forwardRef(SvgNavArrowDown);
var NavArrowDown_default = ForwardRef819;

// node_modules/iconoir-react/dist/esm/NavArrowLeft.mjs
var React821 = __toESM(require_react(), 1);
var __assign820 = function() {
  __assign820 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign820.apply(this, arguments);
};
function SvgNavArrowLeft(passedProps, svgRef) {
  var context = React821.useContext(IconoirContext);
  var props = __assign820(__assign820({}, context), passedProps);
  return React821.createElement(
    "svg",
    __assign820({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React821.createElement("path", { d: "M15 6l-6 6 6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef820 = React821.forwardRef(SvgNavArrowLeft);
var NavArrowLeft_default = ForwardRef820;

// node_modules/iconoir-react/dist/esm/NavArrowRight.mjs
var React822 = __toESM(require_react(), 1);
var __assign821 = function() {
  __assign821 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign821.apply(this, arguments);
};
function SvgNavArrowRight(passedProps, svgRef) {
  var context = React822.useContext(IconoirContext);
  var props = __assign821(__assign821({}, context), passedProps);
  return React822.createElement(
    "svg",
    __assign821({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React822.createElement("path", { d: "M9 6l6 6-6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef821 = React822.forwardRef(SvgNavArrowRight);
var NavArrowRight_default = ForwardRef821;

// node_modules/iconoir-react/dist/esm/NavArrowUp.mjs
var React823 = __toESM(require_react(), 1);
var __assign822 = function() {
  __assign822 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign822.apply(this, arguments);
};
function SvgNavArrowUp(passedProps, svgRef) {
  var context = React823.useContext(IconoirContext);
  var props = __assign822(__assign822({}, context), passedProps);
  return React823.createElement(
    "svg",
    __assign822({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React823.createElement("path", { d: "M6 15l6-6 6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef822 = React823.forwardRef(SvgNavArrowUp);
var NavArrowUp_default = ForwardRef822;

// node_modules/iconoir-react/dist/esm/NavigatorAlt.mjs
var React824 = __toESM(require_react(), 1);
var __assign823 = function() {
  __assign823 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign823.apply(this, arguments);
};
function SvgNavigatorAlt(passedProps, svgRef) {
  var context = React824.useContext(IconoirContext);
  var props = __assign823(__assign823({}, context), passedProps);
  return React824.createElement(
    "svg",
    __assign823({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React824.createElement("circle", { cx: 12, cy: 12, r: 10, stroke: "currentColor" }),
    React824.createElement("path", { clipRule: "evenodd", d: "M13.93 17.869c-.322.93-1.637.929-1.958-.001l-1.62-4.694-4.57-1.943c-.905-.385-.814-1.698.136-1.954L16.15 6.516a1.036 1.036 0 011.249 1.34L13.93 17.868z", stroke: "currentColor" })
  );
}
var ForwardRef823 = React824.forwardRef(SvgNavigatorAlt);
var NavigatorAlt_default = ForwardRef823;

// node_modules/iconoir-react/dist/esm/Navigator.mjs
var React825 = __toESM(require_react(), 1);
var __assign824 = function() {
  __assign824 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign824.apply(this, arguments);
};
function SvgNavigator(passedProps, svgRef) {
  var context = React825.useContext(IconoirContext);
  var props = __assign824(__assign824({}, context), passedProps);
  return React825.createElement(
    "svg",
    __assign824({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React825.createElement("circle", { cx: 12, cy: 12, r: 10, stroke: "currentColor" }),
    React825.createElement("path", { clipRule: "evenodd", d: "M17.873 15.475c.46.87-.437 1.831-1.336 1.432l-4.538-2.017-4.537 2.017c-.9.4-1.797-.562-1.337-1.432l4.959-9.365a1.036 1.036 0 011.831 0l4.958 9.365z", stroke: "currentColor" })
  );
}
var ForwardRef824 = React825.forwardRef(SvgNavigator);
var Navigator_default = ForwardRef824;

// node_modules/iconoir-react/dist/esm/Neighbourhood.mjs
var React826 = __toESM(require_react(), 1);
var __assign825 = function() {
  __assign825 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign825.apply(this, arguments);
};
function SvgNeighbourhood(passedProps, svgRef) {
  var context = React826.useContext(IconoirContext);
  var props = __assign825(__assign825({}, context), passedProps);
  return React826.createElement(
    "svg",
    __assign825({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React826.createElement("path", { d: "M11 21H4a2 2 0 01-2-2v-4.54a2 2 0 01.963-1.71l3.5-2.122a2 2 0 012.074 0l3.5 2.121A2 2 0 0113 14.46V19a2 2 0 01-2 2zM6.5 10V6.46a2 2 0 01.963-1.71l3.5-2.122a2 2 0 012.074 0l3.5 2.121a2 2 0 01.963 1.71V10M16 21h4a2 2 0 002-2v-4.54a2 2 0 00-.963-1.71l-3.506-2.125a2 2 0 00-2.065-.005l-.633.38", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React826.createElement("path", { d: "M9 21v-3.4a.6.6 0 00-.6-.6H6.6a.6.6 0 00-.6.6V21M18 21v-3.4a.6.6 0 00-.6-.6H16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef825 = React826.forwardRef(SvgNeighbourhood);
var Neighbourhood_default = ForwardRef825;

// node_modules/iconoir-react/dist/esm/NetworkAlt.mjs
var React827 = __toESM(require_react(), 1);
var __assign826 = function() {
  __assign826 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign826.apply(this, arguments);
};
function SvgNetworkAlt(passedProps, svgRef) {
  var context = React827.useContext(IconoirContext);
  var props = __assign826(__assign826({}, context), passedProps);
  return React827.createElement(
    "svg",
    __assign826({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React827.createElement("rect", { width: 7, height: 5, rx: 0.6, transform: "matrix(1 0 0 -1 3 22)", stroke: "currentColor" }),
    React827.createElement("rect", { width: 7, height: 5, rx: 0.6, transform: "matrix(1 0 0 -1 8.5 7)", stroke: "currentColor" }),
    React827.createElement("rect", { width: 7, height: 5, rx: 0.6, transform: "matrix(1 0 0 -1 14 22)", stroke: "currentColor" }),
    React827.createElement("path", { d: "M6.5 17v-3.5a2 2 0 012-2h7a2 2 0 012 2V17M12 11.5V7", stroke: "currentColor" })
  );
}
var ForwardRef826 = React827.forwardRef(SvgNetworkAlt);
var NetworkAlt_default = ForwardRef826;

// node_modules/iconoir-react/dist/esm/NetworkLeft.mjs
var React828 = __toESM(require_react(), 1);
var __assign827 = function() {
  __assign827 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign827.apply(this, arguments);
};
function SvgNetworkLeft(passedProps, svgRef) {
  var context = React828.useContext(IconoirContext);
  var props = __assign827(__assign827({}, context), passedProps);
  return React828.createElement(
    "svg",
    __assign827({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React828.createElement("rect", { x: 2, y: 21, width: 7, height: 5, rx: 0.6, transform: "rotate(-90 2 21)", stroke: "currentColor" }),
    React828.createElement("rect", { x: 17, y: 15.5, width: 7, height: 5, rx: 0.6, transform: "rotate(-90 17 15.5)", stroke: "currentColor" }),
    React828.createElement("rect", { x: 2, y: 10, width: 7, height: 5, rx: 0.6, transform: "rotate(-90 2 10)", stroke: "currentColor" }),
    React828.createElement("path", { d: "M7 17.5h3.5a2 2 0 002-2v-7a2 2 0 00-2-2H7M12.5 12H17", stroke: "currentColor" })
  );
}
var ForwardRef827 = React828.forwardRef(SvgNetworkLeft);
var NetworkLeft_default = ForwardRef827;

// node_modules/iconoir-react/dist/esm/NetworkRight.mjs
var React829 = __toESM(require_react(), 1);
var __assign828 = function() {
  __assign828 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign828.apply(this, arguments);
};
function SvgNetworkRight(passedProps, svgRef) {
  var context = React829.useContext(IconoirContext);
  var props = __assign828(__assign828({}, context), passedProps);
  return React829.createElement(
    "svg",
    __assign828({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React829.createElement("rect", { width: 7, height: 5, rx: 0.6, transform: "matrix(0 -1 -1 0 22 21)", stroke: "currentColor" }),
    React829.createElement("rect", { width: 7, height: 5, rx: 0.6, transform: "matrix(0 -1 -1 0 7 15.5)", stroke: "currentColor" }),
    React829.createElement("rect", { width: 7, height: 5, rx: 0.6, transform: "matrix(0 -1 -1 0 22 10)", stroke: "currentColor" }),
    React829.createElement("path", { d: "M17 17.5h-3.5a2 2 0 01-2-2v-7a2 2 0 012-2H17M11.5 12H7", stroke: "currentColor" })
  );
}
var ForwardRef828 = React829.forwardRef(SvgNetworkRight);
var NetworkRight_default = ForwardRef828;

// node_modules/iconoir-react/dist/esm/Network.mjs
var React830 = __toESM(require_react(), 1);
var __assign829 = function() {
  __assign829 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign829.apply(this, arguments);
};
function SvgNetwork(passedProps, svgRef) {
  var context = React830.useContext(IconoirContext);
  var props = __assign829(__assign829({}, context), passedProps);
  return React830.createElement(
    "svg",
    __assign829({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React830.createElement("rect", { x: 3, y: 2, width: 7, height: 5, rx: 0.6, stroke: "currentColor" }),
    React830.createElement("rect", { x: 8.5, y: 17, width: 7, height: 5, rx: 0.6, stroke: "currentColor" }),
    React830.createElement("rect", { x: 14, y: 2, width: 7, height: 5, rx: 0.6, stroke: "currentColor" }),
    React830.createElement("path", { d: "M6.5 7v3.5a2 2 0 002 2h7a2 2 0 002-2V7M12 12.5V17", stroke: "currentColor" })
  );
}
var ForwardRef829 = React830.forwardRef(SvgNetwork);
var Network_default = ForwardRef829;

// node_modules/iconoir-react/dist/esm/NewTab.mjs
var React831 = __toESM(require_react(), 1);
var __assign830 = function() {
  __assign830 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign830.apply(this, arguments);
};
function SvgNewTab(passedProps, svgRef) {
  var context = React831.useContext(IconoirContext);
  var props = __assign830(__assign830({}, context), passedProps);
  return React831.createElement(
    "svg",
    __assign830({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React831.createElement("path", { d: "M2 19V5a2 2 0 012-2h16a2 2 0 012 2v14a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React831.createElement("path", { d: "M2 7h20M9 14h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef830 = React831.forwardRef(SvgNewTab);
var NewTab_default = ForwardRef830;

// node_modules/iconoir-react/dist/esm/NintendoSwitch.mjs
var React832 = __toESM(require_react(), 1);
var __assign831 = function() {
  __assign831 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign831.apply(this, arguments);
};
function SvgNintendoSwitch(passedProps, svgRef) {
  var context = React832.useContext(IconoirContext);
  var props = __assign831(__assign831({}, context), passedProps);
  return React832.createElement(
    "svg",
    __assign831({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React832.createElement("path", { d: "M2 17V7a4 4 0 014-4h3.9a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H6a4 4 0 01-4-4z", stroke: "currentColor" }),
    React832.createElement("path", { d: "M6.5 8a1 1 0 100-2 1 1 0 000 2zM17.5 14a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React832.createElement("path", { d: "M22 17V7a4 4 0 00-4-4h-3.9a.6.6 0 00-.6.6v16.8a.6.6 0 00.6.6H18a4 4 0 004-4z", stroke: "currentColor" })
  );
}
var ForwardRef831 = React832.forwardRef(SvgNintendoSwitch);
var NintendoSwitch_default = ForwardRef831;

// node_modules/iconoir-react/dist/esm/Nitrogen.mjs
var React833 = __toESM(require_react(), 1);
var __assign832 = function() {
  __assign832 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign832.apply(this, arguments);
};
function SvgNitrogen(passedProps, svgRef) {
  var context = React833.useContext(IconoirContext);
  var props = __assign832(__assign832({}, context), passedProps);
  return React833.createElement(
    "svg",
    __assign832({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React833.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React833.createElement("path", { d: "M10 16V8l4 8V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef832 = React833.forwardRef(SvgNitrogen);
var Nitrogen_default = ForwardRef832;

// node_modules/iconoir-react/dist/esm/NoAccessWindow.mjs
var React834 = __toESM(require_react(), 1);
var __assign833 = function() {
  __assign833 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign833.apply(this, arguments);
};
function SvgNoAccessWindow(passedProps, svgRef) {
  var context = React834.useContext(IconoirContext);
  var props = __assign833(__assign833({}, context), passedProps);
  return React834.createElement(
    "svg",
    __assign833({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React834.createElement("path", { d: "M12 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v8", stroke: "currentColor", strokeLinecap: "round" }),
    React834.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M21 16.05A3.5 3.5 0 1016 20.95m4.998-4.9A3.5 3.5 0 1116 20.95m5-4.9l-5 4.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef833 = React834.forwardRef(SvgNoAccessWindow);
var NoAccessWindow_default = ForwardRef833;

// node_modules/iconoir-react/dist/esm/NoBattery.mjs
var React835 = __toESM(require_react(), 1);
var __assign834 = function() {
  __assign834 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign834.apply(this, arguments);
};
function SvgNoBattery(passedProps, svgRef) {
  var context = React835.useContext(IconoirContext);
  var props = __assign834(__assign834({}, context), passedProps);
  return React835.createElement(
    "svg",
    __assign834({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React835.createElement("path", { d: "M3 3l18 18M23 10v4M5.5 6H3a2 2 0 00-2 2v8a2 2 0 002 2h14.5m2.5-3.5V8a2 2 0 00-2-2h-6.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef834 = React835.forwardRef(SvgNoBattery);
var NoBattery_default = ForwardRef834;

// node_modules/iconoir-react/dist/esm/NoCoin.mjs
var React836 = __toESM(require_react(), 1);
var __assign835 = function() {
  __assign835 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign835.apply(this, arguments);
};
function SvgNoCoin(passedProps, svgRef) {
  var context = React836.useContext(IconoirContext);
  var props = __assign835(__assign835({}, context), passedProps);
  return React836.createElement(
    "svg",
    __assign835({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React836.createElement("path", { d: "M4.623 5.248A9.964 9.964 0 002 12c0 5.523 4.477 10 10 10a9.962 9.962 0 006.615-2.5M21.302 15.678A9.974 9.974 0 0022 12c0-5.523-4.477-10-10-10-1.231 0-2.41.223-3.5.63", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React836.createElement("path", { d: "M9 15c.644.86 1.843 1.35 3 1.391 1.114.04 2.19-.336 2.697-1.198M12 16.391V18.5M9.5 9.5c0 1.181.852 1.665 1.886 2M15 8.5c-.685-.685-1.891-1.161-3-1.191V5.5M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef835 = React836.forwardRef(SvgNoCoin);
var NoCoin_default = ForwardRef835;

// node_modules/iconoir-react/dist/esm/NoCreditCard.mjs
var React837 = __toESM(require_react(), 1);
var __assign836 = function() {
  __assign836 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign836.apply(this, arguments);
};
function SvgNoCreditCard(passedProps, svgRef) {
  var context = React837.useContext(IconoirContext);
  var props = __assign836(__assign836({}, context), passedProps);
  return React837.createElement(
    "svg",
    __assign836({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React837.createElement("path", { d: "M6 9h3M3 3l18 18M22 9v8a2 2 0 01-2 2H4a2 2 0 01-2-2V7a2 2 0 012-2h1m17 4V7a2 2 0 00-2-2H10m12 4h-8M9 9H6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef836 = React837.forwardRef(SvgNoCreditCard);
var NoCreditCard_default = ForwardRef836;

// node_modules/iconoir-react/dist/esm/NoLink.mjs
var React838 = __toESM(require_react(), 1);
var __assign837 = function() {
  __assign837 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign837.apply(this, arguments);
};
function SvgNoLink(passedProps, svgRef) {
  var context = React838.useContext(IconoirContext);
  var props = __assign837(__assign837({}, context), passedProps);
  return React838.createElement(
    "svg",
    __assign837({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React838.createElement("path", { d: "M14 11.998C14 9.506 11.683 7 8.857 7H7.143C4.303 7 2 9.238 2 11.998c0 2.378 1.71 4.368 4 4.873a5.3 5.3 0 001.143.124M16.857 7c.393 0 .775.043 1.143.124 2.29.505 4 2.495 4 4.874a4.92 4.92 0 01-1.634 3.653M10 11.998c0 2.491 2.317 4.997 5.143 4.997M18 22.243l2.121-2.122m0 0L22.243 18m-2.122 2.121L18 18m2.121 2.121l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef837 = React838.forwardRef(SvgNoLink);
var NoLink_default = ForwardRef837;

// node_modules/iconoir-react/dist/esm/NoLock.mjs
var React839 = __toESM(require_react(), 1);
var __assign838 = function() {
  __assign838 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign838.apply(this, arguments);
};
function SvgNoLock(passedProps, svgRef) {
  var context = React839.useContext(IconoirContext);
  var props = __assign838(__assign838({}, context), passedProps);
  return React839.createElement(
    "svg",
    __assign838({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React839.createElement("path", { d: "M11.5 12H6.6a.6.6 0 00-.6.6v6.8a.6.6 0 00.6.6h10.8a.6.6 0 00.6-.6v-.9M16 12V8c0-1.333-.8-4-4-4-.747 0-1.363.145-1.869.385M16 12h1.4a.6.6 0 01.6.6v.4M8 8v4M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef838 = React839.forwardRef(SvgNoLock);
var NoLock_default = ForwardRef838;

// node_modules/iconoir-react/dist/esm/NoSmokingCircle.mjs
var React840 = __toESM(require_react(), 1);
var __assign839 = function() {
  __assign839 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign839.apply(this, arguments);
};
function SvgNoSmokingCircle(passedProps, svgRef) {
  var context = React840.useContext(IconoirContext);
  var props = __assign839(__assign839({}, context), passedProps);
  return React840.createElement(
    "svg",
    __assign839({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React840.createElement("path", { d: "M15 12v3M15 9c0-1-.714-2-2.143-2v0A2.857 2.857 0 0110 4.143V3M18 9V4M18 12v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React840.createElement("path", { d: "M15 15H6.6a.6.6 0 01-.6-.6v-1.8a.6.6 0 01.6-.6H12", stroke: "currentColor" }),
    React840.createElement("path", { d: "M5 5l14 14M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React840.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef839 = React840.forwardRef(SvgNoSmokingCircle);
var NoSmokingCircle_default = ForwardRef839;

// node_modules/iconoir-react/dist/esm/NoSmoking.mjs
var React841 = __toESM(require_react(), 1);
var __assign840 = function() {
  __assign840 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign840.apply(this, arguments);
};
function SvgNoSmoking(passedProps, svgRef) {
  var context = React841.useContext(IconoirContext);
  var props = __assign840(__assign840({}, context), passedProps);
  return React841.createElement(
    "svg",
    __assign840({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React841.createElement("path", { d: "M18 15v3M18 11c0-1-1-2-3-2h-1a3 3 0 01-3-3V2M22 11c0-6-4-6-4-6s4 1 4-3M22 15v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React841.createElement("path", { d: "M2.6 18H18l-3-3H2.6a.6.6 0 00-.6.6v1.8a.6.6 0 00.6.6z", stroke: "currentColor" }),
    React841.createElement("path", { d: "M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef840 = React841.forwardRef(SvgNoSmoking);
var NoSmoking_default = ForwardRef840;

// node_modules/iconoir-react/dist/esm/NonBinary.mjs
var React842 = __toESM(require_react(), 1);
var __assign841 = function() {
  __assign841 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign841.apply(this, arguments);
};
function SvgNonBinary(passedProps, svgRef) {
  var context = React842.useContext(IconoirContext);
  var props = __assign841(__assign841({}, context), passedProps);
  return React842.createElement(
    "svg",
    __assign841({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React842.createElement("path", { d: "M12 9a6 6 0 110 12 6 6 0 010-12zm0 0V3M9 4l6 3M15 4L9 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef841 = React842.forwardRef(SvgNonBinary);
var NonBinary_default = ForwardRef841;

// node_modules/iconoir-react/dist/esm/Notes.mjs
var React843 = __toESM(require_react(), 1);
var __assign842 = function() {
  __assign842 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign842.apply(this, arguments);
};
function SvgNotes(passedProps, svgRef) {
  var context = React843.useContext(IconoirContext);
  var props = __assign842(__assign842({}, context), passedProps);
  return React843.createElement(
    "svg",
    __assign842({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React843.createElement("path", { d: "M8 14h8M8 10h2M8 18h4M10 3H6a2 2 0 00-2 2v15a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2h-3.5M10 3V1m0 2v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef842 = React843.forwardRef(SvgNotes);
var Notes_default = ForwardRef842;

// node_modules/iconoir-react/dist/esm/NpmSquare.mjs
var React844 = __toESM(require_react(), 1);
var __assign843 = function() {
  __assign843 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign843.apply(this, arguments);
};
function SvgNpmSquare(passedProps, svgRef) {
  var context = React844.useContext(IconoirContext);
  var props = __assign843(__assign843({}, context), passedProps);
  return React844.createElement(
    "svg",
    __assign843({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React844.createElement("path", { d: "M8 16h8V8H8v8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React844.createElement("path", { d: "M13 11v5", stroke: "currentColor", strokeLinecap: "round" }),
    React844.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef843 = React844.forwardRef(SvgNpmSquare);
var NpmSquare_default = ForwardRef843;

// node_modules/iconoir-react/dist/esm/Npm.mjs
var React845 = __toESM(require_react(), 1);
var __assign844 = function() {
  __assign844 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign844.apply(this, arguments);
};
function SvgNpm(passedProps, svgRef) {
  var context = React845.useContext(IconoirContext);
  var props = __assign844(__assign844({}, context), passedProps);
  return React845.createElement(
    "svg",
    __assign844({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React845.createElement("path", { d: "M1 8h22v7H11v2H7.5v-2H1V8zM7.5 8v7M13.5 8v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React845.createElement("path", { d: "M18 11v4M5 11v4M11 11v1M20.5 11v4", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef844 = React845.forwardRef(SvgNpm);
var Npm_default = ForwardRef844;

// node_modules/iconoir-react/dist/esm/NumberedListLeft.mjs
var React846 = __toESM(require_react(), 1);
var __assign845 = function() {
  __assign845 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign845.apply(this, arguments);
};
function SvgNumberedListLeft(passedProps, svgRef) {
  var context = React846.useContext(IconoirContext);
  var props = __assign845(__assign845({}, context), passedProps);
  return React846.createElement(
    "svg",
    __assign845({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React846.createElement("path", { d: "M9 5h12M5 7V3L3.5 4.5M5.5 14h-2l1.905-2.963a.428.428 0 00.072-.323C5.42 10.456 5.216 10 4.5 10c-1 0-1 .889-1 .889s0 0 0 0v.222M4 19h.5a1 1 0 011 1v0a1 1 0 01-1 1h-1M3.5 17h2L4 19M9 12h12M9 19h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef845 = React846.forwardRef(SvgNumberedListLeft);
var NumberedListLeft_default = ForwardRef845;

// node_modules/iconoir-react/dist/esm/NumberedListRight.mjs
var React847 = __toESM(require_react(), 1);
var __assign846 = function() {
  __assign846 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign846.apply(this, arguments);
};
function SvgNumberedListRight(passedProps, svgRef) {
  var context = React847.useContext(IconoirContext);
  var props = __assign846(__assign846({}, context), passedProps);
  return React847.createElement(
    "svg",
    __assign846({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React847.createElement("path", { d: "M3 5h12M20.5 7V3L19 4.5M21 14h-2l1.905-2.963a.428.428 0 00.072-.323C20.92 10.456 20.716 10 20 10c-1 0-1 .889-1 .889s0 0 0 0v.222M19.5 19h.5a1 1 0 011 1v0a1 1 0 01-1 1h-1M19 17h2l-1.5 2M3 12h12M3 19h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef846 = React847.forwardRef(SvgNumberedListRight);
var NumberedListRight_default = ForwardRef846;

// node_modules/iconoir-react/dist/esm/Octagon.mjs
var React848 = __toESM(require_react(), 1);
var __assign847 = function() {
  __assign847 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign847.apply(this, arguments);
};
function SvgOctagon(passedProps, svgRef) {
  var context = React848.useContext(IconoirContext);
  var props = __assign847(__assign847({}, context), passedProps);
  return React848.createElement(
    "svg",
    __assign847({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React848.createElement("path", { d: "M11.77 1.095a.6.6 0 01.46 0l7.319 3.032a.6.6 0 01.324.324l3.032 7.32a.6.6 0 010 .459l-3.032 7.319a.6.6 0 01-.324.324l-7.32 3.032a.6.6 0 01-.459 0l-7.319-3.032a.6.6 0 01-.324-.324l-3.032-7.32a.6.6 0 010-.459l3.032-7.319a.6.6 0 01.324-.324l7.32-3.032z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef847 = React848.forwardRef(SvgOctagon);
var Octagon_default = ForwardRef847;

// node_modules/iconoir-react/dist/esm/OffTag.mjs
var React849 = __toESM(require_react(), 1);
var __assign848 = function() {
  __assign848 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign848.apply(this, arguments);
};
function SvgOffTag(passedProps, svgRef) {
  var context = React849.useContext(IconoirContext);
  var props = __assign848(__assign848({}, context), passedProps);
  return React849.createElement(
    "svg",
    __assign848({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React849.createElement("path", { d: "M1 15V9a6 6 0 016-6h10a6 6 0 016 6v6a6 6 0 01-6 6H7a6 6 0 01-6-6z", stroke: "currentColor" }),
    React849.createElement("path", { d: "M7 9a3 3 0 110 6 3 3 0 010-6z", stroke: "currentColor" }),
    React849.createElement("path", { d: "M12 15V9h3M17 15V9h3M12 12h2.572M17 12h2.572", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef848 = React849.forwardRef(SvgOffTag);
var OffTag_default = ForwardRef848;

// node_modules/iconoir-react/dist/esm/OilIndustry.mjs
var React850 = __toESM(require_react(), 1);
var __assign849 = function() {
  __assign849 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign849.apply(this, arguments);
};
function SvgOilIndustry(passedProps, svgRef) {
  var context = React850.useContext(IconoirContext);
  var props = __assign849(__assign849({}, context), passedProps);
  return React850.createElement(
    "svg",
    __assign849({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React850.createElement("path", { d: "M18 10c0-1-1-2-3-2h-1a3 3 0 01-3-3V2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React850.createElement("path", { d: "M9 10.8C9 9.033 6 6 6 6s-3 3.033-3 4.8S4.343 14 6 14s3-1.433 3-3.2z", stroke: "currentColor" }),
    React850.createElement("path", { d: "M18 21h3v-9h-3v4.5m0 4.5v-4.5m0 4.5h-7.5v-4.5l4-2.5 3.5 2.5M21 10c0-6-4-6-4-6s4 .5 4-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef849 = React850.forwardRef(SvgOilIndustry);
var OilIndustry_default = ForwardRef849;

// node_modules/iconoir-react/dist/esm/Okrs.mjs
var React851 = __toESM(require_react(), 1);
var __assign850 = function() {
  __assign850 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign850.apply(this, arguments);
};
function SvgOkrs(passedProps, svgRef) {
  var context = React851.useContext(IconoirContext);
  var props = __assign850(__assign850({}, context), passedProps);
  return React851.createElement(
    "svg",
    __assign850({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React851.createElement("path", { d: "M18 14a2 2 0 100-4 2 2 0 000 4zM18 7a2 2 0 100-4 2 2 0 000 4zM3 5h10M3 12h10M3 19h10M16 21.243l2.121-2.122m0 0L20.243 17m-2.122 2.121L16 17m2.121 2.121l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef850 = React851.forwardRef(SvgOkrs);
var Okrs_default = ForwardRef850;

// node_modules/iconoir-react/dist/esm/OnTag.mjs
var React852 = __toESM(require_react(), 1);
var __assign851 = function() {
  __assign851 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign851.apply(this, arguments);
};
function SvgOnTag(passedProps, svgRef) {
  var context = React852.useContext(IconoirContext);
  var props = __assign851(__assign851({}, context), passedProps);
  return React852.createElement(
    "svg",
    __assign851({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React852.createElement("path", { d: "M1 15V9a6 6 0 016-6h10a6 6 0 016 6v6a6 6 0 01-6 6H7a6 6 0 01-6-6z", stroke: "currentColor" }),
    React852.createElement("path", { d: "M9 9a3 3 0 110 6 3 3 0 010-6z", stroke: "currentColor" }),
    React852.createElement("path", { d: "M14 15V9l4 6V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef851 = React852.forwardRef(SvgOnTag);
var OnTag_default = ForwardRef851;

// node_modules/iconoir-react/dist/esm/OneFingerSelectHandGesture.mjs
var React853 = __toESM(require_react(), 1);
var __assign852 = function() {
  __assign852 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign852.apply(this, arguments);
};
function SvgOneFingerSelectHandGesture(passedProps, svgRef) {
  var context = React853.useContext(IconoirContext);
  var props = __assign852(__assign852({}, context), passedProps);
  return React853.createElement(
    "svg",
    __assign852({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React853.createElement("path", { d: "M7.5 12l-2.004 2.672a2 2 0 00.126 2.552l3.784 4.128c.378.413.912.648 1.473.648H15.5c2.4 0 4-2 4-4 0 0 0 0 0 0V9.429M16.5 10v-.571c0-2.286 3-2.286 3 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React853.createElement("path", { d: "M13.5 10V8.286c0-2.286 3-2.286 3 0V10M10.5 10V7.5c0-2.286 3-2.286 3 0 0 0 0 0 0 0V10M10.5 10V7.5 3.499A1.5 1.5 0 009 2v0a1.5 1.5 0 00-1.5 1.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef852 = React853.forwardRef(SvgOneFingerSelectHandGesture);
var OneFingerSelectHandGesture_default = ForwardRef852;

// node_modules/iconoir-react/dist/esm/OnePointCircle.mjs
var React854 = __toESM(require_react(), 1);
var __assign853 = function() {
  __assign853 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign853.apply(this, arguments);
};
function SvgOnePointCircle(passedProps, svgRef) {
  var context = React854.useContext(IconoirContext);
  var props = __assign853(__assign853({}, context), passedProps);
  return React854.createElement(
    "svg",
    __assign853({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React854.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React854.createElement("path", { d: "M12 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React854.createElement("path", { d: "M19 19l-1.5-1.5M15.5 15.5l-1-1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef853 = React854.forwardRef(SvgOnePointCircle);
var OnePointCircle_default = ForwardRef853;

// node_modules/iconoir-react/dist/esm/OpenBook.mjs
var React855 = __toESM(require_react(), 1);
var __assign854 = function() {
  __assign854 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign854.apply(this, arguments);
};
function SvgOpenBook(passedProps, svgRef) {
  var context = React855.useContext(IconoirContext);
  var props = __assign854(__assign854({}, context), passedProps);
  return React855.createElement(
    "svg",
    __assign854({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React855.createElement("path", { d: "M12 21V7a2 2 0 012-2h7.4a.6.6 0 01.6.6v13.114M12 21V7a2 2 0 00-2-2H2.6a.6.6 0 00-.6.6v13.114M14 19h8M10 19H2", stroke: "currentColor", strokeLinecap: "round" }),
    React855.createElement("path", { d: "M12 21a2 2 0 012-2M12 21a2 2 0 00-2-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef854 = React855.forwardRef(SvgOpenBook);
var OpenBook_default = ForwardRef854;

// node_modules/iconoir-react/dist/esm/OpenInBrowser.mjs
var React856 = __toESM(require_react(), 1);
var __assign855 = function() {
  __assign855 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign855.apply(this, arguments);
};
function SvgOpenInBrowser(passedProps, svgRef) {
  var context = React856.useContext(IconoirContext);
  var props = __assign855(__assign855({}, context), passedProps);
  return React856.createElement(
    "svg",
    __assign855({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React856.createElement("path", { d: "M8 21h12.4a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6V16M10 6h8M6 6h1M3.5 20.5L12 12m0 0v4m0-4H8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef855 = React856.forwardRef(SvgOpenInBrowser);
var OpenInBrowser_default = ForwardRef855;

// node_modules/iconoir-react/dist/esm/OpenInWindow.mjs
var React857 = __toESM(require_react(), 1);
var __assign856 = function() {
  __assign856 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign856.apply(this, arguments);
};
function SvgOpenInWindow(passedProps, svgRef) {
  var context = React857.useContext(IconoirContext);
  var props = __assign856(__assign856({}, context), passedProps);
  return React857.createElement(
    "svg",
    __assign856({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React857.createElement("path", { d: "M8 21h12.4a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6V16M3.5 20.5L12 12m0 0v4m0-4H8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef856 = React857.forwardRef(SvgOpenInWindow);
var OpenInWindow_default = ForwardRef856;

// node_modules/iconoir-react/dist/esm/OpenNewWindow.mjs
var React858 = __toESM(require_react(), 1);
var __assign857 = function() {
  __assign857 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign857.apply(this, arguments);
};
function SvgOpenNewWindow(passedProps, svgRef) {
  var context = React858.useContext(IconoirContext);
  var props = __assign857(__assign857({}, context), passedProps);
  return React858.createElement(
    "svg",
    __assign857({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React858.createElement("path", { d: "M21 3h-6m6 0l-9 9m9-9v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React858.createElement("path", { d: "M21 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h6", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef857 = React858.forwardRef(SvgOpenNewWindow);
var OpenNewWindow_default = ForwardRef857;

// node_modules/iconoir-react/dist/esm/OpenSelectHandGesture.mjs
var React859 = __toESM(require_react(), 1);
var __assign858 = function() {
  __assign858 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign858.apply(this, arguments);
};
function SvgOpenSelectHandGesture(passedProps, svgRef) {
  var context = React859.useContext(IconoirContext);
  var props = __assign858(__assign858({}, context), passedProps);
  return React859.createElement(
    "svg",
    __assign858({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React859.createElement("path", { d: "M8 14.571l-1.823-1.736a1.558 1.558 0 00-2.247.103v0a1.558 1.558 0 00.035 2.092l5.942 6.338c.379.403.906.632 1.459.632H16c2.4 0 4-2 4-4 0 0 0 0 0 0V9.429", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React859.createElement("path", { d: "M17 10v-.571c0-2.286 3-2.286 3 0M14 10V8.286C14 6 17 6 17 8.286V10M11 10V7.5c0-2.286 3-2.286 3 0 0 0 0 0 0 0V10M8 14.571V3.5A1.5 1.5 0 019.5 2v0c.828 0 1.5.67 1.5 1.499V10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef858 = React859.forwardRef(SvgOpenSelectHandGesture);
var OpenSelectHandGesture_default = ForwardRef858;

// node_modules/iconoir-react/dist/esm/OpenVpn.mjs
var React860 = __toESM(require_react(), 1);
var __assign859 = function() {
  __assign859 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign859.apply(this, arguments);
};
function SvgOpenVpn(passedProps, svgRef) {
  var context = React860.useContext(IconoirContext);
  var props = __assign859(__assign859({}, context), passedProps);
  return React860.createElement(
    "svg",
    __assign859({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React860.createElement("path", { d: "M10.835 15.29l.738.136-.738-.137zm-.358-.708l.381-.646-.38.646zm-.275 7.247l.138-.738-.138.738zm-.452-.678l.738.136-.738-.136zm7.099-1.337l.737-.139-.737.14zm.872.378l-.43-.615.43.615zm-9.85-4.208l-.736-.139.737.14zm-.139-.52l-.581.474.581-.474zm5.791-.882l.382.646-.382-.646zm-.358.707l.738-.136-.738.136zm3.103.175l-.581-.473.581.473zm-.14.52l.737-.139-.737.14zm-1.878 5.167l-.737.137.737-.137zm-.453.679l.138.737-.138-.737zM6.28 20.192l-.43.614.43-.614zM2.75 12A9.25 9.25 0 0112 2.75v-1.5C6.062 1.25 1.25 6.062 1.25 12h1.5zm3.959 7.577C4.315 17.902 2.75 15.137 2.75 12h-1.5c0 3.65 1.824 6.865 4.599 8.806l.86-1.229zm.426-3.732l-.721 3.83 1.474.278.72-3.83-1.473-.278zM5.75 12c0 1.494.526 2.865 1.4 3.938l1.163-.947A4.713 4.713 0 017.25 12h-1.5zM12 5.75A6.25 6.25 0 005.75 12h1.5A4.75 4.75 0 0112 7.25v-1.5zM18.25 12A6.25 6.25 0 0012 5.75v1.5A4.75 4.75 0 0116.75 12h1.5zm-1.4 3.938A6.213 6.213 0 0018.25 12h-1.5a4.713 4.713 0 01-1.063 2.99l1.162.948zm.736 3.737l-.72-3.83-1.475.278.72 3.83 1.475-.277zM21.25 12c0 3.137-1.565 5.902-3.959 7.577l.86 1.23C20.926 18.864 22.75 15.65 22.75 12h-1.5zM12 2.75A9.25 9.25 0 0121.25 12h1.5c0-5.938-4.812-10.75-10.75-10.75v1.5zM15.75 12A3.75 3.75 0 0012 8.25v1.5A2.25 2.25 0 0114.25 12h1.5zm-1.845 3.228A3.745 3.745 0 0015.75 12h-1.5c0 .823-.443 1.544-1.108 1.936l.763 1.292zm1.083 5.787l-1.085-5.862-1.475.273 1.085 5.862 1.475-.273zM12 22.75c.665 0 1.31-.067 1.935-.183l-.275-1.474a9.036 9.036 0 01-1.66.157v1.5zm-1.937-.184c.625.117 1.271.184 1.937.184v-1.5a8.958 8.958 0 01-1.66-.159l-.277 1.475zm.035-7.413l-1.085 5.861 1.475.273 1.085-5.861-1.475-.273zM8.25 12c0 1.377.744 2.578 1.846 3.228l.762-1.292A2.245 2.245 0 019.75 12h-1.5zM12 8.25A3.75 3.75 0 008.25 12h1.5A2.25 2.25 0 0112 9.75v-1.5zm-.427 7.176c.122-.662-.259-1.22-.715-1.49l-.762 1.292a.053.053 0 01.01.008c.003.003.002.003 0-.001a.1.1 0 01-.009-.03.153.153 0 010-.052l1.476.273zm-1.233 5.665c.119.023.16.129.148.196l-1.475-.273c-.129.694.305 1.412 1.05 1.552l.277-1.474zm5.772-1.138c.168.892 1.212 1.432 2.04.853l-.86-1.229a.21.21 0 01.197-.019c.052.023.088.07.097.117l-1.474.278zm-7.503-3.83c.08-.423-.051-.833-.296-1.133l-1.162.948c-.007-.008-.026-.04-.016-.093l1.474.278zm4.533-2.187c-.456.27-.837.828-.714 1.49l1.475-.273a.153.153 0 010 .053.1.1 0 01-.009.029c-.002.004-.003.004 0 .001a.05.05 0 01.01-.008l-.762-1.292zm2.545 1.055c-.245.3-.375.709-.296 1.132l1.474-.278c.01.054-.009.085-.016.093l-1.162-.947zm-2.174 6.297a.174.174 0 01.147-.195l.275 1.474c.745-.139 1.181-.857 1.053-1.552l-1.475.273zm-7.664-.482c.827.579 1.871.038 2.04-.853l-1.475-.277a.166.166 0 01.097-.118.21.21 0 01.198.02l-.86 1.228z", fill: "currentColor" })
  );
}
var ForwardRef859 = React860.forwardRef(SvgOpenVpn);
var OpenVpn_default = ForwardRef859;

// node_modules/iconoir-react/dist/esm/OrangeHalf.mjs
var React861 = __toESM(require_react(), 1);
var __assign860 = function() {
  __assign860 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign860.apply(this, arguments);
};
function SvgOrangeHalf(passedProps, svgRef) {
  var context = React861.useContext(IconoirContext);
  var props = __assign860(__assign860({}, context), passedProps);
  return React861.createElement(
    "svg",
    __assign860({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React861.createElement("path", { d: "M12 22c5.5 0 10-4.5 10-10S17.5 2 12 2m0 20C6.5 22 2 17.5 2 12S6.5 2 12 2m0 20V12m0-10v10m0 0l5 5.5M12 12l5-5m-5 5h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef860 = React861.forwardRef(SvgOrangeHalf);
var OrangeHalf_default = ForwardRef860;

// node_modules/iconoir-react/dist/esm/OrangeSliceAlt.mjs
var React862 = __toESM(require_react(), 1);
var __assign861 = function() {
  __assign861 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign861.apply(this, arguments);
};
function SvgOrangeSliceAlt(passedProps, svgRef) {
  var context = React862.useContext(IconoirContext);
  var props = __assign861(__assign861({}, context), passedProps);
  return React862.createElement(
    "svg",
    __assign861({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React862.createElement("path", { d: "M13.39 10.11L5.61 2.334c-4.295 4.296-4.295 11.26 0 15.556 4.296 4.296 11.26 4.296 15.557 0l-7.778-7.778zm0 0l.353 8.133m-.354-8.132H5.612m7.779 0l-5.304 5.303", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef861 = React862.forwardRef(SvgOrangeSliceAlt);
var OrangeSliceAlt_default = ForwardRef861;

// node_modules/iconoir-react/dist/esm/OrangeSlice.mjs
var React863 = __toESM(require_react(), 1);
var __assign862 = function() {
  __assign862 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign862.apply(this, arguments);
};
function SvgOrangeSlice(passedProps, svgRef) {
  var context = React863.useContext(IconoirContext);
  var props = __assign862(__assign862({}, context), passedProps);
  return React863.createElement(
    "svg",
    __assign862({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React863.createElement("path", { d: "M10.613 10.11l7.778-7.777c4.295 4.296 4.295 11.26 0 15.556-4.296 4.296-11.261 4.296-15.557 0l7.779-7.778zm0 0l-.354 8.133m.354-8.132h7.778m-7.778 0l5.303 5.303", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef862 = React863.forwardRef(SvgOrangeSlice);
var OrangeSlice_default = ForwardRef862;

// node_modules/iconoir-react/dist/esm/OrganicFoodSquare.mjs
var React864 = __toESM(require_react(), 1);
var __assign863 = function() {
  __assign863 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign863.apply(this, arguments);
};
function SvgOrganicFoodSquare(passedProps, svgRef) {
  var context = React864.useContext(IconoirContext);
  var props = __assign863(__assign863({}, context), passedProps);
  return React864.createElement(
    "svg",
    __assign863({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React864.createElement("path", { d: "M9 18s.9-3.741 3-6M16.186 7.241l.374 3.89c.243 2.523-1.649 4.77-4.172 5.012-2.475.238-4.718-1.571-4.956-4.047a4.503 4.503 0 014.05-4.914l4.147-.4a.51.51 0 01.557.46z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React864.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef863 = React864.forwardRef(SvgOrganicFoodSquare);
var OrganicFoodSquare_default = ForwardRef863;

// node_modules/iconoir-react/dist/esm/OrganicFood.mjs
var React865 = __toESM(require_react(), 1);
var __assign864 = function() {
  __assign864 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign864.apply(this, arguments);
};
function SvgOrganicFood(passedProps, svgRef) {
  var context = React865.useContext(IconoirContext);
  var props = __assign864(__assign864({}, context), passedProps);
  return React865.createElement(
    "svg",
    __assign864({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React865.createElement("path", { d: "M9 18s.9-3.741 3-6M16.186 7.241l.374 3.89c.243 2.523-1.649 4.77-4.172 5.012-2.475.238-4.718-1.571-4.956-4.047a4.503 4.503 0 014.05-4.914l4.147-.4a.51.51 0 01.557.46z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React865.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef864 = React865.forwardRef(SvgOrganicFood);
var OrganicFood_default = ForwardRef864;

// node_modules/iconoir-react/dist/esm/OrthogonalView.mjs
var React866 = __toESM(require_react(), 1);
var __assign865 = function() {
  __assign865 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign865.apply(this, arguments);
};
function SvgOrthogonalView(passedProps, svgRef) {
  var context = React866.useContext(IconoirContext);
  var props = __assign865(__assign865({}, context), passedProps);
  return React866.createElement(
    "svg",
    __assign865({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React866.createElement("path", { d: "M3 21V3h18v18H3zM3 16.5h18M3 12h18M3 7.5h18M16.5 3v18M12 3v18M7.5 3v18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef865 = React866.forwardRef(SvgOrthogonalView);
var OrthogonalView_default = ForwardRef865;

// node_modules/iconoir-react/dist/esm/Oxygen.mjs
var React867 = __toESM(require_react(), 1);
var __assign866 = function() {
  __assign866 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign866.apply(this, arguments);
};
function SvgOxygen(passedProps, svgRef) {
  var context = React867.useContext(IconoirContext);
  var props = __assign866(__assign866({}, context), passedProps);
  return React867.createElement(
    "svg",
    __assign866({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React867.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React867.createElement("path", { d: "M12.2 8h-.4A1.8 1.8 0 0010 9.8v4.4a1.8 1.8 0 001.8 1.8h.4a1.8 1.8 0 001.8-1.8V9.8A1.8 1.8 0 0012.2 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef866 = React867.forwardRef(SvgOxygen);
var Oxygen_default = ForwardRef866;

// node_modules/iconoir-react/dist/esm/PackageLock.mjs
var React868 = __toESM(require_react(), 1);
var __assign867 = function() {
  __assign867 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign867.apply(this, arguments);
};
function SvgPackageLock(passedProps, svgRef) {
  var context = React868.useContext(IconoirContext);
  var props = __assign867(__assign867({}, context), passedProps);
  return React868.createElement(
    "svg",
    __assign867({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React868.createElement("path", { d: "M14 20H6a2 2 0 01-2-2V6a2 2 0 012-2h12a2 2 0 012 2v6M12 9V4M21.167 18.5h.233a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 01.6-.6h.233m3.334 0v-1.75c0-.583-.334-1.75-1.667-1.75s-1.667 1.167-1.667 1.75v1.75m3.334 0h-3.334", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef867 = React868.forwardRef(SvgPackageLock);
var PackageLock_default = ForwardRef867;

// node_modules/iconoir-react/dist/esm/Package.mjs
var React869 = __toESM(require_react(), 1);
var __assign868 = function() {
  __assign868 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign868.apply(this, arguments);
};
function SvgPackage(passedProps, svgRef) {
  var context = React869.useContext(IconoirContext);
  var props = __assign868(__assign868({}, context), passedProps);
  return React869.createElement(
    "svg",
    __assign868({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React869.createElement("path", { d: "M20 6v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2h12a2 2 0 012 2zM12 9V4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef868 = React869.forwardRef(SvgPackage);
var Package_default = ForwardRef868;

// node_modules/iconoir-react/dist/esm/Packages.mjs
var React870 = __toESM(require_react(), 1);
var __assign869 = function() {
  __assign869 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign869.apply(this, arguments);
};
function SvgPackages(passedProps, svgRef) {
  var context = React870.useContext(IconoirContext);
  var props = __assign869(__assign869({}, context), passedProps);
  return React870.createElement(
    "svg",
    __assign869({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React870.createElement("path", { d: "M10 15v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4a2 2 0 012-2h4a2 2 0 012 2zM16 5v4a2 2 0 01-2 2h-4a2 2 0 01-2-2V5a2 2 0 012-2h4a2 2 0 012 2zM22 15v4a2 2 0 01-2 2h-4a2 2 0 01-2-2v-4a2 2 0 012-2h4a2 2 0 012 2zM6 16v-3M12 6V3M18 16v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef869 = React870.forwardRef(SvgPackages);
var Packages_default = ForwardRef869;

// node_modules/iconoir-react/dist/esm/Pacman.mjs
var React871 = __toESM(require_react(), 1);
var __assign870 = function() {
  __assign870 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign870.apply(this, arguments);
};
function SvgPacman(passedProps, svgRef) {
  var context = React871.useContext(IconoirContext);
  var props = __assign870(__assign870({}, context), passedProps);
  return React871.createElement(
    "svg",
    __assign870({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React871.createElement("path", { d: "M16 12l.011.01M19 12l.011.01M22 12l.011.01M2 12c0 5.523 4.477 10 10 10a9.985 9.985 0 008-3.999L12 12l8-6.001A9.985 9.985 0 0012 2C6.477 2 2 6.477 2 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef870 = React871.forwardRef(SvgPacman);
var Pacman_default = ForwardRef870;

// node_modules/iconoir-react/dist/esm/PageDown.mjs
var React872 = __toESM(require_react(), 1);
var __assign871 = function() {
  __assign871 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign871.apply(this, arguments);
};
function SvgPageDown(passedProps, svgRef) {
  var context = React872.useContext(IconoirContext);
  var props = __assign871(__assign871({}, context), passedProps);
  return React872.createElement(
    "svg",
    __assign871({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React872.createElement("path", { d: "M8.5 11l3.5 3.5 3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React872.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef871 = React872.forwardRef(SvgPageDown);
var PageDown_default = ForwardRef871;

// node_modules/iconoir-react/dist/esm/PageEdit.mjs
var React873 = __toESM(require_react(), 1);
var __assign872 = function() {
  __assign872 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign872.apply(this, arguments);
};
function SvgPageEdit(passedProps, svgRef) {
  var context = React873.useContext(IconoirContext);
  var props = __assign872(__assign872({}, context), passedProps);
  return React873.createElement(
    "svg",
    __assign872({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React873.createElement("path", { d: "M20 12V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H11M8 10h8M8 6h4m-4 8h3M17.954 16.94l1-1a1.121 1.121 0 011.586 0v0a1.121 1.121 0 010 1.585l-1 1m-1.586-1.586l-2.991 2.991a1 1 0 00-.28.553l-.244 1.557 1.557-.243a1 1 0 00.553-.28l2.99-2.992m-1.585-1.586l1.586 1.586", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React873.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef872 = React873.forwardRef(SvgPageEdit);
var PageEdit_default = ForwardRef872;

// node_modules/iconoir-react/dist/esm/PageFlip.mjs
var React874 = __toESM(require_react(), 1);
var __assign873 = function() {
  __assign873 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign873.apply(this, arguments);
};
function SvgPageFlip(passedProps, svgRef) {
  var context = React874.useContext(IconoirContext);
  var props = __assign873(__assign873({}, context), passedProps);
  return React874.createElement(
    "svg",
    __assign873({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React874.createElement("path", { d: "M12 11h5M12 7h5M8 15V3.6a.6.6 0 01.6-.6h11.8a.6.6 0 01.6.6V17a4 4 0 01-4 4v0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React874.createElement("path", { d: "M5 15h7.4c.331 0 .603.267.63.597C13.153 17.115 13.78 21 17 21H6a3 3 0 01-3-3v-1a2 2 0 012-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef873 = React874.forwardRef(SvgPageFlip);
var PageFlip_default = ForwardRef873;

// node_modules/iconoir-react/dist/esm/PageLeft.mjs
var React875 = __toESM(require_react(), 1);
var __assign874 = function() {
  __assign874 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign874.apply(this, arguments);
};
function SvgPageLeft(passedProps, svgRef) {
  var context = React875.useContext(IconoirContext);
  var props = __assign874(__assign874({}, context), passedProps);
  return React875.createElement(
    "svg",
    __assign874({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React875.createElement("path", { d: "M13 8.5L9.5 12l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React875.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef874 = React875.forwardRef(SvgPageLeft);
var PageLeft_default = ForwardRef874;

// node_modules/iconoir-react/dist/esm/PageRight.mjs
var React876 = __toESM(require_react(), 1);
var __assign875 = function() {
  __assign875 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign875.apply(this, arguments);
};
function SvgPageRight(passedProps, svgRef) {
  var context = React876.useContext(IconoirContext);
  var props = __assign875(__assign875({}, context), passedProps);
  return React876.createElement(
    "svg",
    __assign875({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React876.createElement("path", { d: "M11 8.5l3.5 3.5-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React876.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef875 = React876.forwardRef(SvgPageRight);
var PageRight_default = ForwardRef875;

// node_modules/iconoir-react/dist/esm/PageSearch.mjs
var React877 = __toESM(require_react(), 1);
var __assign876 = function() {
  __assign876 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign876.apply(this, arguments);
};
function SvgPageSearch(passedProps, svgRef) {
  var context = React877.useContext(IconoirContext);
  var props = __assign876(__assign876({}, context), passedProps);
  return React877.createElement(
    "svg",
    __assign876({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React877.createElement("path", { d: "M20 12V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H11M8 10h8M8 6h4m-4 8h3M20.5 20.5L22 22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React877.createElement("path", { d: "M15 18a3 3 0 106 0 3 3 0 00-6 0zM16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef876 = React877.forwardRef(SvgPageSearch);
var PageSearch_default = ForwardRef876;

// node_modules/iconoir-react/dist/esm/PageStar.mjs
var React878 = __toESM(require_react(), 1);
var __assign877 = function() {
  __assign877 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign877.apply(this, arguments);
};
function SvgPageStar(passedProps, svgRef) {
  var context = React878.useContext(IconoirContext);
  var props = __assign877(__assign877({}, context), passedProps);
  return React878.createElement(
    "svg",
    __assign877({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React878.createElement("path", { d: "M20 12V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H11M8 10h8M8 6h4m-4 8h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React878.createElement("path", { d: "M16.306 17.113l.909-1.927a.312.312 0 01.57 0l.91 1.927 2.032.311c.261.04.365.376.177.568l-1.471 1.5.347 2.118c.044.272-.229.48-.462.351l-1.818-1-1.818 1c-.234.129-.506-.079-.462-.351l.347-2.118-1.47-1.5c-.19-.192-.085-.528.176-.568l2.033-.31zM16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef877 = React878.forwardRef(SvgPageStar);
var PageStar_default = ForwardRef877;

// node_modules/iconoir-react/dist/esm/PageUp.mjs
var React879 = __toESM(require_react(), 1);
var __assign878 = function() {
  __assign878 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign878.apply(this, arguments);
};
function SvgPageUp(passedProps, svgRef) {
  var context = React879.useContext(IconoirContext);
  var props = __assign878(__assign878({}, context), passedProps);
  return React879.createElement(
    "svg",
    __assign878({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React879.createElement("path", { d: "M8.5 13L12 9.5l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React879.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef878 = React879.forwardRef(SvgPageUp);
var PageUp_default = ForwardRef878;

// node_modules/iconoir-react/dist/esm/Page.mjs
var React880 = __toESM(require_react(), 1);
var __assign879 = function() {
  __assign879 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign879.apply(this, arguments);
};
function SvgPage(passedProps, svgRef) {
  var context = React880.useContext(IconoirContext);
  var props = __assign879(__assign879({}, context), passedProps);
  return React880.createElement(
    "svg",
    __assign879({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React880.createElement("path", { d: "M4 21.4V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6zM8 10h8M8 18h8M8 14h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React880.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef879 = React880.forwardRef(SvgPage);
var Page_default = ForwardRef879;

// node_modules/iconoir-react/dist/esm/Palette.mjs
var React881 = __toESM(require_react(), 1);
var __assign880 = function() {
  __assign880 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign880.apply(this, arguments);
};
function SvgPalette(passedProps, svgRef) {
  var context = React881.useContext(IconoirContext);
  var props = __assign880(__assign880({}, context), passedProps);
  return React881.createElement(
    "svg",
    __assign880({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React881.createElement("path", { d: "M20.51 9.54a1.899 1.899 0 01-1 1.09A7 7 0 0015.37 17c.001.47.048.939.14 1.4a2.16 2.16 0 01-.31 1.65 1.79 1.79 0 01-1.21.8 9 9 0 01-10.62-9.13A9.05 9.05 0 0111.85 3h.51a9 9 0 018.06 5 2 2 0 01.09 1.52v.02z", stroke: "currentColor" }),
    React881.createElement("path", { d: "M8 16.01l.01-.011M6 12.01l.01-.011M8 8.01l.01-.011M12 6.01l.01-.011M16 8.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef880 = React881.forwardRef(SvgPalette);
var Palette_default = ForwardRef880;

// node_modules/iconoir-react/dist/esm/PanoramaEnlarge.mjs
var React882 = __toESM(require_react(), 1);
var __assign881 = function() {
  __assign881 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign881.apply(this, arguments);
};
function SvgPanoramaEnlarge(passedProps, svgRef) {
  var context = React882.useContext(IconoirContext);
  var props = __assign881(__assign881({}, context), passedProps);
  return React882.createElement(
    "svg",
    __assign881({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React882.createElement("path", { d: "M12 5c2.995 0 7.235.692 8.576.925a.581.581 0 01.48.503c.13 1.028.444 3.691.444 5.572 0 1.88-.313 4.544-.444 5.572a.581.581 0 01-.48.503c-1.34.233-5.58.925-8.576.925-2.995 0-7.235-.692-8.576-.925a.582.582 0 01-.48-.503C2.814 16.544 2.5 13.881 2.5 12c0-1.88.313-4.544.444-5.572a.582.582 0 01.48-.503C4.764 5.692 9.004 5 12 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef881 = React882.forwardRef(SvgPanoramaEnlarge);
var PanoramaEnlarge_default = ForwardRef881;

// node_modules/iconoir-react/dist/esm/PanoramaReduce.mjs
var React883 = __toESM(require_react(), 1);
var __assign882 = function() {
  __assign882 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign882.apply(this, arguments);
};
function SvgPanoramaReduce(passedProps, svgRef) {
  var context = React883.useContext(IconoirContext);
  var props = __assign882(__assign882({}, context), passedProps);
  return React883.createElement(
    "svg",
    __assign882({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React883.createElement("path", { d: "M21 6.862v10.276a.615.615 0 01-.811.58C18.546 17.165 14.749 16 12 16c-2.749 0-6.546 1.166-8.189 1.717a.615.615 0 01-.811-.58V6.863c0-.418.415-.712.811-.58C5.454 6.835 9.251 8 12 8c2.749 0 6.546-1.166 8.189-1.717a.615.615 0 01.811.58z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef882 = React883.forwardRef(SvgPanoramaReduce);
var PanoramaReduce_default = ForwardRef882;

// node_modules/iconoir-react/dist/esm/PantsAlt.mjs
var React884 = __toESM(require_react(), 1);
var __assign883 = function() {
  __assign883 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign883.apply(this, arguments);
};
function SvgPantsAlt(passedProps, svgRef) {
  var context = React884.useContext(IconoirContext);
  var props = __assign883(__assign883({}, context), passedProps);
  return React884.createElement(
    "svg",
    __assign883({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React884.createElement("path", { d: "M12 19h4.436a.6.6 0 00.6-.563l.924-14.8A.6.6 0 0017.361 3H6.634a.6.6 0 00-.599.633l.934 16.8a.6.6 0 00.599.567H11.4a.6.6 0 00.6-.6V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef883 = React884.forwardRef(SvgPantsAlt);
var PantsAlt_default = ForwardRef883;

// node_modules/iconoir-react/dist/esm/Pants.mjs
var React885 = __toESM(require_react(), 1);
var __assign884 = function() {
  __assign884 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign884.apply(this, arguments);
};
function SvgPants(passedProps, svgRef) {
  var context = React885.useContext(IconoirContext);
  var props = __assign884(__assign884({}, context), passedProps);
  return React885.createElement(
    "svg",
    __assign884({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React885.createElement("path", { d: "M5.035 3.633a.6.6 0 01.6-.633h12.73a.6.6 0 01.6.633l-.933 16.8a.6.6 0 01-.6.567h-2.898a.6.6 0 01-.596-.53L12.596 9.065c-.083-.706-1.109-.706-1.192 0L10.062 20.47a.6.6 0 01-.596.53H6.568a.6.6 0 01-.6-.567l-.933-16.8z", stroke: "currentColor" }),
    React885.createElement("path", { d: "M5 7.5h1.5a2 2 0 002-2V3M18.5 7.5h-1a2 2 0 01-2-2V3", stroke: "currentColor" })
  );
}
var ForwardRef884 = React885.forwardRef(SvgPants);
var Pants_default = ForwardRef884;

// node_modules/iconoir-react/dist/esm/Parking.mjs
var React886 = __toESM(require_react(), 1);
var __assign885 = function() {
  __assign885 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign885.apply(this, arguments);
};
function SvgParking(passedProps, svgRef) {
  var context = React886.useContext(IconoirContext);
  var props = __assign885(__assign885({}, context), passedProps);
  return React886.createElement(
    "svg",
    __assign885({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React886.createElement("path", { d: "M10 15.5v-2.8m0 0h2.857c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H10v4.2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React886.createElement("circle", { cx: 12, cy: 12, r: 10, stroke: "currentColor" })
  );
}
var ForwardRef885 = React886.forwardRef(SvgParking);
var Parking_default = ForwardRef885;

// node_modules/iconoir-react/dist/esm/PasswordCursor.mjs
var React887 = __toESM(require_react(), 1);
var __assign886 = function() {
  __assign886 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign886.apply(this, arguments);
};
function SvgPasswordCursor(passedProps, svgRef) {
  var context = React887.useContext(IconoirContext);
  var props = __assign886(__assign886({}, context), passedProps);
  return React887.createElement(
    "svg",
    __assign886({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React887.createElement("path", { d: "M21 13V8a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React887.createElement("path", { clipRule: "evenodd", d: "M20.879 16.917c.494.304.463 1.043-.045 1.101l-2.567.291-1.151 2.312c-.228.459-.933.234-1.05-.334l-1.255-6.116c-.099-.48.333-.782.75-.525l5.318 3.271z", stroke: "currentColor" }),
    React887.createElement("path", { d: "M12 11.01l.01-.011M16 11.01l.01-.011M8 11.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef886 = React887.forwardRef(SvgPasswordCursor);
var PasswordCursor_default = ForwardRef886;

// node_modules/iconoir-react/dist/esm/PasswordError.mjs
var React888 = __toESM(require_react(), 1);
var __assign887 = function() {
  __assign887 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign887.apply(this, arguments);
};
function SvgPasswordError(passedProps, svgRef) {
  var context = React888.useContext(IconoirContext);
  var props = __assign887(__assign887({}, context), passedProps);
  return React888.createElement(
    "svg",
    __assign887({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React888.createElement("path", { d: "M15.121 20.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L15.12 16.12m2.122 2.122l2.121 2.121M21 13V8a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h6M12 11.01l.01-.011M16 11.01l.01-.011M8 11.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef887 = React888.forwardRef(SvgPasswordError);
var PasswordError_default = ForwardRef887;

// node_modules/iconoir-react/dist/esm/PasswordPass.mjs
var React889 = __toESM(require_react(), 1);
var __assign888 = function() {
  __assign888 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign888.apply(this, arguments);
};
function SvgPasswordPass(passedProps, svgRef) {
  var context = React889.useContext(IconoirContext);
  var props = __assign888(__assign888({}, context), passedProps);
  return React889.createElement(
    "svg",
    __assign888({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React889.createElement("path", { d: "M21 13V8a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h7M14.5 18.5l2 2 4-4M12 11.01l.01-.011M16 11.01l.01-.011M8 11.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef888 = React889.forwardRef(SvgPasswordPass);
var PasswordPass_default = ForwardRef888;

// node_modules/iconoir-react/dist/esm/PasteClipboard.mjs
var React890 = __toESM(require_react(), 1);
var __assign889 = function() {
  __assign889 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign889.apply(this, arguments);
};
function SvgPasteClipboard(passedProps, svgRef) {
  var context = React890.useContext(IconoirContext);
  var props = __assign889(__assign889({}, context), passedProps);
  return React890.createElement(
    "svg",
    __assign889({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React890.createElement("path", { d: "M8.5 4H6a2 2 0 00-2 2v14a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-2.5", stroke: "currentColor", strokeLinecap: "round" }),
    React890.createElement("path", { d: "M8 6.4V4.5a.5.5 0 01.5-.5c.276 0 .504-.224.552-.496C9.2 2.652 9.774 1 12 1s2.8 1.652 2.948 2.504c.048.272.276.496.552.496a.5.5 0 01.5.5v1.9a.6.6 0 01-.6.6H8.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef889 = React890.forwardRef(SvgPasteClipboard);
var PasteClipboard_default = ForwardRef889;

// node_modules/iconoir-react/dist/esm/PatchHoles3D.mjs
var React891 = __toESM(require_react(), 1);
var __assign890 = function() {
  __assign890 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign890.apply(this, arguments);
};
function SvgPatchHoles3D(passedProps, svgRef) {
  var context = React891.useContext(IconoirContext);
  var props = __assign890(__assign890({}, context), passedProps);
  return React891.createElement(
    "svg",
    __assign890({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React891.createElement("path", { d: "M12 22l-8.691-4.828A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524V11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React891.createElement("path", { d: "M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 12v5.5M12 2v7M18.657 17.243l.707.707M17.243 18.657l.707.707M18.657 14.414l-4.243 4.243a2 2 0 000 2.828l.707.708a2 2 0 002.829 0l4.242-4.243a2 2 0 000-2.829l-.707-.707a2 2 0 00-2.828 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef890 = React891.forwardRef(SvgPatchHoles3D);
var PatchHoles3D_default = ForwardRef890;

// node_modules/iconoir-react/dist/esm/PathArrow.mjs
var React892 = __toESM(require_react(), 1);
var __assign891 = function() {
  __assign891 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign891.apply(this, arguments);
};
function SvgPathArrow(passedProps, svgRef) {
  var context = React892.useContext(IconoirContext);
  var props = __assign891(__assign891({}, context), passedProps);
  return React892.createElement(
    "svg",
    __assign891({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React892.createElement("path", { d: "M18 16.5V3m0 0l3.5 3.5M18 3l-3.5 3.5M18 16.5a3.5 3.5 0 11-7 0v-9M11 7.5a3.5 3.5 0 10-7 0v12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef891 = React892.forwardRef(SvgPathArrow);
var PathArrow_default = ForwardRef891;

// node_modules/iconoir-react/dist/esm/PauseWindow.mjs
var React893 = __toESM(require_react(), 1);
var __assign892 = function() {
  __assign892 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign892.apply(this, arguments);
};
function SvgPauseWindow(passedProps, svgRef) {
  var context = React893.useContext(IconoirContext);
  var props = __assign892(__assign892({}, context), passedProps);
  return React893.createElement(
    "svg",
    __assign892({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React893.createElement("path", { d: "M16 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v9", stroke: "currentColor", strokeLinecap: "round" }),
    React893.createElement("path", { d: "M19 17v5M22 17v5M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef892 = React893.forwardRef(SvgPauseWindow);
var PauseWindow_default = ForwardRef892;

// node_modules/iconoir-react/dist/esm/Pause.mjs
var React894 = __toESM(require_react(), 1);
var __assign893 = function() {
  __assign893 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign893.apply(this, arguments);
};
function SvgPause(passedProps, svgRef) {
  var context = React894.useContext(IconoirContext);
  var props = __assign893(__assign893({}, context), passedProps);
  return React894.createElement(
    "svg",
    __assign893({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React894.createElement("path", { d: "M6 18.4V5.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6zM14 18.4V5.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v12.8a.6.6 0 01-.6.6h-2.8a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef893 = React894.forwardRef(SvgPause);
var Pause_default = ForwardRef893;

// node_modules/iconoir-react/dist/esm/Paypal.mjs
var React895 = __toESM(require_react(), 1);
var __assign894 = function() {
  __assign894 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign894.apply(this, arguments);
};
function SvgPaypal(passedProps, svgRef) {
  var context = React895.useContext(IconoirContext);
  var props = __assign894(__assign894({}, context), passedProps);
  return React895.createElement(
    "svg",
    __assign894({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React895.createElement("path", { d: "M3 17.5L6 3h7c6 0 6 9 0 9H8.7l-1.2 5.5H3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React895.createElement("path", { d: "M6.8 21l3-14.5h7c6 0 6 9 0 9h-4.3L11.3 21H6.8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef894 = React895.forwardRef(SvgPaypal);
var Paypal_default = ForwardRef894;

// node_modules/iconoir-react/dist/esm/PcCheck.mjs
var React896 = __toESM(require_react(), 1);
var __assign895 = function() {
  __assign895 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign895.apply(this, arguments);
};
function SvgPcCheck(passedProps, svgRef) {
  var context = React896.useContext(IconoirContext);
  var props = __assign895(__assign895({}, context), passedProps);
  return React896.createElement(
    "svg",
    __assign895({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React896.createElement("path", { d: "M7 22h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React896.createElement("path", { d: "M2 17V4a2 2 0 012-2h16a2 2 0 012 2v13a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React896.createElement("path", { d: "M9 10.5l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef895 = React896.forwardRef(SvgPcCheck);
var PcCheck_default = ForwardRef895;

// node_modules/iconoir-react/dist/esm/PcFirewall.mjs
var React897 = __toESM(require_react(), 1);
var __assign896 = function() {
  __assign896 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign896.apply(this, arguments);
};
function SvgPcFirewall(passedProps, svgRef) {
  var context = React897.useContext(IconoirContext);
  var props = __assign896(__assign896({}, context), passedProps);
  return React897.createElement(
    "svg",
    __assign896({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React897.createElement("path", { d: "M7 22h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React897.createElement("path", { d: "M2 17V4a2 2 0 012-2h16a2 2 0 012 2v13a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React897.createElement("path", { d: "M12.485 6.121l3.06.765a.59.59 0 01.449.586C15.818 14 12 15 12 15s-3.818-1-3.994-7.528a.59.59 0 01.448-.586l3.06-.765a2 2 0 01.971 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef896 = React897.forwardRef(SvgPcFirewall);
var PcFirewall_default = ForwardRef896;

// node_modules/iconoir-react/dist/esm/PcMouse.mjs
var React898 = __toESM(require_react(), 1);
var __assign897 = function() {
  __assign897 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign897.apply(this, arguments);
};
function SvgPcMouse(passedProps, svgRef) {
  var context = React898.useContext(IconoirContext);
  var props = __assign897(__assign897({}, context), passedProps);
  return React898.createElement(
    "svg",
    __assign897({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React898.createElement("path", { d: "M12 2v0a8 8 0 018 8v4a8 8 0 01-8 8v0a8 8 0 01-8-8v-4a8 8 0 018-8v0zm0 0v7", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef897 = React898.forwardRef(SvgPcMouse);
var PcMouse_default = ForwardRef897;

// node_modules/iconoir-react/dist/esm/PcNoEntry.mjs
var React899 = __toESM(require_react(), 1);
var __assign898 = function() {
  __assign898 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign898.apply(this, arguments);
};
function SvgPcNoEntry(passedProps, svgRef) {
  var context = React899.useContext(IconoirContext);
  var props = __assign898(__assign898({}, context), passedProps);
  return React899.createElement(
    "svg",
    __assign898({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React899.createElement("path", { d: "M7 22h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React899.createElement("path", { d: "M2 17V4a2 2 0 012-2h16a2 2 0 012 2v13a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React899.createElement("path", { d: "M14.857 7.7a4 4 0 10-5.713 5.6m5.713-5.6a4 4 0 01-5.713 5.6m5.713-5.6l-5.714 5.6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef898 = React899.forwardRef(SvgPcNoEntry);
var PcNoEntry_default = ForwardRef898;

// node_modules/iconoir-react/dist/esm/PcWarning.mjs
var React900 = __toESM(require_react(), 1);
var __assign899 = function() {
  __assign899 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign899.apply(this, arguments);
};
function SvgPcWarning(passedProps, svgRef) {
  var context = React900.useContext(IconoirContext);
  var props = __assign899(__assign899({}, context), passedProps);
  return React900.createElement(
    "svg",
    __assign899({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React900.createElement("path", { d: "M7 22h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React900.createElement("path", { d: "M2 17V4a2 2 0 012-2h16a2 2 0 012 2v13a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React900.createElement("path", { d: "M12 7v3M12 14.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef899 = React900.forwardRef(SvgPcWarning);
var PcWarning_default = ForwardRef899;

// node_modules/iconoir-react/dist/esm/PeaceHand.mjs
var React901 = __toESM(require_react(), 1);
var __assign900 = function() {
  __assign900 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign900.apply(this, arguments);
};
function SvgPeaceHand(passedProps, svgRef) {
  var context = React901.useContext(IconoirContext);
  var props = __assign900(__assign900({}, context), passedProps);
  return React901.createElement(
    "svg",
    __assign900({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React901.createElement("path", { d: "M14.149 9.472v-5.86c0-.89-.722-1.612-1.612-1.612v0c-.89 0-1.611.722-1.611 1.612v4.834", stroke: "currentColor", strokeLinecap: "round" }),
    React901.createElement("path", { d: "M16.346 12.841l2.176-7.252a1.584 1.584 0 00-1.083-1.98v0a1.585 1.585 0 00-1.961 1.098l-1.33 4.764M7.62 9.25l1.055 2.341a1.612 1.612 0 01-2.938 1.325L4.68 10.575A1.612 1.612 0 017.62 9.25z", stroke: "currentColor", strokeLinecap: "round" }),
    React901.createElement("path", { d: "M11.72 12.261v0a2.322 2.322 0 00-.068-1.742l-1.073-2.38a1.584 1.584 0 00-2.101-.79v0a1.584 1.584 0 00-.764 2.14l.135.276", stroke: "currentColor", strokeLinecap: "round" }),
    React901.createElement("path", { d: "M13.857 17.677l.492-.984a.176.176 0 00-.108-.248l-3.55-1.044a1.537 1.537 0 01-1.095-1.635v0a1.537 1.537 0 011.67-1.37l4.788.446s3.81.586 2.49 4.395c-1.318 3.81-1.757 5.128-4.687 5.128H8.876a4.249 4.249 0 01-4.249-4.249v0L4.48 9.912", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef900 = React901.forwardRef(SvgPeaceHand);
var PeaceHand_default = ForwardRef900;

// node_modules/iconoir-react/dist/esm/PenConnectBluetooth.mjs
var React902 = __toESM(require_react(), 1);
var __assign901 = function() {
  __assign901 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign901.apply(this, arguments);
};
function SvgPenConnectBluetooth(passedProps, svgRef) {
  var context = React902.useContext(IconoirContext);
  var props = __assign901(__assign901({}, context), passedProps);
  return React902.createElement(
    "svg",
    __assign901({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React902.createElement(
      "g",
      { clipPath: "url(#pen-connect-bluetooth_svg__clip0)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React902.createElement("path", { d: "M6.5 17.5l-1 4 3.731-.933a1 1 0 00.465-.263L21.5 8.5a2.121 2.121 0 000-3v0a2.121 2.121 0 00-3 0l-4 4M17.5 6.5l3 3M5 6.6l7 5.1L8.333 15V3L12 6.3l-7 5.1" })
    ),
    React902.createElement(
      "defs",
      null,
      React902.createElement(
        "clipPath",
        { id: "pen-connect-bluetooth_svg__clip0" },
        React902.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef901 = React902.forwardRef(SvgPenConnectBluetooth);
var PenConnectBluetooth_default = ForwardRef901;

// node_modules/iconoir-react/dist/esm/PenConnectWifi.mjs
var React903 = __toESM(require_react(), 1);
var __assign902 = function() {
  __assign902 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign902.apply(this, arguments);
};
function SvgPenConnectWifi(passedProps, svgRef) {
  var context = React903.useContext(IconoirContext);
  var props = __assign902(__assign902({}, context), passedProps);
  return React903.createElement(
    "svg",
    __assign902({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React903.createElement("path", { d: "M8 9.76l.01-.011M3 6.25c2.5-3 7.5-3 10 0M5 8.25c1.5-2 4.5-2 6 0M17.5 6.5l1-1a2.121 2.121 0 013 0v0a2.121 2.121 0 010 3l-1 1m-3-3L6.696 17.304a1 1 0 00-.263.465L5.5 21.5l3.731-.933a1 1 0 00.465-.263L20.5 9.5m-3-3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef902 = React903.forwardRef(SvgPenConnectWifi);
var PenConnectWifi_default = ForwardRef902;

// node_modules/iconoir-react/dist/esm/PenTabletConnectUsb.mjs
var React904 = __toESM(require_react(), 1);
var __assign903 = function() {
  __assign903 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign903.apply(this, arguments);
};
function SvgPenTabletConnectUsb(passedProps, svgRef) {
  var context = React904.useContext(IconoirContext);
  var props = __assign903(__assign903({}, context), passedProps);
  return React904.createElement(
    "svg",
    __assign903({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React904.createElement("path", { d: "M22 7V5a2 2 0 00-2-2H4a2 2 0 00-2 2v14a2 2 0 002 2h16a2 2 0 002-2v-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React904.createElement("path", { d: "M2 12h4M6 3v18", stroke: "currentColor" }),
    React904.createElement("path", { d: "M19.25 12H11M18.7 12l-.825 3h-1.65M17.6 12l-1.1-3h-1.925M22 12a1.37 1.37 0 00-1.375-1.364c-.76 0-1.375.61-1.375 1.364a1.37 1.37 0 001.375 1.364c.76 0 1.375-.61 1.375-1.364z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef903 = React904.forwardRef(SvgPenTabletConnectUsb);
var PenTabletConnectUsb_default = ForwardRef903;

// node_modules/iconoir-react/dist/esm/PenTabletConnectWifi.mjs
var React905 = __toESM(require_react(), 1);
var __assign904 = function() {
  __assign904 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign904.apply(this, arguments);
};
function SvgPenTabletConnectWifi(passedProps, svgRef) {
  var context = React905.useContext(IconoirContext);
  var props = __assign904(__assign904({}, context), passedProps);
  return React905.createElement(
    "svg",
    __assign904({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React905.createElement("path", { d: "M17 15.51l.01-.011M12 12c2.5-3 7.5-3 10 0M14 14c1.5-2 4.5-2 6 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React905.createElement("path", { d: "M22 7V5a2 2 0 00-2-2H4a2 2 0 00-2 2v14a2 2 0 002 2h16a2 2 0 002-2v-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React905.createElement("path", { d: "M2 12h4M6 3v18", stroke: "currentColor" })
  );
}
var ForwardRef904 = React905.forwardRef(SvgPenTabletConnectWifi);
var PenTabletConnectWifi_default = ForwardRef904;

// node_modules/iconoir-react/dist/esm/PenTablet.mjs
var React906 = __toESM(require_react(), 1);
var __assign905 = function() {
  __assign905 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign905.apply(this, arguments);
};
function SvgPenTablet(passedProps, svgRef) {
  var context = React906.useContext(IconoirContext);
  var props = __assign905(__assign905({}, context), passedProps);
  return React906.createElement(
    "svg",
    __assign905({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React906.createElement("path", { d: "M22 5v14a2 2 0 01-2 2H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2zM2 12h4M6 3v18", stroke: "currentColor" }),
    React906.createElement("path", { d: "M15.5 11.5l-3.5 3M17 10.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef905 = React906.forwardRef(SvgPenTablet);
var PenTablet_default = ForwardRef905;

// node_modules/iconoir-react/dist/esm/Pentagon.mjs
var React907 = __toESM(require_react(), 1);
var __assign906 = function() {
  __assign906 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign906.apply(this, arguments);
};
function SvgPentagon(passedProps, svgRef) {
  var context = React907.useContext(IconoirContext);
  var props = __assign906(__assign906({}, context), passedProps);
  return React907.createElement(
    "svg",
    __assign906({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React907.createElement("path", { d: "M11.647 2.256a.6.6 0 01.706 0l9.756 7.089a.6.6 0 01.218.67L18.6 21.485a.6.6 0 01-.57.414H5.97a.6.6 0 01-.57-.414l-3.727-11.47a.6.6 0 01.218-.67l9.756-7.089z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef906 = React907.forwardRef(SvgPentagon);
var Pentagon_default = ForwardRef906;

// node_modules/iconoir-react/dist/esm/PeopleTag.mjs
var React908 = __toESM(require_react(), 1);
var __assign907 = function() {
  __assign907 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign907.apply(this, arguments);
};
function SvgPeopleTag(passedProps, svgRef) {
  var context = React908.useContext(IconoirContext);
  var props = __assign907(__assign907({}, context), passedProps);
  return React908.createElement(
    "svg",
    __assign907({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React908.createElement("path", { d: "M3 16V8a5 5 0 015-5h8a5 5 0 015 5v8a5 5 0 01-5 5H8a5 5 0 01-5-5z", stroke: "currentColor" }),
    React908.createElement("path", { d: "M16.5 14.5s-1.5 2-4.5 2-4.5-2-4.5-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React908.createElement("path", { d: "M8.5 10a.5.5 0 110-1 .5.5 0 010 1zM15.5 10a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef907 = React908.forwardRef(SvgPeopleTag);
var PeopleTag_default = ForwardRef907;

// node_modules/iconoir-react/dist/esm/PercentRotateOut.mjs
var React909 = __toESM(require_react(), 1);
var __assign908 = function() {
  __assign908 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign908.apply(this, arguments);
};
function SvgPercentRotateOut(passedProps, svgRef) {
  var context = React909.useContext(IconoirContext);
  var props = __assign908(__assign908({}, context), passedProps);
  return React909.createElement(
    "svg",
    __assign908({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React909.createElement("path", { d: "M21.168 8A10.002 10.002 0 0012 2c-5.185 0-9.449 3.947-9.95 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React909.createElement("path", { d: "M18 8h3.4a.6.6 0 00.6-.6V4M2.881 16c1.544 3.532 5.068 6 9.168 6 5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React909.createElement("path", { d: "M6.05 16h-3.4a.6.6 0 00-.6.6V20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React909.createElement("path", { d: "M14.5 15a.5.5 0 100-1 .5.5 0 000 1zM9.5 10a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React909.createElement("path", { d: "M15 9l-6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef908 = React909.forwardRef(SvgPercentRotateOut);
var PercentRotateOut_default = ForwardRef908;

// node_modules/iconoir-react/dist/esm/PercentageCircle.mjs
var React910 = __toESM(require_react(), 1);
var __assign909 = function() {
  __assign909 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign909.apply(this, arguments);
};
function SvgPercentageCircle(passedProps, svgRef) {
  var context = React910.useContext(IconoirContext);
  var props = __assign909(__assign909({}, context), passedProps);
  return React910.createElement(
    "svg",
    __assign909({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React910.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React910.createElement("path", { d: "M15.5 16a.5.5 0 100-1 .5.5 0 000 1zM8.5 9a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React910.createElement("path", { d: "M16 8l-8 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef909 = React910.forwardRef(SvgPercentageCircle);
var PercentageCircle_default = ForwardRef909;

// node_modules/iconoir-react/dist/esm/PercentageSquare.mjs
var React911 = __toESM(require_react(), 1);
var __assign910 = function() {
  __assign910 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign910.apply(this, arguments);
};
function SvgPercentageSquare(passedProps, svgRef) {
  var context = React911.useContext(IconoirContext);
  var props = __assign910(__assign910({}, context), passedProps);
  return React911.createElement(
    "svg",
    __assign910({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React911.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React911.createElement("path", { d: "M15.5 16a.5.5 0 100-1 .5.5 0 000 1zM8.5 9a.5.5 0 100-1 .5.5 0 000 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React911.createElement("path", { d: "M16 8l-8 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef910 = React911.forwardRef(SvgPercentageSquare);
var PercentageSquare_default = ForwardRef910;

// node_modules/iconoir-react/dist/esm/Percentage.mjs
var React912 = __toESM(require_react(), 1);
var __assign911 = function() {
  __assign911 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign911.apply(this, arguments);
};
function SvgPercentage(passedProps, svgRef) {
  var context = React912.useContext(IconoirContext);
  var props = __assign911(__assign911({}, context), passedProps);
  return React912.createElement(
    "svg",
    __assign911({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React912.createElement("path", { d: "M17 19a2 2 0 110-4 2 2 0 010 4zM7 9a2 2 0 110-4 2 2 0 010 4zM19 5L5 19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef911 = React912.forwardRef(SvgPercentage);
var Percentage_default = ForwardRef911;

// node_modules/iconoir-react/dist/esm/PerspectiveView.mjs
var React913 = __toESM(require_react(), 1);
var __assign912 = function() {
  __assign912 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign912.apply(this, arguments);
};
function SvgPerspectiveView(passedProps, svgRef) {
  var context = React913.useContext(IconoirContext);
  var props = __assign912(__assign912({}, context), passedProps);
  return React913.createElement(
    "svg",
    __assign912({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React913.createElement("path", { d: "M1 21L4.143 3h15.714L23 21H1zM2 16.5h20M3 12h18M4 7.5h16M12 3v18M8 3.5l-1.5 17M16 3.5l1.5 17", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef912 = React913.forwardRef(SvgPerspectiveView);
var PerspectiveView_default = ForwardRef912;

// node_modules/iconoir-react/dist/esm/PharmacyCrossCircle.mjs
var React914 = __toESM(require_react(), 1);
var __assign913 = function() {
  __assign913 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign913.apply(this, arguments);
};
function SvgPharmacyCrossCircle(passedProps, svgRef) {
  var context = React914.useContext(IconoirContext);
  var props = __assign913(__assign913({}, context), passedProps);
  return React914.createElement(
    "svg",
    __assign913({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React914.createElement("path", { d: "M13.9 18h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 00-.6-.6H6.6a.6.6 0 01-.6-.6v-3.8a.6.6 0 01.6-.6h2.3a.6.6 0 00.6-.6V6.6a.6.6 0 01.6-.6h3.8a.6.6 0 01.6.6v2.3a.6.6 0 00.6.6h2.3a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-2.3a.6.6 0 00-.6.6v2.3a.6.6 0 01-.6.6z", stroke: "currentColor" }),
    React914.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef913 = React914.forwardRef(SvgPharmacyCrossCircle);
var PharmacyCrossCircle_default = ForwardRef913;

// node_modules/iconoir-react/dist/esm/PharmacyCrossSquare.mjs
var React915 = __toESM(require_react(), 1);
var __assign914 = function() {
  __assign914 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign914.apply(this, arguments);
};
function SvgPharmacyCrossSquare(passedProps, svgRef) {
  var context = React915.useContext(IconoirContext);
  var props = __assign914(__assign914({}, context), passedProps);
  return React915.createElement(
    "svg",
    __assign914({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React915.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React915.createElement("path", { d: "M13.9 18h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 00-.6-.6H6.6a.6.6 0 01-.6-.6v-3.8a.6.6 0 01.6-.6h2.3a.6.6 0 00.6-.6V6.6a.6.6 0 01.6-.6h3.8a.6.6 0 01.6.6v2.3a.6.6 0 00.6.6h2.3a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-2.3a.6.6 0 00-.6.6v2.3a.6.6 0 01-.6.6z", stroke: "currentColor" })
  );
}
var ForwardRef914 = React915.forwardRef(SvgPharmacyCrossSquare);
var PharmacyCrossSquare_default = ForwardRef914;

// node_modules/iconoir-react/dist/esm/PhoneAdd.mjs
var React916 = __toESM(require_react(), 1);
var __assign915 = function() {
  __assign915 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign915.apply(this, arguments);
};
function SvgPhoneAdd(passedProps, svgRef) {
  var context = React916.useContext(IconoirContext);
  var props = __assign915(__assign915({}, context), passedProps);
  return React916.createElement(
    "svg",
    __assign915({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React916.createElement("path", { d: "M16.243 5.243h3m3 0h-3m0 0v-3m0 3v3M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef915 = React916.forwardRef(SvgPhoneAdd);
var PhoneAdd_default = ForwardRef915;

// node_modules/iconoir-react/dist/esm/PhoneDelete.mjs
var React917 = __toESM(require_react(), 1);
var __assign916 = function() {
  __assign916 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign916.apply(this, arguments);
};
function SvgPhoneDelete(passedProps, svgRef) {
  var context = React917.useContext(IconoirContext);
  var props = __assign916(__assign916({}, context), passedProps);
  return React917.createElement(
    "svg",
    __assign916({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React917.createElement(
      "g",
      { clipPath: "url(#phone-delete_svg__clip0)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React917.createElement("path", { d: "M17.121 7.364l2.122-2.121m2.121-2.122l-2.121 2.122m0 0L17.12 3.12m2.122 2.122l2.121 2.121M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z" })
    ),
    React917.createElement(
      "defs",
      null,
      React917.createElement(
        "clipPath",
        { id: "phone-delete_svg__clip0" },
        React917.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef916 = React917.forwardRef(SvgPhoneDelete);
var PhoneDelete_default = ForwardRef916;

// node_modules/iconoir-react/dist/esm/PhoneDisabled.mjs
var React918 = __toESM(require_react(), 1);
var __assign917 = function() {
  __assign917 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign917.apply(this, arguments);
};
function SvgPhoneDisabled(passedProps, svgRef) {
  var context = React918.useContext(IconoirContext);
  var props = __assign917(__assign917({}, context), passedProps);
  return React918.createElement(
    "svg",
    __assign917({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React918.createElement("path", { d: "M8.78 8.5l.49-2.63L7.815 2H4.064c-1.128 0-2.016.93-1.848 2.046.288 1.902.957 4.861 2.51 7.7M10.94 13.5c.837.744 1.847 1.392 3.059 2l4.118-.798L22 16.182v3.584c0 1.192-1.032 2.1-2.197 1.847-2.83-.616-7.83-2.107-11.58-5.432M21 3L3 21", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef917 = React918.forwardRef(SvgPhoneDisabled);
var PhoneDisabled_default = ForwardRef917;

// node_modules/iconoir-react/dist/esm/PhoneIncome.mjs
var React919 = __toESM(require_react(), 1);
var __assign918 = function() {
  __assign918 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign918.apply(this, arguments);
};
function SvgPhoneIncome(passedProps, svgRef) {
  var context = React919.useContext(IconoirContext);
  var props = __assign918(__assign918({}, context), passedProps);
  return React919.createElement(
    "svg",
    __assign918({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React919.createElement("path", { d: "M22 5h-6m0 0l3-3m-3 3l3 3M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef918 = React919.forwardRef(SvgPhoneIncome);
var PhoneIncome_default = ForwardRef918;

// node_modules/iconoir-react/dist/esm/PhoneOutcome.mjs
var React920 = __toESM(require_react(), 1);
var __assign919 = function() {
  __assign919 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign919.apply(this, arguments);
};
function SvgPhoneOutcome(passedProps, svgRef) {
  var context = React920.useContext(IconoirContext);
  var props = __assign919(__assign919({}, context), passedProps);
  return React920.createElement(
    "svg",
    __assign919({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React920.createElement("path", { d: "M16 5h6m0 0l-3-3m3 3l-3 3M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef919 = React920.forwardRef(SvgPhoneOutcome);
var PhoneOutcome_default = ForwardRef919;

// node_modules/iconoir-react/dist/esm/PhonePaused.mjs
var React921 = __toESM(require_react(), 1);
var __assign920 = function() {
  __assign920 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign920.apply(this, arguments);
};
function SvgPhonePaused(passedProps, svgRef) {
  var context = React921.useContext(IconoirContext);
  var props = __assign920(__assign920({}, context), passedProps);
  return React921.createElement(
    "svg",
    __assign920({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React921.createElement("path", { d: "M18 2v5M22 2v5M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef920 = React921.forwardRef(SvgPhonePaused);
var PhonePaused_default = ForwardRef920;

// node_modules/iconoir-react/dist/esm/PhoneRemove.mjs
var React922 = __toESM(require_react(), 1);
var __assign921 = function() {
  __assign921 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign921.apply(this, arguments);
};
function SvgPhoneRemove(passedProps, svgRef) {
  var context = React922.useContext(IconoirContext);
  var props = __assign921(__assign921({}, context), passedProps);
  return React922.createElement(
    "svg",
    __assign921({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React922.createElement("path", { d: "M16.242 5.243h6M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef921 = React922.forwardRef(SvgPhoneRemove);
var PhoneRemove_default = ForwardRef921;

// node_modules/iconoir-react/dist/esm/Phone.mjs
var React923 = __toESM(require_react(), 1);
var __assign922 = function() {
  __assign922 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign922.apply(this, arguments);
};
function SvgPhone(passedProps, svgRef) {
  var context = React923.useContext(IconoirContext);
  var props = __assign922(__assign922({}, context), passedProps);
  return React923.createElement(
    "svg",
    __assign922({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React923.createElement("path", { d: "M18.118 14.702L14 15.5c-2.782-1.396-4.5-3-5.5-5.5l.77-4.13L7.815 2H4.064c-1.128 0-2.016.932-1.847 2.047.42 2.783 1.66 7.83 5.283 11.453 3.805 3.805 9.286 5.456 12.302 6.113 1.165.253 2.198-.655 2.198-1.848v-3.584l-3.882-1.479z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef922 = React923.forwardRef(SvgPhone);
var Phone_default = ForwardRef922;

// node_modules/iconoir-react/dist/esm/PiggyBank.mjs
var React924 = __toESM(require_react(), 1);
var __assign923 = function() {
  __assign923 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign923.apply(this, arguments);
};
function SvgPiggyBank(passedProps, svgRef) {
  var context = React924.useContext(IconoirContext);
  var props = __assign923(__assign923({}, context), passedProps);
  return React924.createElement(
    "svg",
    __assign923({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React924.createElement("path", { d: "M14.5 8.5c-.78-.202-1.866-.5-2.735-.5C7.476 8 4 10.668 4 13.958c0 1.891 1.148 3.577 2.938 4.668l-.485 1.6a.6.6 0 00.574.774h1.764a.6.6 0 00.36-.12l1.395-1.047h2.437l1.395 1.047a.6.6 0 00.36.12h1.764a.6.6 0 00.574-.774l-.485-1.6c1.067-.65 1.905-1.511 2.409-2.501M14.5 8.5L19 7l-.084 3.628L21 11.5V15l-1.926 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React924.createElement("path", { d: "M15.5 13a.5.5 0 110-1 .5.5 0 010 1z", fill: "#000", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React924.createElement("path", { d: "M2 10s0 2.4 2 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React924.createElement("path", { d: "M12.8 7.753c.13-.372.2-.772.2-1.188C13 4.596 11.433 3 9.5 3S6 4.596 6 6.565c0 .941.358 1.798.944 2.435", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef923 = React924.forwardRef(SvgPiggyBank);
var PiggyBank_default = ForwardRef923;

// node_modules/iconoir-react/dist/esm/Pillow.mjs
var React925 = __toESM(require_react(), 1);
var __assign924 = function() {
  __assign924 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign924.apply(this, arguments);
};
function SvgPillow(passedProps, svgRef) {
  var context = React925.useContext(IconoirContext);
  var props = __assign924(__assign924({}, context), passedProps);
  return React925.createElement(
    "svg",
    __assign924({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React925.createElement("path", { d: "M21.04 12.283l.599 4.19a2 2 0 01-2.179 2.273L12.2 18.02a2.005 2.005 0 00-.398 0l-7.261.726a2 2 0 01-2.179-2.273l.599-4.19a2 2 0 000-.566l-.599-4.19A2 2 0 014.54 5.254l7.261.726a2 2 0 00.398 0l7.261-.726a2 2 0 012.179 2.273l-.599 4.19a2 2 0 000 .566zM21 6l-4 3M7 15l-4 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef924 = React925.forwardRef(SvgPillow);
var Pillow_default = ForwardRef924;

// node_modules/iconoir-react/dist/esm/PinAlt.mjs
var React926 = __toESM(require_react(), 1);
var __assign925 = function() {
  __assign925 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign925.apply(this, arguments);
};
function SvgPinAlt(passedProps, svgRef) {
  var context = React926.useContext(IconoirContext);
  var props = __assign925(__assign925({}, context), passedProps);
  return React926.createElement(
    "svg",
    __assign925({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React926.createElement("path", { d: "M20 10c0 4.418-8 12-8 12s-8-7.582-8-12a8 8 0 1116 0z", stroke: "currentColor" }),
    React926.createElement("path", { d: "M12 11a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef925 = React926.forwardRef(SvgPinAlt);
var PinAlt_default = ForwardRef925;

// node_modules/iconoir-react/dist/esm/Pin.mjs
var React927 = __toESM(require_react(), 1);
var __assign926 = function() {
  __assign926 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign926.apply(this, arguments);
};
function SvgPin(passedProps, svgRef) {
  var context = React927.useContext(IconoirContext);
  var props = __assign926(__assign926({}, context), passedProps);
  return React927.createElement(
    "svg",
    __assign926({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React927.createElement("path", { d: "M9.5 14.5L3 21M5 9.485l9.193 9.193 1.697-1.697-.393-3.787 5.51-4.673-5.85-5.85-4.674 5.51-3.786-.393L5 9.485z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef926 = React927.forwardRef(SvgPin);
var Pin_default = ForwardRef926;

// node_modules/iconoir-react/dist/esm/PineTree.mjs
var React928 = __toESM(require_react(), 1);
var __assign927 = function() {
  __assign927 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign927.apply(this, arguments);
};
function SvgPineTree(passedProps, svgRef) {
  var context = React928.useContext(IconoirContext);
  var props = __assign927(__assign927({}, context), passedProps);
  return React928.createElement(
    "svg",
    __assign927({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React928.createElement("path", { d: "M12 2L7 6.643S10.042 7 12 7c1.958 0 5-.357 5-.357L12 2zM8.5 7L5 10.94S7.625 12 12 12s7-1.06 7-1.06L15.5 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React928.createElement("path", { d: "M6.5 11.5L3 15.523S5.7 18 12 18s9-2.477 9-2.477L17.5 11.5M12 22v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef927 = React928.forwardRef(SvgPineTree);
var PineTree_default = ForwardRef927;

// node_modules/iconoir-react/dist/esm/Pinterest.mjs
var React929 = __toESM(require_react(), 1);
var __assign928 = function() {
  __assign928 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign928.apply(this, arguments);
};
function SvgPinterest(passedProps, svgRef) {
  var context = React929.useContext(IconoirContext);
  var props = __assign928(__assign928({}, context), passedProps);
  return React929.createElement(
    "svg",
    __assign928({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React929.createElement("path", { d: "M8 14.5c-3-4.5 1.462-8 4.5-8 3.038 0 5.5 1.654 5.5 5.5 0 3.038-2 5-4 5s-3-2-2.5-5M12 10L9 21.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React929.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef928 = React929.forwardRef(SvgPinterest);
var Pinterest_default = ForwardRef928;

// node_modules/iconoir-react/dist/esm/Pipe3D.mjs
var React930 = __toESM(require_react(), 1);
var __assign929 = function() {
  __assign929 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign929.apply(this, arguments);
};
function SvgPipe3D(passedProps, svgRef) {
  var context = React930.useContext(IconoirContext);
  var props = __assign929(__assign929({}, context), passedProps);
  return React930.createElement(
    "svg",
    __assign929({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React930.createElement("path", { d: "M10 20a6 6 0 110-12 6 6 0 010 12zM10.773 4.742a6 6 0 018.7 8.258M3 21l6.5-6.5M21 3l-1.5 1.5M6 9.5L10.5 5l.25-.25M14.5 18l4.719-4.719", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef929 = React930.forwardRef(SvgPipe3D);
var Pipe3D_default = ForwardRef929;

// node_modules/iconoir-react/dist/esm/PizzaSlice.mjs
var React931 = __toESM(require_react(), 1);
var __assign930 = function() {
  __assign930 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign930.apply(this, arguments);
};
function SvgPizzaSlice(passedProps, svgRef) {
  var context = React931.useContext(IconoirContext);
  var props = __assign930(__assign930({}, context), passedProps);
  return React931.createElement(
    "svg",
    __assign930({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React931.createElement("path", { d: "M14 9.01l.01-.011M8 8.01l.01-.011M8 14.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React931.createElement("path", { d: "M6 19L2.236 3.004a.6.6 0 01.754-.713L19 7", stroke: "currentColor" }),
    React931.createElement("path", { d: "M22.198 8.425a1.75 1.75 0 00-3.396-.85c-.391 1.568-1.9 4.05-4.227 6.375-2.3 2.301-5.148 4.194-7.968 4.845a1.75 1.75 0 10.787 3.41c3.68-.849 7.082-3.206 9.656-5.78 2.549-2.549 4.54-5.568 5.148-8z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef930 = React931.forwardRef(SvgPizzaSlice);
var PizzaSlice_default = ForwardRef930;

// node_modules/iconoir-react/dist/esm/PlanetAlt.mjs
var React932 = __toESM(require_react(), 1);
var __assign931 = function() {
  __assign931 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign931.apply(this, arguments);
};
function SvgPlanetAlt(passedProps, svgRef) {
  var context = React932.useContext(IconoirContext);
  var props = __assign931(__assign931({}, context), passedProps);
  return React932.createElement(
    "svg",
    __assign931({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React932.createElement("circle", { cx: 12, cy: 12, r: 8, stroke: "currentColor" }),
    React932.createElement("path", { d: "M19.812 12.99c1.813 1.51 2.755 2.864 2.362 3.651-.731 1.467-5.805.42-11.333-2.336C5.312 11.55 1.423 8.126 2.154 6.66c.392-.786 2.033-.85 4.322-.315", stroke: "currentColor" })
  );
}
var ForwardRef931 = React932.forwardRef(SvgPlanetAlt);
var PlanetAlt_default = ForwardRef931;

// node_modules/iconoir-react/dist/esm/PlanetSat.mjs
var React933 = __toESM(require_react(), 1);
var __assign932 = function() {
  __assign932 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign932.apply(this, arguments);
};
function SvgPlanetSat(passedProps, svgRef) {
  var context = React933.useContext(IconoirContext);
  var props = __assign932(__assign932({}, context), passedProps);
  return React933.createElement(
    "svg",
    __assign932({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React933.createElement("circle", { cx: 12, cy: 12, r: 8, stroke: "currentColor" }),
    React933.createElement("path", { d: "M17.5 6.348c2.297-.538 3.945-.476 4.338.312.73 1.466-3.158 4.89-8.687 7.645-5.528 2.757-10.602 3.802-11.333 2.336-.392-.786.544-2.134 2.349-3.64", stroke: "currentColor" }),
    React933.createElement("path", { d: "M9.5 10.51l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef932 = React933.forwardRef(SvgPlanetSat);
var PlanetSat_default = ForwardRef932;

// node_modules/iconoir-react/dist/esm/Planet.mjs
var React934 = __toESM(require_react(), 1);
var __assign933 = function() {
  __assign933 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign933.apply(this, arguments);
};
function SvgPlanet(passedProps, svgRef) {
  var context = React934.useContext(IconoirContext);
  var props = __assign933(__assign933({}, context), passedProps);
  return React934.createElement(
    "svg",
    __assign933({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React934.createElement("circle", { cx: 12, cy: 12, r: 8, stroke: "currentColor" }),
    React934.createElement("path", { d: "M17.5 6.348c2.297-.538 3.945-.476 4.338.312.73 1.466-3.158 4.89-8.687 7.645-5.528 2.757-10.602 3.802-11.333 2.336-.392-.786.544-2.134 2.349-3.64", stroke: "currentColor" })
  );
}
var ForwardRef933 = React934.forwardRef(SvgPlanet);
var Planet_default = ForwardRef933;

// node_modules/iconoir-react/dist/esm/Planimetry.mjs
var React935 = __toESM(require_react(), 1);
var __assign934 = function() {
  __assign934 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign934.apply(this, arguments);
};
function SvgPlanimetry(passedProps, svgRef) {
  var context = React935.useContext(IconoirContext);
  var props = __assign934(__assign934({}, context), passedProps);
  return React935.createElement(
    "svg",
    __assign934({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React935.createElement("path", { d: "M11 16v-5H3M21 8h-6v2M15 18v3M11 19v2M11 3v3M21 15h-6v-2M11 9v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React935.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef934 = React935.forwardRef(SvgPlanimetry);
var Planimetry_default = ForwardRef934;

// node_modules/iconoir-react/dist/esm/Play.mjs
var React936 = __toESM(require_react(), 1);
var __assign935 = function() {
  __assign935 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign935.apply(this, arguments);
};
function SvgPlay(passedProps, svgRef) {
  var context = React936.useContext(IconoirContext);
  var props = __assign935(__assign935({}, context), passedProps);
  return React936.createElement(
    "svg",
    __assign935({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React936.createElement("path", { d: "M6.906 4.537A.6.6 0 006 5.053v13.894a.6.6 0 00.906.516l11.723-6.947a.6.6 0 000-1.032L6.906 4.537z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef935 = React936.forwardRef(SvgPlay);
var Play_default = ForwardRef935;

// node_modules/iconoir-react/dist/esm/PlaylistAdd.mjs
var React937 = __toESM(require_react(), 1);
var __assign936 = function() {
  __assign936 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign936.apply(this, arguments);
};
function SvgPlaylistAdd(passedProps, svgRef) {
  var context = React937.useContext(IconoirContext);
  var props = __assign936(__assign936({}, context), passedProps);
  return React937.createElement(
    "svg",
    __assign936({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React937.createElement("path", { d: "M18 18h2m2 0h-2m0 0v-2m0 2v2M2 11h18M2 17h12M2 5h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef936 = React937.forwardRef(SvgPlaylistAdd);
var PlaylistAdd_default = ForwardRef936;

// node_modules/iconoir-react/dist/esm/PlaylistPlay.mjs
var React938 = __toESM(require_react(), 1);
var __assign937 = function() {
  __assign937 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign937.apply(this, arguments);
};
function SvgPlaylistPlay(passedProps, svgRef) {
  var context = React938.useContext(IconoirContext);
  var props = __assign937(__assign937({}, context), passedProps);
  return React938.createElement(
    "svg",
    __assign937({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React938.createElement("path", { d: "M22 17.5L18.5 20v-5l3.5 2.5zM2 5h18M2 11h18M2 17h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef937 = React938.forwardRef(SvgPlaylistPlay);
var PlaylistPlay_default = ForwardRef937;

// node_modules/iconoir-react/dist/esm/Playlist.mjs
var React939 = __toESM(require_react(), 1);
var __assign938 = function() {
  __assign938 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign938.apply(this, arguments);
};
function SvgPlaylist(passedProps, svgRef) {
  var context = React939.useContext(IconoirContext);
  var props = __assign938(__assign938({}, context), passedProps);
  return React939.createElement(
    "svg",
    __assign938({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React939.createElement("path", { d: "M2 11h14M2 17h11M2 5h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React939.createElement("path", { d: "M20 18.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0 0v-7.9a.6.6 0 01.6-.6H22", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef938 = React939.forwardRef(SvgPlaylist);
var Playlist_default = ForwardRef938;

// node_modules/iconoir-react/dist/esm/PlaystationGamepad.mjs
var React940 = __toESM(require_react(), 1);
var __assign939 = function() {
  __assign939 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign939.apply(this, arguments);
};
function SvgPlaystationGamepad(passedProps, svgRef) {
  var context = React940.useContext(IconoirContext);
  var props = __assign939(__assign939({}, context), passedProps);
  return React940.createElement(
    "svg",
    __assign939({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React940.createElement("path", { d: "M17.5 17.5c2.5 3.5 6.449.915 5.5-2.5-1.425-5.129-2.2-7.984-2.603-9.492A2.032 2.032 0 0018.438 4H5.562c-.918 0-1.718.625-1.941 1.515C2.78 8.863 2.033 11.802 1.144 15c-.948 3.415 3 6 5.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React940.createElement("path", { d: "M16 4v2a2 2 0 01-2 2h-4a2 2 0 01-2-2V4M8 16a2 2 0 100-4 2 2 0 000 4zM16 16a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef939 = React940.forwardRef(SvgPlaystationGamepad);
var PlaystationGamepad_default = ForwardRef939;

// node_modules/iconoir-react/dist/esm/PlugTypeA.mjs
var React941 = __toESM(require_react(), 1);
var __assign940 = function() {
  __assign940 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign940.apply(this, arguments);
};
function SvgPlugTypeA(passedProps, svgRef) {
  var context = React941.useContext(IconoirContext);
  var props = __assign940(__assign940({}, context), passedProps);
  return React941.createElement(
    "svg",
    __assign940({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React941.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM9 10v4M15 10v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef940 = React941.forwardRef(SvgPlugTypeA);
var PlugTypeA_default = ForwardRef940;

// node_modules/iconoir-react/dist/esm/PlugTypeC.mjs
var React942 = __toESM(require_react(), 1);
var __assign941 = function() {
  __assign941 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign941.apply(this, arguments);
};
function SvgPlugTypeC(passedProps, svgRef) {
  var context = React942.useContext(IconoirContext);
  var props = __assign941(__assign941({}, context), passedProps);
  return React942.createElement(
    "svg",
    __assign941({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React942.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React942.createElement("path", { d: "M8 14a2 2 0 100-4 2 2 0 000 4zM16 14a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef941 = React942.forwardRef(SvgPlugTypeC);
var PlugTypeC_default = ForwardRef941;

// node_modules/iconoir-react/dist/esm/PlugTypeG.mjs
var React943 = __toESM(require_react(), 1);
var __assign942 = function() {
  __assign942 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign942.apply(this, arguments);
};
function SvgPlugTypeG(passedProps, svgRef) {
  var context = React943.useContext(IconoirContext);
  var props = __assign942(__assign942({}, context), passedProps);
  return React943.createElement(
    "svg",
    __assign942({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React943.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM12 7v3M14 14h3M7 14h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef942 = React943.forwardRef(SvgPlugTypeG);
var PlugTypeG_default = ForwardRef942;

// node_modules/iconoir-react/dist/esm/PlugTypeL.mjs
var React944 = __toESM(require_react(), 1);
var __assign943 = function() {
  __assign943 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign943.apply(this, arguments);
};
function SvgPlugTypeL(passedProps, svgRef) {
  var context = React944.useContext(IconoirContext);
  var props = __assign943(__assign943({}, context), passedProps);
  return React944.createElement(
    "svg",
    __assign943({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React944.createElement("path", { d: "M10 3H5.6a.6.6 0 00-.6.6v16.8a.6.6 0 00.6.6H10M11 7h2M11 12h2M11 17h2M14 3h4.4a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef943 = React944.forwardRef(SvgPlugTypeL);
var PlugTypeL_default = ForwardRef943;

// node_modules/iconoir-react/dist/esm/Plus.mjs
var React945 = __toESM(require_react(), 1);
var __assign944 = function() {
  __assign944 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign944.apply(this, arguments);
};
function SvgPlus(passedProps, svgRef) {
  var context = React945.useContext(IconoirContext);
  var props = __assign944(__assign944({}, context), passedProps);
  return React945.createElement(
    "svg",
    __assign944({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React945.createElement("path", { d: "M6 12h6m6 0h-6m0 0V6m0 6v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef944 = React945.forwardRef(SvgPlus);
var Plus_default = ForwardRef944;

// node_modules/iconoir-react/dist/esm/PngFormat.mjs
var React946 = __toESM(require_react(), 1);
var __assign945 = function() {
  __assign945 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign945.apply(this, arguments);
};
function SvgPngFormat(passedProps, svgRef) {
  var context = React946.useContext(IconoirContext);
  var props = __assign945(__assign945({}, context), passedProps);
  return React946.createElement(
    "svg",
    __assign945({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React946.createElement("path", { d: "M4.5 15v-3m0 0V9h3v3h-3zM10.5 15V9l3 6V9M19.5 9h-3v6h3v-2.4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React946.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef945 = React946.forwardRef(SvgPngFormat);
var PngFormat_default = ForwardRef945;

// node_modules/iconoir-react/dist/esm/Pocket.mjs
var React947 = __toESM(require_react(), 1);
var __assign946 = function() {
  __assign946 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign946.apply(this, arguments);
};
function SvgPocket(passedProps, svgRef) {
  var context = React947.useContext(IconoirContext);
  var props = __assign946(__assign946({}, context), passedProps);
  return React947.createElement(
    "svg",
    __assign946({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React947.createElement("path", { d: "M21 6v5a9 9 0 11-18 0V6a2 2 0 012-2h14a2 2 0 012 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React947.createElement("path", { d: "M8 10l4 4 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef946 = React947.forwardRef(SvgPocket);
var Pocket_default = ForwardRef946;

// node_modules/iconoir-react/dist/esm/Podcast.mjs
var React948 = __toESM(require_react(), 1);
var __assign947 = function() {
  __assign947 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign947.apply(this, arguments);
};
function SvgPodcast(passedProps, svgRef) {
  var context = React948.useContext(IconoirContext);
  var props = __assign947(__assign947({}, context), passedProps);
  return React948.createElement(
    "svg",
    __assign947({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React948.createElement("path", { d: "M6 19a9.985 9.985 0 01-4-8C2 5.477 6.477 1 12 1s10 4.477 10 10a9.985 9.985 0 01-4 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React948.createElement("path", { d: "M6 19a9.985 9.985 0 01-4-8C2 5.477 6.477 1 12 1s10 4.477 10 10a9.985 9.985 0 01-4 8M7.528 15a6 6 0 118.944 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React948.createElement("path", { d: "M12 13a2 2 0 100-4 2 2 0 000 4zM10.076 16.283l.815-.543a2 2 0 012.218 0l.815.543a2 2 0 01.863 1.993l-.509 3.053A2 2 0 0112.306 23h-.612a2 2 0 01-1.973-1.671l-.508-3.053a2 2 0 01.863-1.993z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef947 = React948.forwardRef(SvgPodcast);
var Podcast_default = ForwardRef947;

// node_modules/iconoir-react/dist/esm/Pokeball.mjs
var React949 = __toESM(require_react(), 1);
var __assign948 = function() {
  __assign948 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign948.apply(this, arguments);
};
function SvgPokeball(passedProps, svgRef) {
  var context = React949.useContext(IconoirContext);
  var props = __assign948(__assign948({}, context), passedProps);
  return React949.createElement(
    "svg",
    __assign948({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React949.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React949.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React949.createElement("path", { d: "M2 12h7M15 12h7", stroke: "currentColor" })
  );
}
var ForwardRef948 = React949.forwardRef(SvgPokeball);
var Pokeball_default = ForwardRef948;

// node_modules/iconoir-react/dist/esm/PositionAlign.mjs
var React950 = __toESM(require_react(), 1);
var __assign949 = function() {
  __assign949 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign949.apply(this, arguments);
};
function SvgPositionAlign(passedProps, svgRef) {
  var context = React950.useContext(IconoirContext);
  var props = __assign949(__assign949({}, context), passedProps);
  return React950.createElement(
    "svg",
    __assign949({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React950.createElement("path", { d: "M4 16.01l.01-.011M4 20.01l.01-.011M4 8.01l.01-.011M4 4.01l.01-.011M4 12.01l.01-.011M12 12.01l.01-.011M8 20.01l.01-.011M12 20.01l.01-.011M16 20.01l.01-.011M20 20.01l.01-.011M20 16.01l.01-.011M20 12.01l.01-.011M20 8.01l.01-.011M20 4.01l.01-.011M16 4.01l.01-.011M12 4.01l.01-.011M8 4.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef949 = React950.forwardRef(SvgPositionAlign);
var PositionAlign_default = ForwardRef949;

// node_modules/iconoir-react/dist/esm/Position.mjs
var React951 = __toESM(require_react(), 1);
var __assign950 = function() {
  __assign950 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign950.apply(this, arguments);
};
function SvgPosition(passedProps, svgRef) {
  var context = React951.useContext(IconoirContext);
  var props = __assign950(__assign950({}, context), passedProps);
  return React951.createElement(
    "svg",
    __assign950({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React951.createElement("path", { d: "M12 19a7 7 0 100-14 7 7 0 000 14zM12 19v2M5 12H3M12 5V3M19 12h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef950 = React951.forwardRef(SvgPosition);
var Position_default = ForwardRef950;

// node_modules/iconoir-react/dist/esm/Potion.mjs
var React952 = __toESM(require_react(), 1);
var __assign951 = function() {
  __assign951 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign951.apply(this, arguments);
};
function SvgPotion(passedProps, svgRef) {
  var context = React952.useContext(IconoirContext);
  var props = __assign951(__assign951({}, context), passedProps);
  return React952.createElement(
    "svg",
    __assign951({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React952.createElement("path", { d: "M10 4h4v2.568c0 .258.17.487.412.579C22.938 10.37 20.907 22 15 22H9c-5.907 0-7.937-11.63.588-14.853a.629.629 0 00.412-.58V4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React952.createElement("path", { d: "M6 10h12", stroke: "currentColor" }),
    React952.createElement("path", { d: "M9 2h6", stroke: "currentColor", strokeLinecap: "round" }),
    React952.createElement("path", { d: "M11.667 13L10 16h4l-1.667 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef951 = React952.forwardRef(SvgPotion);
var Potion_default = ForwardRef951;

// node_modules/iconoir-react/dist/esm/Pound.mjs
var React953 = __toESM(require_react(), 1);
var __assign952 = function() {
  __assign952 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign952.apply(this, arguments);
};
function SvgPound(passedProps, svgRef) {
  var context = React953.useContext(IconoirContext);
  var props = __assign952(__assign952({}, context), passedProps);
  return React953.createElement(
    "svg",
    __assign952({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React953.createElement("path", { d: "M10.667 13.6c-1.111 2.667-2.778 5.333-5 6.4h10.555S17.89 20 19 18.933M15.111 13.6H4M17.333 8.8c0-2.651-2.238-4.8-5-4.8-2.761 0-5 2.149-5 4.8s2.239 4.8 5 4.8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef952 = React953.forwardRef(SvgPound);
var Pound_default = ForwardRef952;

// node_modules/iconoir-react/dist/esm/PrecisionTool.mjs
var React954 = __toESM(require_react(), 1);
var __assign953 = function() {
  __assign953 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign953.apply(this, arguments);
};
function SvgPrecisionTool(passedProps, svgRef) {
  var context = React954.useContext(IconoirContext);
  var props = __assign953(__assign953({}, context), passedProps);
  return React954.createElement(
    "svg",
    __assign953({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React954.createElement("path", { d: "M12 6v2M12 16v2M8 12H6M18 12h-2M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef953 = React954.forwardRef(SvgPrecisionTool);
var PrecisionTool_default = ForwardRef953;

// node_modules/iconoir-react/dist/esm/Presentation.mjs
var React955 = __toESM(require_react(), 1);
var __assign954 = function() {
  __assign954 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign954.apply(this, arguments);
};
function SvgPresentation(passedProps, svgRef) {
  var context = React955.useContext(IconoirContext);
  var props = __assign954(__assign954({}, context), passedProps);
  return React955.createElement(
    "svg",
    __assign954({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React955.createElement("path", { d: "M22 4.6v12.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6zM8.5 21.5L12 18l3.5 3.5M12 2v2M9 12v2M12 10v4M15 8v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef954 = React955.forwardRef(SvgPresentation);
var Presentation_default = ForwardRef954;

// node_modules/iconoir-react/dist/esm/PrinterAlt.mjs
var React956 = __toESM(require_react(), 1);
var __assign955 = function() {
  __assign955 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign955.apply(this, arguments);
};
function SvgPrinterAlt(passedProps, svgRef) {
  var context = React956.useContext(IconoirContext);
  var props = __assign955(__assign955({}, context), passedProps);
  return React956.createElement(
    "svg",
    __assign955({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React956.createElement("path", { d: "M17 13.01l.01-.011M7 17h10M6 10V3.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6V10m3 10.4V14a4 4 0 00-4-4H7a4 4 0 00-4 4v6.4a.6.6 0 00.6.6h16.8a.6.6 0 00.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef955 = React956.forwardRef(SvgPrinterAlt);
var PrinterAlt_default = ForwardRef955;

// node_modules/iconoir-react/dist/esm/Printer.mjs
var React957 = __toESM(require_react(), 1);
var __assign956 = function() {
  __assign956 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign956.apply(this, arguments);
};
function SvgPrinter(passedProps, svgRef) {
  var context = React957.useContext(IconoirContext);
  var props = __assign956(__assign956({}, context), passedProps);
  return React957.createElement(
    "svg",
    __assign956({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React957.createElement("path", { d: "M3 17h18M6 10V3.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6V10m3 10.4V14a4 4 0 00-4-4H7a4 4 0 00-4 4v6.4a.6.6 0 00.6.6h16.8a.6.6 0 00.6-.6z", stroke: "currentColor" }),
    React957.createElement("path", { d: "M17 13.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef956 = React957.forwardRef(SvgPrinter);
var Printer_default = ForwardRef956;

// node_modules/iconoir-react/dist/esm/PrintingPage.mjs
var React958 = __toESM(require_react(), 1);
var __assign957 = function() {
  __assign957 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign957.apply(this, arguments);
};
function SvgPrintingPage(passedProps, svgRef) {
  var context = React958.useContext(IconoirContext);
  var props = __assign957(__assign957({}, context), passedProps);
  return React958.createElement(
    "svg",
    __assign957({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React958.createElement("path", { d: "M17.571 18H20.4a.6.6 0 00.6-.6V11a4 4 0 00-4-4H7a4 4 0 00-4 4v6.4a.6.6 0 00.6.6h2.829M8 7V3.6a.6.6 0 01.6-.6h6.8a.6.6 0 01.6.6V7", stroke: "currentColor" }),
    React958.createElement("path", { d: "M6.098 20.315L6.428 18l.498-3.485A.6.6 0 017.52 14h8.96a.6.6 0 01.594.515L17.57 18l.331 2.315a.6.6 0 01-.594.685H6.692a.6.6 0 01-.594-.685z", stroke: "currentColor" }),
    React958.createElement("path", { d: "M17 10.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef957 = React958.forwardRef(SvgPrintingPage);
var PrintingPage_default = ForwardRef957;

// node_modules/iconoir-react/dist/esm/PriorityDown.mjs
var React959 = __toESM(require_react(), 1);
var __assign958 = function() {
  __assign958 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign958.apply(this, arguments);
};
function SvgPriorityDown(passedProps, svgRef) {
  var context = React959.useContext(IconoirContext);
  var props = __assign958(__assign958({}, context), passedProps);
  return React959.createElement(
    "svg",
    __assign958({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React959.createElement("path", { d: "M11.576 1.424a.6.6 0 01.848 0l10.152 10.152a.6.6 0 010 .848L12.424 22.576a.6.6 0 01-.848 0L1.424 12.424a.6.6 0 010-.848L11.576 1.424zM12 16l4-4m-4 4l-4-4.167M12 16V7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef958 = React959.forwardRef(SvgPriorityDown);
var PriorityDown_default = ForwardRef958;

// node_modules/iconoir-react/dist/esm/PriorityUp.mjs
var React960 = __toESM(require_react(), 1);
var __assign959 = function() {
  __assign959 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign959.apply(this, arguments);
};
function SvgPriorityUp(passedProps, svgRef) {
  var context = React960.useContext(IconoirContext);
  var props = __assign959(__assign959({}, context), passedProps);
  return React960.createElement(
    "svg",
    __assign959({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React960.createElement("path", { d: "M11.576 1.424a.6.6 0 01.848 0l10.152 10.152a.6.6 0 010 .848L12.424 22.576a.6.6 0 01-.848 0L1.424 12.424a.6.6 0 010-.848L11.576 1.424zM12 7l4 4m-4-4l-4 4.167M12 7v9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef959 = React960.forwardRef(SvgPriorityUp);
var PriorityUp_default = ForwardRef959;

// node_modules/iconoir-react/dist/esm/PrivacyPolicy.mjs
var React961 = __toESM(require_react(), 1);
var __assign960 = function() {
  __assign960 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign960.apply(this, arguments);
};
function SvgPrivacypolicy(passedProps, svgRef) {
  var context = React961.useContext(IconoirContext);
  var props = __assign960(__assign960({}, context), passedProps);
  return React961.createElement(
    "svg",
    __assign960({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React961.createElement("path", { d: "M20 12V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H13M8 10h8M8 6h4m-4 8h3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React961.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20M19.992 15.125l2.556.649c.266.068.453.31.445.584C22.821 22.116 19.5 23 19.5 23s-3.321-.884-3.493-6.642a.588.588 0 01.445-.584l2.556-.649c.323-.082.661-.082.984 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef960 = React961.forwardRef(SvgPrivacypolicy);
var PrivacyPolicy_default = ForwardRef960;

// node_modules/iconoir-react/dist/esm/PrivateWifi.mjs
var React962 = __toESM(require_react(), 1);
var __assign961 = function() {
  __assign961 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign961.apply(this, arguments);
};
function SvgPrivateWifi(passedProps, svgRef) {
  var context = React962.useContext(IconoirContext);
  var props = __assign961(__assign961({}, context), passedProps);
  return React962.createElement(
    "svg",
    __assign961({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React962.createElement("path", { d: "M12 18.51l.01-.011M2 7c6-4.5 14-4.5 20 0M5 11c4-3 10-3 14 0M8.5 14.5c2.25-1.4 4.75-1.4 7 0M21.167 18.5h.233a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 01.6-.6h.233m3.334 0v-1.75c0-.583-.334-1.75-1.667-1.75s-1.667 1.167-1.667 1.75v1.75m3.334 0h-3.334", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef961 = React962.forwardRef(SvgPrivateWifi);
var PrivateWifi_default = ForwardRef961;

// node_modules/iconoir-react/dist/esm/ProfileCircle.mjs
var React963 = __toESM(require_react(), 1);
var __assign962 = function() {
  __assign962 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign962.apply(this, arguments);
};
function SvgProfileCircle(passedProps, svgRef) {
  var context = React963.useContext(IconoirContext);
  var props = __assign962(__assign962({}, context), passedProps);
  return React963.createElement(
    "svg",
    __assign962({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React963.createElement("path", { d: "M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React963.createElement("path", { d: "M4.271 18.346S6.5 15.5 12 15.5s7.73 2.846 7.73 2.846M12 12a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef962 = React963.forwardRef(SvgProfileCircle);
var ProfileCircle_default = ForwardRef962;

// node_modules/iconoir-react/dist/esm/Prohibition.mjs
var React964 = __toESM(require_react(), 1);
var __assign963 = function() {
  __assign963 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign963.apply(this, arguments);
};
function SvgProhibition(passedProps, svgRef) {
  var context = React964.useContext(IconoirContext);
  var props = __assign963(__assign963({}, context), passedProps);
  return React964.createElement(
    "svg",
    __assign963({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React964.createElement("path", { d: "M19.141 5A9.97 9.97 0 0012 2C6.477 2 2 6.477 2 12a9.968 9.968 0 002.859 7M19.14 5A9.967 9.967 0 0122 12c0 5.523-4.477 10-10 10a9.97 9.97 0 01-7.141-3M19.14 5L4.86 19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef963 = React964.forwardRef(SvgProhibition);
var Prohibition_default = ForwardRef963;

// node_modules/iconoir-react/dist/esm/ProjectCurve3D.mjs
var React965 = __toESM(require_react(), 1);
var __assign964 = function() {
  __assign964 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign964.apply(this, arguments);
};
function SvgProjectCurve3D(passedProps, svgRef) {
  var context = React965.useContext(IconoirContext);
  var props = __assign964(__assign964({}, context), passedProps);
  return React965.createElement(
    "svg",
    __assign964({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React965.createElement("path", { d: "M12 21c-4.97 0-9-1.79-9-4s4.03-4 9-4 9 1.79 9 4-4.03 4-9 4zM12 2a3 3 0 013 3v1H9V5a3 3 0 013-3zM3.5 15.5l4-7M20.5 15.5l-4-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef964 = React965.forwardRef(SvgProjectCurve3D);
var ProjectCurve3D_default = ForwardRef964;

// node_modules/iconoir-react/dist/esm/Puzzle.mjs
var React966 = __toESM(require_react(), 1);
var __assign965 = function() {
  __assign965 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign965.apply(this, arguments);
};
function SvgPuzzle(passedProps, svgRef) {
  var context = React966.useContext(IconoirContext);
  var props = __assign965(__assign965({}, context), passedProps);
  return React966.createElement(
    "svg",
    __assign965({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React966.createElement("path", { d: "M4 14v4.4a.6.6 0 00.6.6H10M19 14v4.4a.6.6 0 01-.6.6H14M14 5h4.4a.6.6 0 01.6.6V10M4 10V5.6a.6.6 0 01.6-.6H10M14 19v1a2 2 0 11-4 0v-1M4 10h1a2 2 0 110 4H4M19 10h1a2 2 0 110 4h-1M14 5V4a2 2 0 10-4 0v1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef965 = React966.forwardRef(SvgPuzzle);
var Puzzle_default = ForwardRef965;

// node_modules/iconoir-react/dist/esm/QrCode.mjs
var React967 = __toESM(require_react(), 1);
var __assign966 = function() {
  __assign966 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign966.apply(this, arguments);
};
function SvgQrCode(passedProps, svgRef) {
  var context = React967.useContext(IconoirContext);
  var props = __assign966(__assign966({}, context), passedProps);
  return React967.createElement(
    "svg",
    __assign966({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React967.createElement("path", { d: "M15 12v3M12 3v3M18 12v3M12 18h9M18 21h3M6 12h3M6 6.011L6.01 6M12 12.011l.01-.011M3 12.011L3.01 12M12 9.011L12.01 9M12 15.011l.01-.011M15 21.011l.01-.011M12 21.011l.01-.011M21 12.011l.01-.011M21 15.011l.01-.011M18 6.011L18.01 6M9 3.6v4.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6zM21 3.6v4.8a.6.6 0 01-.6.6h-4.8a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6zM6 18.011L6.01 18M9 15.6v4.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6v-4.8a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef966 = React967.forwardRef(SvgQrCode);
var QrCode_default = ForwardRef966;

// node_modules/iconoir-react/dist/esm/QuestionMark.mjs
var React968 = __toESM(require_react(), 1);
var __assign967 = function() {
  __assign967 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign967.apply(this, arguments);
};
function SvgQuestionMark(passedProps, svgRef) {
  var context = React968.useContext(IconoirContext);
  var props = __assign967(__assign967({}, context), passedProps);
  return React968.createElement(
    "svg",
    __assign967({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React968.createElement("path", { d: "M7.9 8.08c0-4.773 7.5-4.773 7.5 0 0 3.409-3.409 2.727-3.409 6.818M12 19.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef967 = React968.forwardRef(SvgQuestionMark);
var QuestionMark_default = ForwardRef967;

// node_modules/iconoir-react/dist/esm/QuoteMessage.mjs
var React969 = __toESM(require_react(), 1);
var __assign968 = function() {
  __assign968 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign968.apply(this, arguments);
};
function SvgQuoteMessage(passedProps, svgRef) {
  var context = React969.useContext(IconoirContext);
  var props = __assign968(__assign968({}, context), passedProps);
  return React969.createElement(
    "svg",
    __assign968({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React969.createElement("path", { d: "M3 20.29V5a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H7.961a2 2 0 00-1.561.75l-2.331 2.914A.6.6 0 013 20.29z", stroke: "currentColor" }),
    React969.createElement("path", { d: "M10.5 10h-2a1 1 0 01-1-1V8a1 1 0 011-1h1a1 1 0 011 1v2zm0 0c0 1-1 2-2 3M16.5 10h-2a1 1 0 01-1-1V8a1 1 0 011-1h1a1 1 0 011 1v2zm0 0c0 1-1 2-2 3", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef968 = React969.forwardRef(SvgQuoteMessage);
var QuoteMessage_default = ForwardRef968;

// node_modules/iconoir-react/dist/esm/Quote.mjs
var React970 = __toESM(require_react(), 1);
var __assign969 = function() {
  __assign969 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign969.apply(this, arguments);
};
function SvgQuote(passedProps, svgRef) {
  var context = React970.useContext(IconoirContext);
  var props = __assign969(__assign969({}, context), passedProps);
  return React970.createElement(
    "svg",
    __assign969({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React970.createElement("path", { d: "M10 12H5a1 1 0 01-1-1V7.5a1 1 0 011-1h4a1 1 0 011 1V12zm0 0c0 2.5-1 4-4 5.5M20 12h-5a1 1 0 01-1-1V7.5a1 1 0 011-1h4a1 1 0 011 1V12zm0 0c0 2.5-1 4-4 5.5", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef969 = React970.forwardRef(SvgQuote);
var Quote_default = ForwardRef969;

// node_modules/iconoir-react/dist/esm/Radiation.mjs
var React971 = __toESM(require_react(), 1);
var __assign970 = function() {
  __assign970 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign970.apply(this, arguments);
};
function SvgRadiation(passedProps, svgRef) {
  var context = React971.useContext(IconoirContext);
  var props = __assign970(__assign970({}, context), passedProps);
  return React971.createElement(
    "svg",
    __assign970({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React971.createElement("path", { d: "M17 20.662a9.955 9.955 0 01-5 1.337 9.954 9.954 0 01-5-1.337L10 16s1 .4 2 .4 2-.4 2-.4l3 4.662zM16.998 3.339A9.954 9.954 0 0120.656 7a9.954 9.954 0 011.342 5l-5.537-.268s-.154-1.066-.654-1.932c-.5-.866-1.346-1.532-1.346-1.532l2.537-4.93zM1.998 12A9.954 9.954 0 013.34 7a9.954 9.954 0 013.658-3.66l2.537 4.928S8.69 8.934 8.19 9.8c-.5.866-.654 1.932-.654 1.932L1.998 12zM12 14a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef970 = React971.forwardRef(SvgRadiation);
var Radiation_default = ForwardRef970;

// node_modules/iconoir-react/dist/esm/Radius.mjs
var React972 = __toESM(require_react(), 1);
var __assign971 = function() {
  __assign971 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign971.apply(this, arguments);
};
function SvgRadius(passedProps, svgRef) {
  var context = React972.useContext(IconoirContext);
  var props = __assign971(__assign971({}, context), passedProps);
  return React972.createElement(
    "svg",
    __assign971({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React972.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zM19 12l-3-3m3 3l-3 3m3-3h-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React972.createElement("path", { d: "M12 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef971 = React972.forwardRef(SvgRadius);
var Radius_default = ForwardRef971;

// node_modules/iconoir-react/dist/esm/Rain.mjs
var React973 = __toESM(require_react(), 1);
var __assign972 = function() {
  __assign972 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign972.apply(this, arguments);
};
function SvgRain(passedProps, svgRef) {
  var context = React973.useContext(IconoirContext);
  var props = __assign972(__assign972({}, context), passedProps);
  return React973.createElement(
    "svg",
    __assign972({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React973.createElement("path", { d: "M12 14v2M12 20v2M8 18v2M16 18v2M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef972 = React973.forwardRef(SvgRain);
var Rain_default = ForwardRef972;

// node_modules/iconoir-react/dist/esm/RawFormat.mjs
var React974 = __toESM(require_react(), 1);
var __assign973 = function() {
  __assign973 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign973.apply(this, arguments);
};
function SvgRawFormat(passedProps, svgRef) {
  var context = React974.useContext(IconoirContext);
  var props = __assign973(__assign973({}, context), passedProps);
  return React974.createElement(
    "svg",
    __assign973({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React974.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React974.createElement("path", { d: "M16.5 9v6l1.5-3 1.5 3V9M10.5 15v-3m0 0v-1.5A1.5 1.5 0 0112 9v0a1.5 1.5 0 011.5 1.5V12m-3 0h3m0 0v3M4.5 15V9h2.4a.6.6 0 01.6.6v.9A1.5 1.5 0 016 12v0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React974.createElement("path", { d: "M4.5 12H6v0a1.5 1.5 0 011.5 1.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef973 = React974.forwardRef(SvgRawFormat);
var RawFormat_default = ForwardRef973;

// node_modules/iconoir-react/dist/esm/ReceiveDollars.mjs
var React975 = __toESM(require_react(), 1);
var __assign974 = function() {
  __assign974 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign974.apply(this, arguments);
};
function SvgReceiveDollars(passedProps, svgRef) {
  var context = React975.useContext(IconoirContext);
  var props = __assign974(__assign974({}, context), passedProps);
  return React975.createElement(
    "svg",
    __assign974({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React975.createElement("path", { d: "M10 8.23c-.8-.737-2.207-1.25-3.5-1.282M3 15.23c.752.925 2.15 1.453 3.5 1.498m0-9.781c-1.539-.038-2.917.604-2.917 2.36 0 3.23 6.417 1.615 6.417 4.846 0 1.842-1.708 2.634-3.5 2.575m0-9.781V5m0 11.729V19M21 12h-8m0 0l3.84-4M13 12l3.84 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef974 = React975.forwardRef(SvgReceiveDollars);
var ReceiveDollars_default = ForwardRef974;

// node_modules/iconoir-react/dist/esm/ReceiveEuros.mjs
var React976 = __toESM(require_react(), 1);
var __assign975 = function() {
  __assign975 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign975.apply(this, arguments);
};
function SvgReceiveEuros(passedProps, svgRef) {
  var context = React976.useContext(IconoirContext);
  var props = __assign975(__assign975({}, context), passedProps);
  return React976.createElement(
    "svg",
    __assign975({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React976.createElement("path", { d: "M21 12h-8m0 0l3.84-4M13 12l3.84 4M11 7.503A4.746 4.746 0 008.87 7C6.18 7 4 9.239 4 12s2.18 5 4.87 5c.764 0 1.487-.18 2.13-.503M3 11h6M3 13h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef975 = React976.forwardRef(SvgReceiveEuros);
var ReceiveEuros_default = ForwardRef975;

// node_modules/iconoir-react/dist/esm/ReceivePounds.mjs
var React977 = __toESM(require_react(), 1);
var __assign976 = function() {
  __assign976 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign976.apply(this, arguments);
};
function SvgReceivePounds(passedProps, svgRef) {
  var context = React977.useContext(IconoirContext);
  var props = __assign976(__assign976({}, context), passedProps);
  return React977.createElement(
    "svg",
    __assign976({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React977.createElement("path", { d: "M21 12h-8m0 0l3.84-4M13 12l3.84 4M7 13c-.667 1.667-1.667 3.333-3 4h6.333s1 0 1.667-.667M9.667 13H3M11 10a3 3 0 10-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef976 = React977.forwardRef(SvgReceivePounds);
var ReceivePounds_default = ForwardRef976;

// node_modules/iconoir-react/dist/esm/ReceiveYens.mjs
var React978 = __toESM(require_react(), 1);
var __assign977 = function() {
  __assign977 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign977.apply(this, arguments);
};
function SvgReceiveYens(passedProps, svgRef) {
  var context = React978.useContext(IconoirContext);
  var props = __assign977(__assign977({}, context), passedProps);
  return React978.createElement(
    "svg",
    __assign977({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React978.createElement("path", { d: "M21 12h-8m0 0l3.84-4M13 12l3.84 4M3 13h8M3 7l4 5.5M11 7l-4 5.5m0 0V18M3 15h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef977 = React978.forwardRef(SvgReceiveYens);
var ReceiveYens_default = ForwardRef977;

// node_modules/iconoir-react/dist/esm/RedoAction.mjs
var React979 = __toESM(require_react(), 1);
var __assign978 = function() {
  __assign978 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign978.apply(this, arguments);
};
function SvgRedoAction(passedProps, svgRef) {
  var context = React979.useContext(IconoirContext);
  var props = __assign978(__assign978({}, context), passedProps);
  return React979.createElement(
    "svg",
    __assign978({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React979.createElement("path", { d: "M19 5v6M15.5 8H9s0 0 0 0-5 0-5 4.706C4 18 9 18 9 18h8.714", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React979.createElement("path", { d: "M12.5 11.5L16 8l-3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef978 = React979.forwardRef(SvgRedoAction);
var RedoAction_default = ForwardRef978;

// node_modules/iconoir-react/dist/esm/RedoCircle.mjs
var React980 = __toESM(require_react(), 1);
var __assign979 = function() {
  __assign979 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign979.apply(this, arguments);
};
function SvgRedoCircle(passedProps, svgRef) {
  var context = React980.useContext(IconoirContext);
  var props = __assign979(__assign979({}, context), passedProps);
  return React980.createElement(
    "svg",
    __assign979({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React980.createElement("path", { d: "M17 10.625H9.8s0 0 0 0-2.8 0-2.8 3C7 17 9.8 17 9.8 17h.8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React980.createElement("path", { d: "M13.5 14l3.5-3.375L13.5 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React980.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef979 = React980.forwardRef(SvgRedoCircle);
var RedoCircle_default = ForwardRef979;

// node_modules/iconoir-react/dist/esm/Redo.mjs
var React981 = __toESM(require_react(), 1);
var __assign980 = function() {
  __assign980 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign980.apply(this, arguments);
};
function SvgRedo(passedProps, svgRef) {
  var context = React981.useContext(IconoirContext);
  var props = __assign980(__assign980({}, context), passedProps);
  return React981.createElement(
    "svg",
    __assign980({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React981.createElement("path", { d: "M19.5 8H9s0 0 0 0-5 0-5 4.706C4 18 9 18 9 18h8.714", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React981.createElement("path", { d: "M16.5 11.5L20 8l-3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef980 = React981.forwardRef(SvgRedo);
var Redo_default = ForwardRef980;

// node_modules/iconoir-react/dist/esm/ReduceRoundArrow.mjs
var React982 = __toESM(require_react(), 1);
var __assign981 = function() {
  __assign981 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign981.apply(this, arguments);
};
function SvgReduceRoundArrow(passedProps, svgRef) {
  var context = React982.useContext(IconoirContext);
  var props = __assign981(__assign981({}, context), passedProps);
  return React982.createElement(
    "svg",
    __assign981({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React982.createElement("path", { d: "M7 9.5L9.5 12 7 14.5M16.5 9.5L14 12l2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React982.createElement("path", { d: "M6 5h12a4 4 0 014 4v6a4 4 0 01-4 4H6a4 4 0 01-4-4V9a4 4 0 014-4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef981 = React982.forwardRef(SvgReduceRoundArrow);
var ReduceRoundArrow_default = ForwardRef981;

// node_modules/iconoir-react/dist/esm/Reduce.mjs
var React983 = __toESM(require_react(), 1);
var __assign982 = function() {
  __assign982 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign982.apply(this, arguments);
};
function SvgReduce(passedProps, svgRef) {
  var context = React983.useContext(IconoirContext);
  var props = __assign982(__assign982({}, context), passedProps);
  return React983.createElement(
    "svg",
    __assign982({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React983.createElement("path", { d: "M4 20l5-5m0 0v4m0-4H5M20 4l-5 5m0 0V5m0 4h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef982 = React983.forwardRef(SvgReduce);
var Reduce_default = ForwardRef982;

// node_modules/iconoir-react/dist/esm/RefreshCircular.mjs
var React984 = __toESM(require_react(), 1);
var __assign983 = function() {
  __assign983 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign983.apply(this, arguments);
};
function SvgRefreshCircular(passedProps, svgRef) {
  var context = React984.useContext(IconoirContext);
  var props = __assign983(__assign983({}, context), passedProps);
  return React984.createElement(
    "svg",
    __assign983({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React984.createElement("circle", { cx: 12, cy: 12, r: 10, stroke: "currentColor" }),
    React984.createElement("path", { d: "M16.583 9.667C15.81 8.097 14.043 7 11.988 7 9.388 7 7.25 8.754 7 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React984.createElement("path", { d: "M14.494 9.722H16.4a.6.6 0 00.6-.6V7.5M7.417 13.667C8.191 15.629 9.957 17 12.012 17c2.6 0 4.736-2.193 4.988-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React984.createElement("path", { d: "M9.506 13.622H7.6a.6.6 0 00-.6.6V16.4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef983 = React984.forwardRef(SvgRefreshCircular);
var RefreshCircular_default = ForwardRef983;

// node_modules/iconoir-react/dist/esm/RefreshDouble.mjs
var React985 = __toESM(require_react(), 1);
var __assign984 = function() {
  __assign984 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign984.apply(this, arguments);
};
function SvgRefreshDouble(passedProps, svgRef) {
  var context = React985.useContext(IconoirContext);
  var props = __assign984(__assign984({}, context), passedProps);
  return React985.createElement(
    "svg",
    __assign984({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React985.createElement("path", { d: "M21.168 8A10.003 10.003 0 0012 2C6.815 2 2.55 5.947 2.05 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React985.createElement("path", { d: "M17 8h4.4a.6.6 0 00.6-.6V3M2.881 16c1.544 3.532 5.068 6 9.168 6 5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React985.createElement("path", { d: "M7.05 16h-4.4a.6.6 0 00-.6.6V21", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef984 = React985.forwardRef(SvgRefreshDouble);
var RefreshDouble_default = ForwardRef984;

// node_modules/iconoir-react/dist/esm/Refresh.mjs
var React986 = __toESM(require_react(), 1);
var __assign985 = function() {
  __assign985 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign985.apply(this, arguments);
};
function SvgRefresh(passedProps, svgRef) {
  var context = React986.useContext(IconoirContext);
  var props = __assign985(__assign985({}, context), passedProps);
  return React986.createElement(
    "svg",
    __assign985({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React986.createElement("path", { d: "M21.888 13.5C21.164 18.311 17.013 22 12 22 6.477 22 2 17.523 2 12S6.477 2 12 2c4.1 0 7.625 2.468 9.168 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React986.createElement("path", { d: "M17 8h4.4a.6.6 0 00.6-.6V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef985 = React986.forwardRef(SvgRefresh);
var Refresh_default = ForwardRef985;

// node_modules/iconoir-react/dist/esm/ReloadWindow.mjs
var React987 = __toESM(require_react(), 1);
var __assign986 = function() {
  __assign986 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign986.apply(this, arguments);
};
function SvgReloadWindow(passedProps, svgRef) {
  var context = React987.useContext(IconoirContext);
  var props = __assign986(__assign986({}, context), passedProps);
  return React987.createElement(
    "svg",
    __assign986({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React987.createElement("path", { d: "M11 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v7", stroke: "currentColor", strokeLinecap: "round" }),
    React987.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M21.666 16.667C21.049 15.097 19.636 14 17.99 14c-1.758 0-3.252 1.255-3.793 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React987.createElement("path", { d: "M19.995 16.772H21.4a.6.6 0 00.6-.6V14.55M14.334 19.333C14.953 20.903 16.366 22 18.01 22c1.758 0 3.252-1.255 3.793-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React987.createElement("path", { d: "M16.005 19.228H14.6a.6.6 0 00-.6.6v1.622", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef986 = React987.forwardRef(SvgReloadWindow);
var ReloadWindow_default = ForwardRef986;

// node_modules/iconoir-react/dist/esm/ReminderHandGesture.mjs
var React988 = __toESM(require_react(), 1);
var __assign987 = function() {
  __assign987 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign987.apply(this, arguments);
};
function SvgReminderHandGesture(passedProps, svgRef) {
  var context = React988.useContext(IconoirContext);
  var props = __assign987(__assign987({}, context), passedProps);
  return React988.createElement(
    "svg",
    __assign987({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React988.createElement("path", { d: "M17.5 12l2.004 2.672a2 2 0 01-.126 2.552l-3.784 4.127a1.998 1.998 0 01-1.473.649H9.5c-2.358 0-3.622-2.575-3.982-3.93a.55.55 0 01-.018-.143V9.43c0-2.286 3-2.286 3 0v.57", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React988.createElement("path", { d: "M11.5 10V8.286c0-2.286-3-2.286-3 0V10M14.5 10V7.5c0-2.286-3-2.286-3 0 0 0 0 0 0 0V10M14.5 10V7.5 3.499A1.5 1.5 0 0116 2v0a1.5 1.5 0 011.5 1.5V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React988.createElement("path", { d: "M17.563 6.5h2.062C20.5 6.5 21 6.078 21 5.25 21 4.422 20.5 4 19.625 4H12.25C11.56 4 11 4.56 11 5.25v.25a1 1 0 001 1v0", stroke: "currentColor" })
  );
}
var ForwardRef987 = React988.forwardRef(SvgReminderHandGesture);
var ReminderHandGesture_default = ForwardRef987;

// node_modules/iconoir-react/dist/esm/RemoveDatabaseScript.mjs
var React989 = __toESM(require_react(), 1);
var __assign988 = function() {
  __assign988 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign988.apply(this, arguments);
};
function SvgRemoveDatabaseScript(passedProps, svgRef) {
  var context = React989.useContext(IconoirContext);
  var props = __assign988(__assign988({}, context), passedProps);
  return React989.createElement(
    "svg",
    __assign988({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React989.createElement("path", { d: "M22 14V8.5M6 13V6a3 3 0 013-3h5M18 4h4M12 21H6a4 4 0 010-8h12a4 4 0 104 4v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef988 = React989.forwardRef(SvgRemoveDatabaseScript);
var RemoveDatabaseScript_default = ForwardRef988;

// node_modules/iconoir-react/dist/esm/RemoveFolder.mjs
var React990 = __toESM(require_react(), 1);
var __assign989 = function() {
  __assign989 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign989.apply(this, arguments);
};
function SvgRemoveFolder(passedProps, svgRef) {
  var context = React990.useContext(IconoirContext);
  var props = __assign989(__assign989({}, context), passedProps);
  return React990.createElement(
    "svg",
    __assign989({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React990.createElement("path", { d: "M18 6h4M21.4 20H2.6a.6.6 0 01-.6-.6V11h19.4a.6.6 0 01.6.6v7.8a.6.6 0 01-.6.6zM2 11V4.6a.6.6 0 01.6-.6h6.178a.6.6 0 01.39.144l3.164 2.712a.6.6 0 00.39.144H14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef989 = React990.forwardRef(SvgRemoveFolder);
var RemoveFolder_default = ForwardRef989;

// node_modules/iconoir-react/dist/esm/RemoveFrame.mjs
var React991 = __toESM(require_react(), 1);
var __assign990 = function() {
  __assign990 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign990.apply(this, arguments);
};
function SvgRemoveFrame(passedProps, svgRef) {
  var context = React991.useContext(IconoirContext);
  var props = __assign990(__assign990({}, context), passedProps);
  return React991.createElement(
    "svg",
    __assign990({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React991.createElement("path", { d: "M4.998 2H2v2.998h2.998V2zM4.999 3.5h14M3.5 4.998V19M20.498 5v14.002M4.999 20.5h14M4.998 19H2v2.998h2.998V19zM21.997 2.001H19v2.998h2.998V2.001zM21.997 19.001H19v2.998h2.998v-2.998z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React991.createElement("path", { d: "M9 12h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef990 = React991.forwardRef(SvgRemoveFrame);
var RemoveFrame_default = ForwardRef990;

// node_modules/iconoir-react/dist/esm/RemoveFromCart.mjs
var React992 = __toESM(require_react(), 1);
var __assign991 = function() {
  __assign991 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign991.apply(this, arguments);
};
function SvgRemoveFromCart(passedProps, svgRef) {
  var context = React992.useContext(IconoirContext);
  var props = __assign991(__assign991({}, context), passedProps);
  return React992.createElement(
    "svg",
    __assign991({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React992.createElement("path", { d: "M3 6h19l-3 10H6L3 6zm0 0l-.75-2.5M9.992 11h4M11 19.5a1.5 1.5 0 01-3 0M17 19.5a1.5 1.5 0 01-3 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef991 = React992.forwardRef(SvgRemoveFromCart);
var RemoveFromCart_default = ForwardRef991;

// node_modules/iconoir-react/dist/esm/RemoveKeyframeAlt.mjs
var React993 = __toESM(require_react(), 1);
var __assign992 = function() {
  __assign992 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign992.apply(this, arguments);
};
function SvgRemoveKeyframeAlt(passedProps, svgRef) {
  var context = React993.useContext(IconoirContext);
  var props = __assign992(__assign992({}, context), passedProps);
  return React993.createElement(
    "svg",
    __assign992({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React993.createElement("path", { d: "M9 12h6M20.777 13.345l-7.297 8.027a2 2 0 01-2.96 0l-7.297-8.027a2 2 0 010-2.69l7.297-8.027a2 2 0 012.96 0l7.297 8.027a2 2 0 010 2.69z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef992 = React993.forwardRef(SvgRemoveKeyframeAlt);
var RemoveKeyframeAlt_default = ForwardRef992;

// node_modules/iconoir-react/dist/esm/RemoveKeyframe.mjs
var React994 = __toESM(require_react(), 1);
var __assign993 = function() {
  __assign993 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign993.apply(this, arguments);
};
function SvgRemoveKeyframe(passedProps, svgRef) {
  var context = React994.useContext(IconoirContext);
  var props = __assign993(__assign993({}, context), passedProps);
  return React994.createElement(
    "svg",
    __assign993({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React994.createElement("path", { d: "M16 5h6M16.819 14.329l-5.324 5.99a2 2 0 01-2.99 0l-5.324-5.99a2 2 0 010-2.658l5.324-5.99a2 2 0 012.99 0l5.324 5.99a2 2 0 010 2.658z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef993 = React994.forwardRef(SvgRemoveKeyframe);
var RemoveKeyframe_default = ForwardRef993;

// node_modules/iconoir-react/dist/esm/RemoveKeyframes.mjs
var React995 = __toESM(require_react(), 1);
var __assign994 = function() {
  __assign994 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign994.apply(this, arguments);
};
function SvgRemoveKeyframes(passedProps, svgRef) {
  var context = React995.useContext(IconoirContext);
  var props = __assign994(__assign994({}, context), passedProps);
  return React995.createElement(
    "svg",
    __assign994({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React995.createElement("path", { d: "M2 12h6M6.25 6l.245-.28a2 2 0 013.01 0l4.343 4.963a2 2 0 010 2.634L9.505 18.28a2 2 0 01-3.01 0L6.25 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React995.createElement("path", { d: "M13 19l4.884-5.698a2 2 0 000-2.604L13 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React995.createElement("path", { d: "M17 19l4.884-5.698a2 2 0 000-2.604L17 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef994 = React995.forwardRef(SvgRemoveKeyframes);
var RemoveKeyframes_default = ForwardRef994;

// node_modules/iconoir-react/dist/esm/RemoveLink.mjs
var React996 = __toESM(require_react(), 1);
var __assign995 = function() {
  __assign995 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign995.apply(this, arguments);
};
function SvgRemoveLink(passedProps, svgRef) {
  var context = React996.useContext(IconoirContext);
  var props = __assign995(__assign995({}, context), passedProps);
  return React996.createElement(
    "svg",
    __assign995({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React996.createElement("path", { d: "M7.143 16.995c-.393 0-.775-.043-1.143-.123-2.29-.506-4-2.496-4-4.874 0-2.714 2.226-4.923 5-4.996M13.318 9.634A5.517 5.517 0 0011 7.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React996.createElement("path", { d: "M16.857 7c.393 0 .775.043 1.143.124 2.29.505 4 2.495 4 4.874 0 2.76-2.302 4.997-5.143 4.997h-1.714c-2.826 0-5.143-2.506-5.143-4.997 0 0 0-.998.5-1.498M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef995 = React996.forwardRef(SvgRemoveLink);
var RemoveLink_default = ForwardRef995;

// node_modules/iconoir-react/dist/esm/RemoveMediaImage.mjs
var React997 = __toESM(require_react(), 1);
var __assign996 = function() {
  __assign996 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign996.apply(this, arguments);
};
function SvgRemoveMediaImage(passedProps, svgRef) {
  var context = React997.useContext(IconoirContext);
  var props = __assign996(__assign996({}, context), passedProps);
  return React997.createElement(
    "svg",
    __assign996({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React997.createElement("path", { d: "M3 16l7-3 4 1.818M16 10a2 2 0 110-4 2 2 0 010 4zM16.879 21.121L19 19m2.121-2.121L19 19m0 0l-2.121-2.121M19 19l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React997.createElement("path", { d: "M13 21H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef996 = React997.forwardRef(SvgRemoveMediaImage);
var RemoveMediaImage_default = ForwardRef996;

// node_modules/iconoir-react/dist/esm/RemoveMediaVideo.mjs
var React998 = __toESM(require_react(), 1);
var __assign997 = function() {
  __assign997 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign997.apply(this, arguments);
};
function SvgRemoveMediaVideo(passedProps, svgRef) {
  var context = React998.useContext(IconoirContext);
  var props = __assign997(__assign997({}, context), passedProps);
  return React998.createElement(
    "svg",
    __assign997({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React998.createElement("path", { d: "M16.879 21.121L19 19m2.121-2.121L19 19m0 0l-2.121-2.121M19 19l2.121 2.121M13 21H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6V13", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React998.createElement("path", { d: "M9.898 8.513a.6.6 0 00-.898.52v5.933a.6.6 0 00.898.521l5.19-2.966a.6.6 0 000-1.042l-5.19-2.966z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef997 = React998.forwardRef(SvgRemoveMediaVideo);
var RemoveMediaVideo_default = ForwardRef997;

// node_modules/iconoir-react/dist/esm/RemovePageAlt.mjs
var React999 = __toESM(require_react(), 1);
var __assign998 = function() {
  __assign998 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign998.apply(this, arguments);
};
function SvgRemovePageAlt(passedProps, svgRef) {
  var context = React999.useContext(IconoirContext);
  var props = __assign998(__assign998({}, context), passedProps);
  return React999.createElement(
    "svg",
    __assign998({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React999.createElement("path", { d: "M4 12V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React999.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20M1.992 19h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef998 = React999.forwardRef(SvgRemovePageAlt);
var RemovePageAlt_default = ForwardRef998;

// node_modules/iconoir-react/dist/esm/RemovePage.mjs
var React1000 = __toESM(require_react(), 1);
var __assign999 = function() {
  __assign999 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign999.apply(this, arguments);
};
function SvgRemovePage(passedProps, svgRef) {
  var context = React1000.useContext(IconoirContext);
  var props = __assign999(__assign999({}, context), passedProps);
  return React1000.createElement(
    "svg",
    __assign999({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1000.createElement("path", { d: "M9 12h6M4 21.4V2.6a.6.6 0 01.6-.6h11.652a.6.6 0 01.424.176l3.148 3.148A.6.6 0 0120 5.75V21.4a.6.6 0 01-.6.6H4.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1000.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef999 = React1000.forwardRef(SvgRemovePage);
var RemovePage_default = ForwardRef999;

// node_modules/iconoir-react/dist/esm/RemovePinAlt.mjs
var React1001 = __toESM(require_react(), 1);
var __assign1000 = function() {
  __assign1000 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1000.apply(this, arguments);
};
function SvgRemovePinAlt(passedProps, svgRef) {
  var context = React1001.useContext(IconoirContext);
  var props = __assign1000(__assign1000({}, context), passedProps);
  return React1001.createElement(
    "svg",
    __assign1000({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1001.createElement("path", { d: "M16 9.2C16 13.177 9 20 9 20S2 13.177 2 9.2C2 5.224 5.134 2 9 2s7 3.224 7 7.2z", stroke: "currentColor" }),
    React1001.createElement("path", { d: "M9 10a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1001.createElement("path", { d: "M16.88 21.121L19 19m2.122-2.121L19 19m0 0l-2.12-2.121M19 19l2.122 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1000 = React1001.forwardRef(SvgRemovePinAlt);
var RemovePinAlt_default = ForwardRef1000;

// node_modules/iconoir-react/dist/esm/RemovePin.mjs
var React1002 = __toESM(require_react(), 1);
var __assign1001 = function() {
  __assign1001 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1001.apply(this, arguments);
};
function SvgRemovePin(passedProps, svgRef) {
  var context = React1002.useContext(IconoirContext);
  var props = __assign1001(__assign1001({}, context), passedProps);
  return React1002.createElement(
    "svg",
    __assign1001({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1002.createElement("path", { d: "M9.5 14.5L3 21M7.676 7.89l-.979-.102L5 9.485l9.193 9.193 1.697-1.697-.102-.981m-4.303-9l3.672-4.329 5.85 5.85-4.308 3.654M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1001 = React1002.forwardRef(SvgRemovePin);
var RemovePin_default = ForwardRef1001;

// node_modules/iconoir-react/dist/esm/RemoveSelection.mjs
var React1003 = __toESM(require_react(), 1);
var __assign1002 = function() {
  __assign1002 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1002.apply(this, arguments);
};
function SvgRemoveSelection(passedProps, svgRef) {
  var context = React1003.useContext(IconoirContext);
  var props = __assign1002(__assign1002({}, context), passedProps);
  return React1003.createElement(
    "svg",
    __assign1002({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1003.createElement("path", { d: "M7 4H4v3M8 12h8M4 11v2M11 4h2M11 20h2M20 11v2M17 4h3v3M7 20H4v-3M17 20h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1002 = React1003.forwardRef(SvgRemoveSelection);
var RemoveSelection_default = ForwardRef1002;

// node_modules/iconoir-react/dist/esm/RemoveSquare.mjs
var React1004 = __toESM(require_react(), 1);
var __assign1003 = function() {
  __assign1003 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1003.apply(this, arguments);
};
function SvgRemoveSquare(passedProps, svgRef) {
  var context = React1004.useContext(IconoirContext);
  var props = __assign1003(__assign1003({}, context), passedProps);
  return React1004.createElement(
    "svg",
    __assign1003({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1004.createElement("path", { d: "M9.879 14.121L12 12m2.121-2.121L12 12m0 0L9.879 9.879M12 12l2.121 2.121M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1003 = React1004.forwardRef(SvgRemoveSquare);
var RemoveSquare_default = ForwardRef1003;

// node_modules/iconoir-react/dist/esm/RemoveUser.mjs
var React1005 = __toESM(require_react(), 1);
var __assign1004 = function() {
  __assign1004 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1004.apply(this, arguments);
};
function SvgRemoveUser(passedProps, svgRef) {
  var context = React1005.useContext(IconoirContext);
  var props = __assign1004(__assign1004({}, context), passedProps);
  return React1005.createElement(
    "svg",
    __assign1004({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1005.createElement(
      "g",
      { clipPath: "url(#remove-user_svg__clip0)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React1005.createElement("path", { d: "M18.621 12.121L20.743 10m2.121-2.121L20.743 10m0 0L18.62 7.879M20.743 10l2.121 2.121M1 20v-1a7 7 0 017-7v0a7 7 0 017 7v1M8 12a4 4 0 100-8 4 4 0 000 8z" })
    ),
    React1005.createElement(
      "defs",
      null,
      React1005.createElement(
        "clipPath",
        { id: "remove-user_svg__clip0" },
        React1005.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1004 = React1005.forwardRef(SvgRemoveUser);
var RemoveUser_default = ForwardRef1004;

// node_modules/iconoir-react/dist/esm/RepeatOnce.mjs
var React1006 = __toESM(require_react(), 1);
var __assign1005 = function() {
  __assign1005 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1005.apply(this, arguments);
};
function SvgRepeatOnce(passedProps, svgRef) {
  var context = React1006.useContext(IconoirContext);
  var props = __assign1005(__assign1005({}, context), passedProps);
  return React1006.createElement(
    "svg",
    __assign1005({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1006.createElement("path", { d: "M17 17H8c-1.667 0-5-1-5-5M8 7h8c1.667 0 5 1 5 5 0 1.494-.465 2.57-1.135 3.331", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1006.createElement("path", { d: "M14.5 14.5L17 17l-2.5 2.5M4 8V3L2 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1005 = React1006.forwardRef(SvgRepeatOnce);
var RepeatOnce_default = ForwardRef1005;

// node_modules/iconoir-react/dist/esm/Repeat.mjs
var React1007 = __toESM(require_react(), 1);
var __assign1006 = function() {
  __assign1006 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1006.apply(this, arguments);
};
function SvgRepeat(passedProps, svgRef) {
  var context = React1007.useContext(IconoirContext);
  var props = __assign1006(__assign1006({}, context), passedProps);
  return React1007.createElement(
    "svg",
    __assign1006({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1007.createElement("path", { d: "M17 17H8c-1.667 0-5-1-5-5s3.333-5 5-5h8c1.667 0 5 1 5 5 0 1.494-.465 2.57-1.135 3.331", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1007.createElement("path", { d: "M14.5 14.5L17 17l-2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1006 = React1007.forwardRef(SvgRepeat);
var Repeat_default = ForwardRef1006;

// node_modules/iconoir-react/dist/esm/ReplyToMessage.mjs
var React1008 = __toESM(require_react(), 1);
var __assign1007 = function() {
  __assign1007 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1007.apply(this, arguments);
};
function SvgReplyToMessage(passedProps, svgRef) {
  var context = React1008.useContext(IconoirContext);
  var props = __assign1007(__assign1007({}, context), passedProps);
  return React1008.createElement(
    "svg",
    __assign1007({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1008.createElement("path", { d: "M7 8l5 3 5-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1008.createElement("path", { d: "M10 20H4a2 2 0 01-2-2V6a2 2 0 012-2h16a2 2 0 012 2v6.857", stroke: "currentColor", strokeLinecap: "round" }),
    React1008.createElement("path", { d: "M13 17.111h6.3c3.6 0 3.6 4.889 0 4.889M13 17.111L16.15 14M13 17.111l3.15 3.111", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1007 = React1008.forwardRef(SvgReplyToMessage);
var ReplyToMessage_default = ForwardRef1007;

// node_modules/iconoir-react/dist/esm/Reply.mjs
var React1009 = __toESM(require_react(), 1);
var __assign1008 = function() {
  __assign1008 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1008.apply(this, arguments);
};
function SvgReply(passedProps, svgRef) {
  var context = React1009.useContext(IconoirContext);
  var props = __assign1008(__assign1008({}, context), passedProps);
  return React1009.createElement(
    "svg",
    __assign1008({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1009.createElement("path", { d: "M2 10h14c8 0 8 11 0 11M2 10l7-7m-7 7l7 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1008 = React1009.forwardRef(SvgReply);
var Reply_default = ForwardRef1008;

// node_modules/iconoir-react/dist/esm/ReportColumns.mjs
var React1010 = __toESM(require_react(), 1);
var __assign1009 = function() {
  __assign1009 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1009.apply(this, arguments);
};
function SvgReportColumns(passedProps, svgRef) {
  var context = React1010.useContext(IconoirContext);
  var props = __assign1009(__assign1009({}, context), passedProps);
  return React1010.createElement(
    "svg",
    __assign1009({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1010.createElement("path", { d: "M3 7.4V3.6a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6zM14 20.4v-3.8a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-5.8a.6.6 0 01-.6-.6zM14 12.4V3.6a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v8.8a.6.6 0 01-.6.6h-5.8a.6.6 0 01-.6-.6zM3 20.4v-8.8a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v8.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1009 = React1010.forwardRef(SvgReportColumns);
var ReportColumns_default = ForwardRef1009;

// node_modules/iconoir-react/dist/esm/Reports.mjs
var React1011 = __toESM(require_react(), 1);
var __assign1010 = function() {
  __assign1010 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1010.apply(this, arguments);
};
function SvgReports(passedProps, svgRef) {
  var context = React1011.useContext(IconoirContext);
  var props = __assign1010(__assign1010({}, context), passedProps);
  return React1011.createElement(
    "svg",
    __assign1010({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1011.createElement("path", { d: "M9 21h6m-6 0v-5m0 5H3.6a.6.6 0 01-.6-.6v-3.8a.6.6 0 01.6-.6H9m6 5V9m0 12h5.4a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6h-4.8a.6.6 0 00-.6.6V9m0 0H9.6a.6.6 0 00-.6.6V16", stroke: "currentColor" })
  );
}
var ForwardRef1010 = React1011.forwardRef(SvgReports);
var Reports_default = ForwardRef1010;

// node_modules/iconoir-react/dist/esm/Repository.mjs
var React1012 = __toESM(require_react(), 1);
var __assign1011 = function() {
  __assign1011 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1011.apply(this, arguments);
};
function SvgRepository(passedProps, svgRef) {
  var context = React1012.useContext(IconoirContext);
  var props = __assign1011(__assign1011({}, context), passedProps);
  return React1012.createElement(
    "svg",
    __assign1011({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1012.createElement("path", { d: "M4 19V5a2 2 0 012-2h13.4a.6.6 0 01.6.6v13.114", stroke: "currentColor", strokeLinecap: "round" }),
    React1012.createElement("path", { d: "M15 17v5l2.5-1.6L20 22v-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1012.createElement("path", { d: "M6 17h14", stroke: "currentColor", strokeLinecap: "round" }),
    React1012.createElement("path", { d: "M6 17a2 2 0 100 4h5.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1011 = React1012.forwardRef(SvgRepository);
var Repository_default = ForwardRef1011;

// node_modules/iconoir-react/dist/esm/Restart.mjs
var React1013 = __toESM(require_react(), 1);
var __assign1012 = function() {
  __assign1012 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1012.apply(this, arguments);
};
function SvgRestart(passedProps, svgRef) {
  var context = React1013.useContext(IconoirContext);
  var props = __assign1012(__assign1012({}, context), passedProps);
  return React1013.createElement(
    "svg",
    __assign1012({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1013.createElement(
      "g",
      { clipPath: "url(#restart_svg__clip0_1735_6488)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React1013.createElement("path", { d: "M6.677 20.567C2.531 18.021.758 12.758 2.717 8.144 4.875 3.06 10.745.688 15.829 2.846c5.084 2.158 7.456 8.029 5.298 13.113a9.954 9.954 0 01-3.962 4.608" }),
      React1013.createElement("path", { d: "M17 16v4.4a.6.6 0 00.6.6H22M12 22.01l.01-.011" })
    ),
    React1013.createElement(
      "defs",
      null,
      React1013.createElement(
        "clipPath",
        { id: "restart_svg__clip0_1735_6488" },
        React1013.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1012 = React1013.forwardRef(SvgRestart);
var Restart_default = ForwardRef1012;

// node_modules/iconoir-react/dist/esm/Rewind.mjs
var React1014 = __toESM(require_react(), 1);
var __assign1013 = function() {
  __assign1013 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1013.apply(this, arguments);
};
function SvgRewind(passedProps, svgRef) {
  var context = React1014.useContext(IconoirContext);
  var props = __assign1013(__assign1013({}, context), passedProps);
  return React1014.createElement(
    "svg",
    __assign1013({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1014.createElement("path", { d: "M21.044 5.704a.6.6 0 01.956.483v11.626a.6.6 0 01-.956.483l-7.889-5.813a.6.6 0 010-.966l7.89-5.813zM10.044 5.704a.6.6 0 01.956.483v11.626a.6.6 0 01-.956.483l-7.888-5.813a.6.6 0 010-.966l7.888-5.813z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1013 = React1014.forwardRef(SvgRewind);
var Rewind_default = ForwardRef1013;

// node_modules/iconoir-react/dist/esm/Rhombus.mjs
var React1015 = __toESM(require_react(), 1);
var __assign1014 = function() {
  __assign1014 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1014.apply(this, arguments);
};
function SvgRhombus(passedProps, svgRef) {
  var context = React1015.useContext(IconoirContext);
  var props = __assign1014(__assign1014({}, context), passedProps);
  return React1015.createElement(
    "svg",
    __assign1014({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1015.createElement("path", { d: "M11.576 1.424a.6.6 0 01.848 0l10.152 10.152a.6.6 0 010 .848L12.424 22.576a.6.6 0 01-.848 0L1.424 12.424a.6.6 0 010-.848L11.576 1.424z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1014 = React1015.forwardRef(SvgRhombus);
var Rhombus_default = ForwardRef1014;

// node_modules/iconoir-react/dist/esm/RightRoundArrow.mjs
var React1016 = __toESM(require_react(), 1);
var __assign1015 = function() {
  __assign1015 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1015.apply(this, arguments);
};
function SvgRightRoundArrow(passedProps, svgRef) {
  var context = React1016.useContext(IconoirContext);
  var props = __assign1015(__assign1015({}, context), passedProps);
  return React1016.createElement(
    "svg",
    __assign1015({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1016.createElement("path", { d: "M6.75 12h10m0 0L14 14.75M16.75 12L14 9.25", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1016.createElement("path", { d: "M2 15V9a4 4 0 014-4h12a4 4 0 014 4v6a4 4 0 01-4 4H6a4 4 0 01-4-4z", stroke: "currentColor" })
  );
}
var ForwardRef1015 = React1016.forwardRef(SvgRightRoundArrow);
var RightRoundArrow_default = ForwardRef1015;

// node_modules/iconoir-react/dist/esm/Rings.mjs
var React1017 = __toESM(require_react(), 1);
var __assign1016 = function() {
  __assign1016 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1016.apply(this, arguments);
};
function SvgRings(passedProps, svgRef) {
  var context = React1017.useContext(IconoirContext);
  var props = __assign1016(__assign1016({}, context), passedProps);
  return React1017.createElement(
    "svg",
    __assign1016({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1017.createElement("path", { d: "M8 8a6 6 0 100 12A6 6 0 008 8zm0 0V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1017.createElement("path", { d: "M16 8a6 6 0 100 12 6 6 0 000-12zm0 0V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1016 = React1017.forwardRef(SvgRings);
var Rings_default = ForwardRef1016;

// node_modules/iconoir-react/dist/esm/Rocket.mjs
var React1018 = __toESM(require_react(), 1);
var __assign1017 = function() {
  __assign1017 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1017.apply(this, arguments);
};
function SvgRocket(passedProps, svgRef) {
  var context = React1018.useContext(IconoirContext);
  var props = __assign1017(__assign1017({}, context), passedProps);
  return React1018.createElement(
    "svg",
    __assign1017({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1018.createElement("path", { d: "M16.061 10.404L14 17h-4l-2.061-6.596a6 6 0 01.998-5.484l2.59-3.315a.6.6 0 01.946 0l2.59 3.315a6 6 0 01.998 5.484zM10 20c0 2 2 3 2 3s2-1 2-3M8.5 12.5C5 15 7 19 7 19l3-2M15.931 12.5c3.5 2.5 1.5 6.5 1.5 6.5l-3-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1018.createElement("path", { d: "M12 11a2 2 0 110-4 2 2 0 010 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1017 = React1018.forwardRef(SvgRocket);
var Rocket_default = ForwardRef1017;

// node_modules/iconoir-react/dist/esm/Rook.mjs
var React1019 = __toESM(require_react(), 1);
var __assign1018 = function() {
  __assign1018 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1018.apply(this, arguments);
};
function SvgRook(passedProps, svgRef) {
  var context = React1019.useContext(IconoirContext);
  var props = __assign1018(__assign1018({}, context), passedProps);
  return React1019.createElement(
    "svg",
    __assign1018({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1019.createElement("path", { d: "M7 16h10M9 11h6M10 4v2M14 4v2M17.4 9H6.6a.6.6 0 01-.6-.6V4.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6zM17.901 21H6.099a.615.615 0 01-.521-.932C6.792 18.06 9.5 13.328 9.5 11V9.6a.6.6 0 01.6-.6h3.8a.6.6 0 01.6.6V11c0 2.327 2.708 7.061 3.922 9.068a.615.615 0 01-.521.932z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1018 = React1019.forwardRef(SvgRook);
var Rook_default = ForwardRef1018;

// node_modules/iconoir-react/dist/esm/RotateCameraLeft.mjs
var React1020 = __toESM(require_react(), 1);
var __assign1019 = function() {
  __assign1019 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1019.apply(this, arguments);
};
function SvgRotateCameraLeft(passedProps, svgRef) {
  var context = React1020.useContext(IconoirContext);
  var props = __assign1019(__assign1019({}, context), passedProps);
  return React1020.createElement(
    "svg",
    __assign1019({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1020.createElement("path", { d: "M2.05 3v4.497c0 .278.226.503.504.503v0c.2 0 .38-.119.466-.3A10.001 10.001 0 0112.05 2c5.186 0 9.45 3.947 9.951 9M22.001 21v-4.497a.503.503 0 00-.503-.503v0a.52.52 0 00-.465.3A10.001 10.001 0 0112 22c-5.185 0-9.448-3.947-9.95-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1020.createElement("path", { d: "M6 16.4V9.394a.6.6 0 01.6-.6h1.173a.6.6 0 00.504-.275l1.446-2.244A.6.6 0 0110.227 6h3.546a.6.6 0 01.504.275l1.446 2.244a.6.6 0 00.504.275H17.4a.6.6 0 01.6.6V16.4a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1020.createElement("path", { d: "M12 14a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1019 = React1020.forwardRef(SvgRotateCameraLeft);
var RotateCameraLeft_default = ForwardRef1019;

// node_modules/iconoir-react/dist/esm/RotateCameraRight.mjs
var React1021 = __toESM(require_react(), 1);
var __assign1020 = function() {
  __assign1020 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1020.apply(this, arguments);
};
function SvgRotateCameraRight(passedProps, svgRef) {
  var context = React1021.useContext(IconoirContext);
  var props = __assign1020(__assign1020({}, context), passedProps);
  return React1021.createElement(
    "svg",
    __assign1020({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1021.createElement("path", { d: "M22.003 3v4.497A.503.503 0 0121.5 8v0c-.2 0-.38-.119-.466-.3A10.001 10.001 0 0012.003 2c-5.186 0-9.45 3.947-9.95 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1021.createElement("path", { d: "M6 16.4V9.394a.6.6 0 01.6-.6h1.173a.6.6 0 00.504-.275l1.446-2.244A.6.6 0 0110.227 6h3.546a.6.6 0 01.504.275l1.446 2.244a.6.6 0 00.504.275H17.4a.6.6 0 01.6.6V16.4a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1021.createElement("path", { d: "M12 14a2 2 0 100-4 2 2 0 000 4zM2.05 21v-4.497c0-.278.226-.503.504-.503v0c.2 0 .38.119.466.3a10.001 10.001 0 009.03 5.7c5.186 0 9.45-3.947 9.951-9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1020 = React1021.forwardRef(SvgRotateCameraRight);
var RotateCameraRight_default = ForwardRef1020;

// node_modules/iconoir-react/dist/esm/RoundFlask.mjs
var React1022 = __toESM(require_react(), 1);
var __assign1021 = function() {
  __assign1021 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1021.apply(this, arguments);
};
function SvgRoundFlask(passedProps, svgRef) {
  var context = React1022.useContext(IconoirContext);
  var props = __assign1021(__assign1021({}, context), passedProps);
  return React1022.createElement(
    "svg",
    __assign1021({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1022.createElement("path", { d: "M19 15H5", stroke: "currentColor", strokeLinejoin: "round" }),
    React1022.createElement("path", { d: "M16 4H8M15 4.5v4.253c0 .763.445 1.445 1.078 1.871C18.287 12.11 20 14.617 20 17.462c0 .812-.114 1.596-.325 2.338-.215.75-.945 1.2-1.726 1.2H6.051c-.78 0-1.511-.45-1.726-1.2A8.505 8.505 0 014 17.462c0-2.845 1.713-5.353 3.922-6.838C8.555 10.198 9 9.516 9 8.754V4.5M13 7.01l.01-.011M11 2.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1021 = React1022.forwardRef(SvgRoundFlask);
var RoundFlask_default = ForwardRef1021;

// node_modules/iconoir-react/dist/esm/RoundedMirror.mjs
var React1023 = __toESM(require_react(), 1);
var __assign1022 = function() {
  __assign1022 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1022.apply(this, arguments);
};
function SvgRoundedMirror(passedProps, svgRef) {
  var context = React1023.useContext(IconoirContext);
  var props = __assign1022(__assign1022({}, context), passedProps);
  return React1023.createElement(
    "svg",
    __assign1022({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1023.createElement("path", { d: "M20 10v4a8 8 0 11-16 0v-4a8 8 0 1116 0zM17.5 4.5L13 8M19 7l-7.5 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1022 = React1023.forwardRef(SvgRoundedMirror);
var RoundedMirror_default = ForwardRef1022;

// node_modules/iconoir-react/dist/esm/RssFeedTag.mjs
var React1024 = __toESM(require_react(), 1);
var __assign1023 = function() {
  __assign1023 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1023.apply(this, arguments);
};
function SvgRssFeedTag(passedProps, svgRef) {
  var context = React1024.useContext(IconoirContext);
  var props = __assign1023(__assign1023({}, context), passedProps);
  return React1024.createElement(
    "svg",
    __assign1023({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1024.createElement("path", { d: "M12 17c0-3-2-5-5-5M17 17c0-6-4-10-10-10M7 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1024.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1023 = React1024.forwardRef(SvgRssFeedTag);
var RssFeedTag_default = ForwardRef1023;

// node_modules/iconoir-react/dist/esm/RssFeed.mjs
var React1025 = __toESM(require_react(), 1);
var __assign1024 = function() {
  __assign1024 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1024.apply(this, arguments);
};
function SvgRssFeed(passedProps, svgRef) {
  var context = React1025.useContext(IconoirContext);
  var props = __assign1024(__assign1024({}, context), passedProps);
  return React1025.createElement(
    "svg",
    __assign1024({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1025.createElement("path", { d: "M12 19c0-4.2-2.8-7-7-7M19 19c0-8.4-5.6-14-14-14M5 19.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1024 = React1025.forwardRef(SvgRssFeed);
var RssFeed_default = ForwardRef1024;

// node_modules/iconoir-react/dist/esm/RubikCube.mjs
var React1026 = __toESM(require_react(), 1);
var __assign1025 = function() {
  __assign1025 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1025.apply(this, arguments);
};
function SvgRubikCube(passedProps, svgRef) {
  var context = React1026.useContext(IconoirContext);
  var props = __assign1025(__assign1025({}, context), passedProps);
  return React1026.createElement(
    "svg",
    __assign1025({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1026.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM9 3v18M3 9h18M3 15h18M15 3v18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1025 = React1026.forwardRef(SvgRubikCube);
var RubikCube_default = ForwardRef1025;

// node_modules/iconoir-react/dist/esm/RulerAdd.mjs
var React1027 = __toESM(require_react(), 1);
var __assign1026 = function() {
  __assign1026 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1026.apply(this, arguments);
};
function SvgRulerAdd(passedProps, svgRef) {
  var context = React1027.useContext(IconoirContext);
  var props = __assign1026(__assign1026({}, context), passedProps);
  return React1027.createElement(
    "svg",
    __assign1026({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1027.createElement("path", { d: "M15 5h3m3 0h-3m0 0V2m0 3v3M11 7V2.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6h6.8a.6.6 0 00.6-.6V17m0-10H8m3 0v5m0 0H8m3 0v5m0 0H8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1026 = React1027.forwardRef(SvgRulerAdd);
var RulerAdd_default = ForwardRef1026;

// node_modules/iconoir-react/dist/esm/RulerCombine.mjs
var React1028 = __toESM(require_react(), 1);
var __assign1027 = function() {
  __assign1027 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1027.apply(this, arguments);
};
function SvgRulerCombine(passedProps, svgRef) {
  var context = React1028.useContext(IconoirContext);
  var props = __assign1027(__assign1027({}, context), passedProps);
  return React1028.createElement(
    "svg",
    __assign1027({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1028.createElement("path", { d: "M2 21.4V2.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v6.8a.6.6 0 01-.6.6H10.6a.6.6 0 00-.6.6v10.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6zM16 10V7M10 10V7M10 16H7M10 10H7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1027 = React1028.forwardRef(SvgRulerCombine);
var RulerCombine_default = ForwardRef1027;

// node_modules/iconoir-react/dist/esm/RulerRemove.mjs
var React1029 = __toESM(require_react(), 1);
var __assign1028 = function() {
  __assign1028 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1028.apply(this, arguments);
};
function SvgRulerRemove(passedProps, svgRef) {
  var context = React1029.useContext(IconoirContext);
  var props = __assign1028(__assign1028({}, context), passedProps);
  return React1029.createElement(
    "svg",
    __assign1028({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1029.createElement("path", { d: "M15 5h6M11 7V2.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6h6.8a.6.6 0 00.6-.6V17m0-10H8m3 0v5m0 0H8m3 0v5m0 0H8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1028 = React1029.forwardRef(SvgRulerRemove);
var RulerRemove_default = ForwardRef1028;

// node_modules/iconoir-react/dist/esm/Ruler.mjs
var React1030 = __toESM(require_react(), 1);
var __assign1029 = function() {
  __assign1029 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1029.apply(this, arguments);
};
function SvgRuler(passedProps, svgRef) {
  var context = React1030.useContext(IconoirContext);
  var props = __assign1029(__assign1029({}, context), passedProps);
  return React1030.createElement(
    "svg",
    __assign1029({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1030.createElement("path", { d: "M16 7V2.6a.6.6 0 00-.6-.6H8.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6h6.8a.6.6 0 00.6-.6V17m0-10h-3m3 0v5m0 0h-3m3 0v5m0 0h-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1029 = React1030.forwardRef(SvgRuler);
var Ruler_default = ForwardRef1029;

// node_modules/iconoir-react/dist/esm/Running.mjs
var React1031 = __toESM(require_react(), 1);
var __assign1030 = function() {
  __assign1030 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1030.apply(this, arguments);
};
function SvgRunning(passedProps, svgRef) {
  var context = React1031.useContext(IconoirContext);
  var props = __assign1030(__assign1030({}, context), passedProps);
  return React1031.createElement(
    "svg",
    __assign1030({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1031.createElement("path", { d: "M15 7a2 2 0 100-4 2 2 0 000 4zM12.613 8.267l-3.308 4.135 4.135 4.135-2.067 4.55", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1031.createElement("path", { d: "M6.41 9.508l3.387-3.309 2.816 2.068 2.895 3.308h3.722M8.892 15.71l-1.241.827H4.343", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1030 = React1031.forwardRef(SvgRunning);
var Running_default = ForwardRef1030;

// node_modules/iconoir-react/dist/esm/Safari.mjs
var React1032 = __toESM(require_react(), 1);
var __assign1031 = function() {
  __assign1031 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1031.apply(this, arguments);
};
function SvgSafari(passedProps, svgRef) {
  var context = React1032.useContext(IconoirContext);
  var props = __assign1031(__assign1031({}, context), passedProps);
  return React1032.createElement(
    "svg",
    __assign1031({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1032.createElement("path", { d: "M10.586 10.586L16.95 7.05l-3.536 6.364m-2.828-2.828L7.05 16.95l6.364-3.536m-2.828-2.828l2.828 2.828", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1032.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM19 12h-1M6 12H5M12 5v1M12 18v1M7.05 7.05l.707.707M16.243 16.243l.707.707", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1031 = React1032.forwardRef(SvgSafari);
var Safari_default = ForwardRef1031;

// node_modules/iconoir-react/dist/esm/SafeArrowLeft.mjs
var React1033 = __toESM(require_react(), 1);
var __assign1032 = function() {
  __assign1032 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1032.apply(this, arguments);
};
function SvgSafeArrowLeft(passedProps, svgRef) {
  var context = React1033.useContext(IconoirContext);
  var props = __assign1032(__assign1032({}, context), passedProps);
  return React1033.createElement(
    "svg",
    __assign1032({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1033.createElement("path", { d: "M3 19V5a2 2 0 012-2h7a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1033.createElement("path", { d: "M12 3h7a2 2 0 012 2v.5M12 21h7a2 2 0 002-2v-.5M8.5 15C7.672 15 7 13.657 7 12s.672-3 1.5-3 1.5 1.343 1.5 3-.672 3-1.5 3zM9.5 9.5l1-1M7.5 9.5l-1-1M6.5 15.5l1-1M10.5 15.5l-1-1M2 8h1M2 6h1M3 16H2M3 18H2M22 12h-7m0 0l3.5-3.5M15 12l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1032 = React1033.forwardRef(SvgSafeArrowLeft);
var SafeArrowLeft_default = ForwardRef1032;

// node_modules/iconoir-react/dist/esm/SafeArrowRight.mjs
var React1034 = __toESM(require_react(), 1);
var __assign1033 = function() {
  __assign1033 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1033.apply(this, arguments);
};
function SvgSafeArrowRight(passedProps, svgRef) {
  var context = React1034.useContext(IconoirContext);
  var props = __assign1033(__assign1033({}, context), passedProps);
  return React1034.createElement(
    "svg",
    __assign1033({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1034.createElement("path", { d: "M3 19V5a2 2 0 012-2h7a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1034.createElement("path", { d: "M12 3h7a2 2 0 012 2v.5M12 21h7a2 2 0 002-2v-.5M8.5 15C7.672 15 7 13.657 7 12s.672-3 1.5-3 1.5 1.343 1.5 3-.672 3-1.5 3zM9.5 9.5l1-1M7.5 9.5l-1-1M6.5 15.5l1-1M10.5 15.5l-1-1M2 8h1M2 6h1M3 16H2M3 18H2M15 12h7m0 0l-3.5-3.5M22 12l-3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1033 = React1034.forwardRef(SvgSafeArrowRight);
var SafeArrowRight_default = ForwardRef1033;

// node_modules/iconoir-react/dist/esm/SafeOpen.mjs
var React1035 = __toESM(require_react(), 1);
var __assign1034 = function() {
  __assign1034 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1034.apply(this, arguments);
};
function SvgSafeOpen(passedProps, svgRef) {
  var context = React1035.useContext(IconoirContext);
  var props = __assign1034(__assign1034({}, context), passedProps);
  return React1035.createElement(
    "svg",
    __assign1034({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1035.createElement("path", { d: "M3 19V5a2 2 0 012-2h8a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1035.createElement("path", { d: "M13 3h6a2 2 0 012 2v14a2 2 0 01-2 2h-6", stroke: "currentColor" }),
    React1035.createElement("path", { d: "M7.5 15C6.672 15 6 13.657 6 12s.672-3 1.5-3S9 10.343 9 12s-.672 3-1.5 3zM13 14v-4M8.5 9.5l1-1M6.5 9.5l-1-1M5.5 15.5l1-1M9.5 15.5l-1-1M2 8h1M2 6h1M3 16H2M3 18H2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1034 = React1035.forwardRef(SvgSafeOpen);
var SafeOpen_default = ForwardRef1034;

// node_modules/iconoir-react/dist/esm/Safe.mjs
var React1036 = __toESM(require_react(), 1);
var __assign1035 = function() {
  __assign1035 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1035.apply(this, arguments);
};
function SvgSafe(passedProps, svgRef) {
  var context = React1036.useContext(IconoirContext);
  var props = __assign1035(__assign1035({}, context), passedProps);
  return React1036.createElement(
    "svg",
    __assign1035({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1036.createElement("path", { d: "M3 19V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1036.createElement("path", { d: "M10 15a3 3 0 110-6 3 3 0 010 6zM18 14v-4M12.5 9.5l1-1M7.5 9.5l-1-1M6.5 15.5l1-1M13.5 15.5l-1-1M2 8h1M2 6h1M3 16H2M3 18H2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1035 = React1036.forwardRef(SvgSafe);
var Safe_default = ForwardRef1035;

// node_modules/iconoir-react/dist/esm/Sandals.mjs
var React1037 = __toESM(require_react(), 1);
var __assign1036 = function() {
  __assign1036 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1036.apply(this, arguments);
};
function SvgSandals(passedProps, svgRef) {
  var context = React1037.useContext(IconoirContext);
  var props = __assign1036(__assign1036({}, context), passedProps);
  return React1037.createElement(
    "svg",
    __assign1036({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1037.createElement("path", { d: "M22 7s.5-4-4-4-4 4-4 4m8 0h-8m8 0l-.214 3M14 7l.214 3m7.572 0l-.587 8.214A3 3 0 0118.207 21h-.414a3 3 0 01-2.992-2.786L14.214 10m7.572 0h-7.572M10 7s.5-4-4-4-4 4-4 4m8 0H2m8 0l-.214 3M2 7l.214 3m7.572 0l-.587 8.214A3 3 0 016.207 21h-.414a3 3 0 01-2.992-2.786L2.214 10m7.572 0H2.214", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1036 = React1037.forwardRef(SvgSandals);
var Sandals_default = ForwardRef1036;

// node_modules/iconoir-react/dist/esm/SaveActionFloppy.mjs
var React1038 = __toESM(require_react(), 1);
var __assign1037 = function() {
  __assign1037 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1037.apply(this, arguments);
};
function SvgSaveActionFloppy(passedProps, svgRef) {
  var context = React1038.useContext(IconoirContext);
  var props = __assign1037(__assign1037({}, context), passedProps);
  return React1038.createElement(
    "svg",
    __assign1037({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1038.createElement("path", { d: "M3 7.5V5a2 2 0 012-2h11.172a2 2 0 011.414.586l2.828 2.828A2 2 0 0121 7.828V19a2 2 0 01-2 2H5a2 2 0 01-2-2v-2.5M6 21v-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1038.createElement("path", { d: "M18 21v-7.4a.6.6 0 00-.6-.6H15M16 3v5.4a.6.6 0 01-.6.6h-1.9M8 3v3M1 12h11m0 0L9 9m3 3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1037 = React1038.forwardRef(SvgSaveActionFloppy);
var SaveActionFloppy_default = ForwardRef1037;

// node_modules/iconoir-react/dist/esm/SaveFloppyDisk.mjs
var React1039 = __toESM(require_react(), 1);
var __assign1038 = function() {
  __assign1038 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1038.apply(this, arguments);
};
function SvgSaveFloppyDisk(passedProps, svgRef) {
  var context = React1039.useContext(IconoirContext);
  var props = __assign1038(__assign1038({}, context), passedProps);
  return React1039.createElement(
    "svg",
    __assign1038({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1039.createElement("path", { d: "M3 19V5a2 2 0 012-2h11.172a2 2 0 011.414.586l2.828 2.828A2 2 0 0121 7.828V19a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1039.createElement("path", { d: "M8.6 9h6.8a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6H8.6a.6.6 0 00-.6.6v4.8a.6.6 0 00.6.6zM6 13.6V21h12v-7.4a.6.6 0 00-.6-.6H6.6a.6.6 0 00-.6.6z", stroke: "currentColor" })
  );
}
var ForwardRef1038 = React1039.forwardRef(SvgSaveFloppyDisk);
var SaveFloppyDisk_default = ForwardRef1038;

// node_modules/iconoir-react/dist/esm/ScaleFrameEnlarge.mjs
var React1040 = __toESM(require_react(), 1);
var __assign1039 = function() {
  __assign1039 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1039.apply(this, arguments);
};
function SvgScaleFrameEnlarge(passedProps, svgRef) {
  var context = React1040.useContext(IconoirContext);
  var props = __assign1039(__assign1039({}, context), passedProps);
  return React1040.createElement(
    "svg",
    __assign1039({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1040.createElement("path", { d: "M11 13.6V21H3.6a.6.6 0 01-.6-.6V13h7.4a.6.6 0 01.6.6zM11 21h3M3 13v-3M6 3H3.6a.6.6 0 00-.6.6V6M14 3h-4M21 10v4M18 3h2.4a.6.6 0 01.6.6V6M18 21h2.4a.6.6 0 00.6-.6V18M11 10h3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1039 = React1040.forwardRef(SvgScaleFrameEnlarge);
var ScaleFrameEnlarge_default = ForwardRef1039;

// node_modules/iconoir-react/dist/esm/ScaleFrameReduce.mjs
var React1041 = __toESM(require_react(), 1);
var __assign1040 = function() {
  __assign1040 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1040.apply(this, arguments);
};
function SvgScaleFrameReduce(passedProps, svgRef) {
  var context = React1041.useContext(IconoirContext);
  var props = __assign1040(__assign1040({}, context), passedProps);
  return React1041.createElement(
    "svg",
    __assign1040({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1041.createElement("path", { d: "M11 15v-1.4a.6.6 0 00-.6-.6H9M6 13H3M11 18v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1041.createElement("path", { d: "M20.4 3H3.6a.6.6 0 00-.6.6v16.8a.6.6 0 00.6.6h16.8a.6.6 0 00.6-.6V3.6a.6.6 0 00-.6-.6z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React1041.createElement("path", { d: "M16 11h-3V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1040 = React1041.forwardRef(SvgScaleFrameReduce);
var ScaleFrameReduce_default = ForwardRef1040;

// node_modules/iconoir-react/dist/esm/ScanBarcode.mjs
var React1042 = __toESM(require_react(), 1);
var __assign1041 = function() {
  __assign1041 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1041.apply(this, arguments);
};
function SvgScanBarcode(passedProps, svgRef) {
  var context = React1042.useContext(IconoirContext);
  var props = __assign1041(__assign1041({}, context), passedProps);
  return React1042.createElement(
    "svg",
    __assign1041({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1042.createElement("path", { d: "M10 12V6h1M10 12h1V6M10 18v-3h1M11 15v3h-1M7 6v6M7 15v3M14 6v6M14 15v3M17 6v6M17 15v3M6 3H3v3M2 12h20M18 3h3v3M6 21H3v-3M18 21h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1041 = React1042.forwardRef(SvgScanBarcode);
var ScanBarcode_default = ForwardRef1041;

// node_modules/iconoir-react/dist/esm/ScanQrCode.mjs
var React1043 = __toESM(require_react(), 1);
var __assign1042 = function() {
  __assign1042 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1042.apply(this, arguments);
};
function SvgScanQrCode(passedProps, svgRef) {
  var context = React1043.useContext(IconoirContext);
  var props = __assign1042(__assign1042({}, context), passedProps);
  return React1043.createElement(
    "svg",
    __assign1042({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1043.createElement("path", { d: "M9 6.6v1.8a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6V6.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6zM6 12h3M15 12v3M12 18h3M12 12.011l.01-.011M18 12.011l.01-.011M12 15.011l.01-.011M18 15.011l.01-.011M18 18.011l.01-.011M12 9.011L12.01 9M12 6.011L12.01 6M9 15.6v1.8a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6v-1.8a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6zM18 6.6v1.8a.6.6 0 01-.6.6h-1.8a.6.6 0 01-.6-.6V6.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6zM18 3h3v3M18 21h3v-3M6 3H3v3M6 21H3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1042 = React1043.forwardRef(SvgScanQrCode);
var ScanQrCode_default = ForwardRef1042;

// node_modules/iconoir-react/dist/esm/Scanning.mjs
var React1044 = __toESM(require_react(), 1);
var __assign1043 = function() {
  __assign1043 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1043.apply(this, arguments);
};
function SvgScanning(passedProps, svgRef) {
  var context = React1044.useContext(IconoirContext);
  var props = __assign1043(__assign1043({}, context), passedProps);
  return React1044.createElement(
    "svg",
    __assign1043({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1044.createElement("path", { d: "M6 3H3v3M2 12h20M9 19v-4M12 16v-1M15 17v-2M12 21v-3M18 3h3v3M6 21H3v-3M18 21h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1043 = React1044.forwardRef(SvgScanning);
var Scanning_default = ForwardRef1043;

// node_modules/iconoir-react/dist/esm/Scarf.mjs
var React1045 = __toESM(require_react(), 1);
var __assign1044 = function() {
  __assign1044 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1044.apply(this, arguments);
};
function SvgScarf(passedProps, svgRef) {
  var context = React1045.useContext(IconoirContext);
  var props = __assign1044(__assign1044({}, context), passedProps);
  return React1045.createElement(
    "svg",
    __assign1044({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1045.createElement("path", { d: "M15 11H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v16M18 21v-2M15 3v18M15 7H3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1044 = React1045.forwardRef(SvgScarf);
var Scarf_default = ForwardRef1044;

// node_modules/iconoir-react/dist/esm/ScissorAlt.mjs
var React1046 = __toESM(require_react(), 1);
var __assign1045 = function() {
  __assign1045 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1045.apply(this, arguments);
};
function SvgScissorAlt(passedProps, svgRef) {
  var context = React1046.useContext(IconoirContext);
  var props = __assign1045(__assign1045({}, context), passedProps);
  return React1046.createElement(
    "svg",
    __assign1045({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1046.createElement("path", { d: "M10.236 8a3 3 0 10-4.472-4 3 3 0 004.472 4zm0 0L20 16M10.236 16a3 3 0 11-4.472 4 3 3 0 014.472-4zm0 0L20 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1045 = React1046.forwardRef(SvgScissorAlt);
var ScissorAlt_default = ForwardRef1045;

// node_modules/iconoir-react/dist/esm/Scissor.mjs
var React1047 = __toESM(require_react(), 1);
var __assign1046 = function() {
  __assign1046 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1046.apply(this, arguments);
};
function SvgScissor(passedProps, svgRef) {
  var context = React1047.useContext(IconoirContext);
  var props = __assign1046(__assign1046({}, context), passedProps);
  return React1047.createElement(
    "svg",
    __assign1046({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1047.createElement("path", { d: "M7.236 7a3 3 0 10-4.472-4 3 3 0 004.472 4zm0 0L20 18M7.236 17a3 3 0 11-4.472 4 3 3 0 014.472-4zm0 0L20 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1046 = React1047.forwardRef(SvgScissor);
var Scissor_default = ForwardRef1046;

// node_modules/iconoir-react/dist/esm/Screenshot.mjs
var React1048 = __toESM(require_react(), 1);
var __assign1047 = function() {
  __assign1047 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1047.apply(this, arguments);
};
function SvgScreenshot(passedProps, svgRef) {
  var context = React1048.useContext(IconoirContext);
  var props = __assign1047(__assign1047({}, context), passedProps);
  return React1048.createElement(
    "svg",
    __assign1047({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1048.createElement("path", { d: "M10 21.4v-7.006a.6.6 0 01.6-.6h1.173a.6.6 0 00.504-.275l1.446-2.244a.6.6 0 01.504-.275h3.546a.6.6 0 01.504.275l1.446 2.244a.6.6 0 00.504.275H21.4a.6.6 0 01.6.6V21.4a.6.6 0 01-.6.6H10.6a.6.6 0 01-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1048.createElement("path", { d: "M16 19a2 2 0 100-4 2 2 0 000 4zM3 18v3h2.5M3 9.5v5M3 6V3h3M9.5 3h5M18 3h3v2.5M21 10V8.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1047 = React1048.forwardRef(SvgScreenshot);
var Screenshot_default = ForwardRef1047;

// node_modules/iconoir-react/dist/esm/SeaAndSun.mjs
var React1049 = __toESM(require_react(), 1);
var __assign1048 = function() {
  __assign1048 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1048.apply(this, arguments);
};
function SvgSeaAndSun(passedProps, svgRef) {
  var context = React1049.useContext(IconoirContext);
  var props = __assign1048(__assign1048({}, context), passedProps);
  return React1049.createElement(
    "svg",
    __assign1048({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1049.createElement("path", { d: "M3 15c2.483 0 4.345-3 4.345-3s1.862 3 4.345 3c2.482 0 4.965-3 4.965-3s2.483 3 4.345 3M3 20c2.483 0 4.345-3 4.345-3s1.862 3 4.345 3c2.482 0 4.965-3 4.965-3s2.483 3 4.345 3M19 10a7 7 0 10-14 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1048 = React1049.forwardRef(SvgSeaAndSun);
var SeaAndSun_default = ForwardRef1048;

// node_modules/iconoir-react/dist/esm/SeaWaves.mjs
var React1050 = __toESM(require_react(), 1);
var __assign1049 = function() {
  __assign1049 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1049.apply(this, arguments);
};
function SvgSeaWaves(passedProps, svgRef) {
  var context = React1050.useContext(IconoirContext);
  var props = __assign1049(__assign1049({}, context), passedProps);
  return React1050.createElement(
    "svg",
    __assign1049({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1050.createElement("path", { d: "M3 10c2.483 0 4.345-3 4.345-3s1.862 3 4.345 3c2.482 0 4.965-3 4.965-3s2.483 3 4.345 3M3 17c2.483 0 4.345-3 4.345-3s1.862 3 4.345 3c2.482 0 4.965-3 4.965-3s2.483 3 4.345 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1049 = React1050.forwardRef(SvgSeaWaves);
var SeaWaves_default = ForwardRef1049;

// node_modules/iconoir-react/dist/esm/SearchEngine.mjs
var React1051 = __toESM(require_react(), 1);
var __assign1050 = function() {
  __assign1050 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1050.apply(this, arguments);
};
function SvgSearchEngine(passedProps, svgRef) {
  var context = React1051.useContext(IconoirContext);
  var props = __assign1050(__assign1050({}, context), passedProps);
  return React1051.createElement(
    "svg",
    __assign1050({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1051.createElement("path", { d: "M3 19V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1051.createElement("path", { d: "M13.856 13.85a3.429 3.429 0 10-4.855-4.842 3.429 3.429 0 004.855 4.842zm0 0L16 16", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1050 = React1051.forwardRef(SvgSearchEngine);
var SearchEngine_default = ForwardRef1050;

// node_modules/iconoir-react/dist/esm/SearchFont.mjs
var React1052 = __toESM(require_react(), 1);
var __assign1051 = function() {
  __assign1051 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1051.apply(this, arguments);
};
function SvgSearchFont(passedProps, svgRef) {
  var context = React1052.useContext(IconoirContext);
  var props = __assign1051(__assign1051({}, context), passedProps);
  return React1052.createElement(
    "svg",
    __assign1051({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1052.createElement("path", { d: "M19.5 19.5L21 21M14 17a3 3 0 106 0 3 3 0 00-6 0zM9 5v12m0 0H7m2 0h2M15 7V5H3v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1051 = React1052.forwardRef(SvgSearchFont);
var SearchFont_default = ForwardRef1051;

// node_modules/iconoir-react/dist/esm/SearchWindow.mjs
var React1053 = __toESM(require_react(), 1);
var __assign1052 = function() {
  __assign1052 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1052.apply(this, arguments);
};
function SvgSearchWindow(passedProps, svgRef) {
  var context = React1053.useContext(IconoirContext);
  var props = __assign1052(__assign1052({}, context), passedProps);
  return React1053.createElement(
    "svg",
    __assign1052({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1053.createElement("path", { d: "M13 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v9", stroke: "currentColor", strokeLinecap: "round" }),
    React1053.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M20.124 20.119a3 3 0 10-4.248-4.237 3 3 0 004.248 4.237zm0 0L22 22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1052 = React1053.forwardRef(SvgSearchWindow);
var SearchWindow_default = ForwardRef1052;

// node_modules/iconoir-react/dist/esm/Search.mjs
var React1054 = __toESM(require_react(), 1);
var __assign1053 = function() {
  __assign1053 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1053.apply(this, arguments);
};
function SvgSearch(passedProps, svgRef) {
  var context = React1054.useContext(IconoirContext);
  var props = __assign1053(__assign1053({}, context), passedProps);
  return React1054.createElement(
    "svg",
    __assign1053({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1054.createElement("path", { d: "M17 17l4 4M3 11a8 8 0 1016 0 8 8 0 00-16 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1053 = React1054.forwardRef(SvgSearch);
var Search_default = ForwardRef1053;

// node_modules/iconoir-react/dist/esm/SecureWindow.mjs
var React1055 = __toESM(require_react(), 1);
var __assign1054 = function() {
  __assign1054 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1054.apply(this, arguments);
};
function SvgSecureWindow(passedProps, svgRef) {
  var context = React1055.useContext(IconoirContext);
  var props = __assign1054(__assign1054({}, context), passedProps);
  return React1055.createElement(
    "svg",
    __assign1054({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1055.createElement("path", { d: "M13 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v7", stroke: "currentColor", strokeLinecap: "round" }),
    React1055.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M18.992 14.125l2.556.649c.266.068.453.31.445.584C21.821 21.116 18.5 22 18.5 22s-3.321-.884-3.493-6.642a.588.588 0 01.445-.584l2.556-.649c.323-.082.661-.082.984 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1054 = React1055.forwardRef(SvgSecureWindow);
var SecureWindow_default = ForwardRef1054;

// node_modules/iconoir-react/dist/esm/SecurityPass.mjs
var React1056 = __toESM(require_react(), 1);
var __assign1055 = function() {
  __assign1055 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1055.apply(this, arguments);
};
function SvgSecurityPass(passedProps, svgRef) {
  var context = React1056.useContext(IconoirContext);
  var props = __assign1055(__assign1055({}, context), passedProps);
  return React1056.createElement(
    "svg",
    __assign1055({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1056.createElement("path", { d: "M9 11l3 3 8-8M20 12a8 8 0 11-5.3-7.533", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1055 = React1056.forwardRef(SvgSecurityPass);
var SecurityPass_default = ForwardRef1055;

// node_modules/iconoir-react/dist/esm/SelectWindow.mjs
var React1057 = __toESM(require_react(), 1);
var __assign1056 = function() {
  __assign1056 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1056.apply(this, arguments);
};
function SvgSelectWindow(passedProps, svgRef) {
  var context = React1057.useContext(IconoirContext);
  var props = __assign1056(__assign1056({}, context), passedProps);
  return React1057.createElement(
    "svg",
    __assign1056({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1057.createElement("path", { d: "M14 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v10", stroke: "currentColor", strokeLinecap: "round" }),
    React1057.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1057.createElement("path", { clipRule: "evenodd", d: "M22.082 18.365c.494.304.464 1.043-.045 1.1l-2.566.292-1.152 2.312c-.228.458-.933.234-1.05-.334l-1.255-6.116c-.098-.48.333-.782.75-.525l5.318 3.271z", stroke: "currentColor" })
  );
}
var ForwardRef1056 = React1057.forwardRef(SvgSelectWindow);
var SelectWindow_default = ForwardRef1056;

// node_modules/iconoir-react/dist/esm/Selection.mjs
var React1058 = __toESM(require_react(), 1);
var __assign1057 = function() {
  __assign1057 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1057.apply(this, arguments);
};
function SvgSelection(passedProps, svgRef) {
  var context = React1058.useContext(IconoirContext);
  var props = __assign1057(__assign1057({}, context), passedProps);
  return React1058.createElement(
    "svg",
    __assign1057({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1058.createElement("path", { d: "M7 4H4v3M4 11v2M11 4h2M11 20h2M20 11v2M17 4h3v3M7 20H4v-3M17 20h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1057 = React1058.forwardRef(SvgSelection);
var Selection_default = ForwardRef1057;

// node_modules/iconoir-react/dist/esm/SelectiveTool.mjs
var React1059 = __toESM(require_react(), 1);
var __assign1058 = function() {
  __assign1058 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1058.apply(this, arguments);
};
function SvgSelectiveTool(passedProps, svgRef) {
  var context = React1059.useContext(IconoirContext);
  var props = __assign1058(__assign1058({}, context), passedProps);
  return React1059.createElement(
    "svg",
    __assign1058({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1059.createElement("path", { d: "M12 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1059.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1058 = React1059.forwardRef(SvgSelectiveTool);
var SelectiveTool_default = ForwardRef1058;

// node_modules/iconoir-react/dist/esm/SendDiagonal.mjs
var React1060 = __toESM(require_react(), 1);
var __assign1059 = function() {
  __assign1059 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1059.apply(this, arguments);
};
function SvgSendDiagonal(passedProps, svgRef) {
  var context = React1060.useContext(IconoirContext);
  var props = __assign1059(__assign1059({}, context), passedProps);
  return React1060.createElement(
    "svg",
    __assign1059({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1060.createElement(
      "g",
      { clipPath: "url(#send-diagonal_svg__clip0_2476_13290)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React1060.createElement("path", { d: "M22.152 3.553L11.178 21.004l-1.67-8.596L2 7.898l20.152-4.345zM9.456 12.444l12.696-8.89" })
    ),
    React1060.createElement(
      "defs",
      null,
      React1060.createElement(
        "clipPath",
        { id: "send-diagonal_svg__clip0_2476_13290" },
        React1060.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1059 = React1060.forwardRef(SvgSendDiagonal);
var SendDiagonal_default = ForwardRef1059;

// node_modules/iconoir-react/dist/esm/SendDollars.mjs
var React1061 = __toESM(require_react(), 1);
var __assign1060 = function() {
  __assign1060 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1060.apply(this, arguments);
};
function SvgSendDollars(passedProps, svgRef) {
  var context = React1061.useContext(IconoirContext);
  var props = __assign1060(__assign1060({}, context), passedProps);
  return React1061.createElement(
    "svg",
    __assign1060({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1061.createElement("path", { d: "M10 8.23c-.8-.737-2.207-1.25-3.5-1.282M3 15.23c.752.925 2.15 1.453 3.5 1.498m0-9.781c-1.539-.038-2.917.604-2.917 2.36 0 3.23 6.417 1.615 6.417 4.846 0 1.842-1.708 2.634-3.5 2.575m0-9.781V5m0 11.729V19M13 12h8m0 0l-3.84-4M21 12l-3.84 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1060 = React1061.forwardRef(SvgSendDollars);
var SendDollars_default = ForwardRef1060;

// node_modules/iconoir-react/dist/esm/SendEuros.mjs
var React1062 = __toESM(require_react(), 1);
var __assign1061 = function() {
  __assign1061 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1061.apply(this, arguments);
};
function SvgSendEuros(passedProps, svgRef) {
  var context = React1062.useContext(IconoirContext);
  var props = __assign1061(__assign1061({}, context), passedProps);
  return React1062.createElement(
    "svg",
    __assign1061({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1062.createElement("path", { d: "M13 12h8m0 0l-3.84-4M21 12l-3.84 4M11 7.503A4.746 4.746 0 008.87 7C6.18 7 4 9.239 4 12s2.18 5 4.87 5c.764 0 1.487-.18 2.13-.503M3 11h6M3 13h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1061 = React1062.forwardRef(SvgSendEuros);
var SendEuros_default = ForwardRef1061;

// node_modules/iconoir-react/dist/esm/SendMail.mjs
var React1063 = __toESM(require_react(), 1);
var __assign1062 = function() {
  __assign1062 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1062.apply(this, arguments);
};
function SvgSendMail(passedProps, svgRef) {
  var context = React1063.useContext(IconoirContext);
  var props = __assign1062(__assign1062({}, context), passedProps);
  return React1063.createElement(
    "svg",
    __assign1062({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1063.createElement("path", { d: "M9 9l4.5 3L18 9M3 13.5h2M1 10.5h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1063.createElement("path", { d: "M5 7.5V7a2 2 0 012-2h13a2 2 0 012 2v10a2 2 0 01-2 2H7a2 2 0 01-2-2v-.5", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1062 = React1063.forwardRef(SvgSendMail);
var SendMail_default = ForwardRef1062;

// node_modules/iconoir-react/dist/esm/SendPounds.mjs
var React1064 = __toESM(require_react(), 1);
var __assign1063 = function() {
  __assign1063 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1063.apply(this, arguments);
};
function SvgSendPounds(passedProps, svgRef) {
  var context = React1064.useContext(IconoirContext);
  var props = __assign1063(__assign1063({}, context), passedProps);
  return React1064.createElement(
    "svg",
    __assign1063({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1064.createElement("path", { d: "M13 12h8m0 0l-3.84-4M21 12l-3.84 4M7 13c-.667 1.667-1.667 3.333-3 4h6.333s1 0 1.667-.667M9.667 13H3M11 10a3 3 0 10-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1063 = React1064.forwardRef(SvgSendPounds);
var SendPounds_default = ForwardRef1063;

// node_modules/iconoir-react/dist/esm/SendYens.mjs
var React1065 = __toESM(require_react(), 1);
var __assign1064 = function() {
  __assign1064 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1064.apply(this, arguments);
};
function SvgSendYens(passedProps, svgRef) {
  var context = React1065.useContext(IconoirContext);
  var props = __assign1064(__assign1064({}, context), passedProps);
  return React1065.createElement(
    "svg",
    __assign1064({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1065.createElement("path", { d: "M13 12h8m0 0l-3.84-4M21 12l-3.84 4M3 13h8M3 7l4 5.5M11 7l-4 5.5m0 0V18M3 15h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1064 = React1065.forwardRef(SvgSendYens);
var SendYens_default = ForwardRef1064;

// node_modules/iconoir-react/dist/esm/Send.mjs
var React1066 = __toESM(require_react(), 1);
var __assign1065 = function() {
  __assign1065 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1065.apply(this, arguments);
};
function SvgSend(passedProps, svgRef) {
  var context = React1066.useContext(IconoirContext);
  var props = __assign1065(__assign1065({}, context), passedProps);
  return React1066.createElement(
    "svg",
    __assign1065({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1066.createElement("path", { d: "M22 12L3 20l3.563-8L3 4l19 8zM6.5 12H22", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1065 = React1066.forwardRef(SvgSend);
var Send_default = ForwardRef1065;

// node_modules/iconoir-react/dist/esm/ServerConnection.mjs
var React1067 = __toESM(require_react(), 1);
var __assign1066 = function() {
  __assign1066 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1066.apply(this, arguments);
};
function SvgServerConnection(passedProps, svgRef) {
  var context = React1067.useContext(IconoirContext);
  var props = __assign1066(__assign1066({}, context), passedProps);
  return React1067.createElement(
    "svg",
    __assign1066({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1067.createElement("path", { d: "M3 19h9m9 0h-9m0 0v-6m0 0h6V5H6v8h6zM9 9.01l.01-.011M12 9.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1066 = React1067.forwardRef(SvgServerConnection);
var ServerConnection_default = ForwardRef1066;

// node_modules/iconoir-react/dist/esm/Server.mjs
var React1068 = __toESM(require_react(), 1);
var __assign1067 = function() {
  __assign1067 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1067.apply(this, arguments);
};
function SvgServer(passedProps, svgRef) {
  var context = React1068.useContext(IconoirContext);
  var props = __assign1067(__assign1067({}, context), passedProps);
  return React1068.createElement(
    "svg",
    __assign1067({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1068.createElement("path", { d: "M6 18.01l.01-.011M6 6.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1068.createElement("path", { d: "M2 9.4V2.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v6.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6zM2 21.4v-6.8a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v6.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1067 = React1068.forwardRef(SvgServer);
var Server_default = ForwardRef1067;

// node_modules/iconoir-react/dist/esm/SettingsCloud.mjs
var React1069 = __toESM(require_react(), 1);
var __assign1068 = function() {
  __assign1068 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1068.apply(this, arguments);
};
function SvgSettingsCloud(passedProps, svgRef) {
  var context = React1069.useContext(IconoirContext);
  var props = __assign1068(__assign1068({}, context), passedProps);
  return React1069.createElement(
    "svg",
    __assign1068({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1069.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React1069.createElement("path", { d: "M12 8c-3.273 0-3.273 2-3.273 3C7.818 11 6 11.5 6 13.5S7.818 16 8.727 16h6.546c.909 0 2.727-.5 2.727-2.5S16.182 11 15.273 11c0-1 0-3-3.273-3z", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef1068 = React1069.forwardRef(SvgSettingsCloud);
var SettingsCloud_default = ForwardRef1068;

// node_modules/iconoir-react/dist/esm/SettingsProfiles.mjs
var React1070 = __toESM(require_react(), 1);
var __assign1069 = function() {
  __assign1069 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1069.apply(this, arguments);
};
function SvgSettingsProfiles(passedProps, svgRef) {
  var context = React1070.useContext(IconoirContext);
  var props = __assign1069(__assign1069({}, context), passedProps);
  return React1070.createElement(
    "svg",
    __assign1069({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1070.createElement("path", { d: "M11.607 2.342a.6.6 0 01.787 0l1.948 1.692a.6.6 0 00.445.145l2.572-.224a.6.6 0 01.636.463l.582 2.514a.6.6 0 00.275.38l2.212 1.33a.6.6 0 01.243.748l-1.008 2.376a.6.6 0 000 .468l1.008 2.376a.6.6 0 01-.243.749l-2.212 1.33a.6.6 0 00-.275.379l-.582 2.514a.6.6 0 01-.636.463l-2.572-.224a.6.6 0 00-.445.144l-1.949 1.693a.6.6 0 01-.787 0l-1.948-1.693a.6.6 0 00-.445-.144l-2.572.224a.6.6 0 01-.636-.463l-.582-2.514a.6.6 0 00-.275-.38l-2.212-1.33a.6.6 0 01-.243-.748l1.008-2.376a.6.6 0 000-.468L2.693 9.39a.6.6 0 01.243-.749l2.212-1.33a.6.6 0 00.275-.379l.582-2.514a.6.6 0 01.636-.463l2.572.224a.6.6 0 00.445-.145l1.949-1.692z", stroke: "currentColor" }),
    React1070.createElement("path", { d: "M9 13l2 2 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1069 = React1070.forwardRef(SvgSettingsProfiles);
var SettingsProfiles_default = ForwardRef1069;

// node_modules/iconoir-react/dist/esm/Settings.mjs
var React1071 = __toESM(require_react(), 1);
var __assign1070 = function() {
  __assign1070 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1070.apply(this, arguments);
};
function SvgSettings(passedProps, svgRef) {
  var context = React1071.useContext(IconoirContext);
  var props = __assign1070(__assign1070({}, context), passedProps);
  return React1071.createElement(
    "svg",
    __assign1070({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1071.createElement("path", { d: "M12 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1071.createElement("path", { d: "M19.622 10.395l-1.097-2.65L20 6l-2-2-1.735 1.483-2.707-1.113L12.935 2h-1.954l-.632 2.401-2.645 1.115L6 4 4 6l1.453 1.789-1.08 2.657L2 11v2l2.401.655L5.516 16.3 4 18l2 2 1.791-1.46 2.606 1.072L11 22h2l.604-2.387 2.651-1.098C16.697 18.831 18 20 18 20l2-2-1.484-1.75 1.098-2.652 2.386-.62V11l-2.378-.605z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1070 = React1071.forwardRef(SvgSettings);
var Settings_default = ForwardRef1070;

// node_modules/iconoir-react/dist/esm/ShareAndroid.mjs
var React1072 = __toESM(require_react(), 1);
var __assign1071 = function() {
  __assign1071 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1071.apply(this, arguments);
};
function SvgShareAndroid(passedProps, svgRef) {
  var context = React1072.useContext(IconoirContext);
  var props = __assign1071(__assign1071({}, context), passedProps);
  return React1072.createElement(
    "svg",
    __assign1071({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1072.createElement("path", { d: "M18 22a3 3 0 100-6 3 3 0 000 6zM18 8a3 3 0 100-6 3 3 0 000 6zM6 15a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1072.createElement("path", { d: "M15.5 6.5l-7 4M8.5 13.5l7 4", stroke: "currentColor" })
  );
}
var ForwardRef1071 = React1072.forwardRef(SvgShareAndroid);
var ShareAndroid_default = ForwardRef1071;

// node_modules/iconoir-react/dist/esm/ShareIos.mjs
var React1073 = __toESM(require_react(), 1);
var __assign1072 = function() {
  __assign1072 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1072.apply(this, arguments);
};
function SvgShareIos(passedProps, svgRef) {
  var context = React1073.useContext(IconoirContext);
  var props = __assign1072(__assign1072({}, context), passedProps);
  return React1073.createElement(
    "svg",
    __assign1072({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1073.createElement("path", { d: "M20 13v6a2 2 0 01-2 2H6a2 2 0 01-2-2v-6M12 15V3m0 0L8.5 6.5M12 3l3.5 3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1072 = React1073.forwardRef(SvgShareIos);
var ShareIos_default = ForwardRef1072;

// node_modules/iconoir-react/dist/esm/ShieldAdd.mjs
var React1074 = __toESM(require_react(), 1);
var __assign1073 = function() {
  __assign1073 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1073.apply(this, arguments);
};
function SvgShieldAdd(passedProps, svgRef) {
  var context = React1074.useContext(IconoirContext);
  var props = __assign1073(__assign1073({}, context), passedProps);
  return React1074.createElement(
    "svg",
    __assign1073({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1074.createElement("path", { d: "M9 12h3m3 0h-3m0 0V9m0 3v3M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1073 = React1074.forwardRef(SvgShieldAdd);
var ShieldAdd_default = ForwardRef1073;

// node_modules/iconoir-react/dist/esm/ShieldAlert.mjs
var React1075 = __toESM(require_react(), 1);
var __assign1074 = function() {
  __assign1074 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1074.apply(this, arguments);
};
function SvgShieldAlert(passedProps, svgRef) {
  var context = React1075.useContext(IconoirContext);
  var props = __assign1074(__assign1074({}, context), passedProps);
  return React1075.createElement(
    "svg",
    __assign1074({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1075.createElement("path", { d: "M12 7v5M12 16.01l.01-.011M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1074 = React1075.forwardRef(SvgShieldAlert);
var ShieldAlert_default = ForwardRef1074;

// node_modules/iconoir-react/dist/esm/ShieldAlt.mjs
var React1076 = __toESM(require_react(), 1);
var __assign1075 = function() {
  __assign1075 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1075.apply(this, arguments);
};
function SvgShieldAlt(passedProps, svgRef) {
  var context = React1076.useContext(IconoirContext);
  var props = __assign1075(__assign1075({}, context), passedProps);
  return React1076.createElement(
    "svg",
    __assign1075({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1076.createElement("path", { d: "M3.571 8l-.44-3.084A1 1 0 013.904 3.8l7.662-1.703a2 2 0 01.868 0L20.096 3.8a1 1 0 01.773 1.117L20.43 8M3.57 8H20.43M3.57 8c.309 2.16.69 4.822 1 7M20.43 8c-.309 2.16-.69 4.822-1 7m0 0L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18l-.429-3m14.858 0H4.57", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1075 = React1076.forwardRef(SvgShieldAlt);
var ShieldAlt_default = ForwardRef1075;

// node_modules/iconoir-react/dist/esm/ShieldBroken.mjs
var React1077 = __toESM(require_react(), 1);
var __assign1076 = function() {
  __assign1076 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1076.apply(this, arguments);
};
function SvgShieldBroken(passedProps, svgRef) {
  var context = React1077.useContext(IconoirContext);
  var props = __assign1076(__assign1076({}, context), passedProps);
  return React1077.createElement(
    "svg",
    __assign1076({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1077.createElement("path", { d: "M11.5 7L9 12h6l-2.5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1077.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1076 = React1077.forwardRef(SvgShieldBroken);
var ShieldBroken_default = ForwardRef1076;

// node_modules/iconoir-react/dist/esm/ShieldCheck.mjs
var React1078 = __toESM(require_react(), 1);
var __assign1077 = function() {
  __assign1077 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1077.apply(this, arguments);
};
function SvgShieldCheck(passedProps, svgRef) {
  var context = React1078.useContext(IconoirContext);
  var props = __assign1077(__assign1077({}, context), passedProps);
  return React1078.createElement(
    "svg",
    __assign1077({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1078.createElement("path", { d: "M8.5 11.5l3 3 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1078.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1077 = React1078.forwardRef(SvgShieldCheck);
var ShieldCheck_default = ForwardRef1077;

// node_modules/iconoir-react/dist/esm/ShieldCross.mjs
var React1079 = __toESM(require_react(), 1);
var __assign1078 = function() {
  __assign1078 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1078.apply(this, arguments);
};
function SvgShieldCross(passedProps, svgRef) {
  var context = React1079.useContext(IconoirContext);
  var props = __assign1078(__assign1078({}, context), passedProps);
  return React1079.createElement(
    "svg",
    __assign1078({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1079.createElement("path", { d: "M9.871 14.121L11.993 12m2.121-2.121L11.993 12m0 0L9.87 9.879M11.993 12l2.121 2.121M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1078 = React1079.forwardRef(SvgShieldCross);
var ShieldCross_default = ForwardRef1078;

// node_modules/iconoir-react/dist/esm/ShieldDownload.mjs
var React1080 = __toESM(require_react(), 1);
var __assign1079 = function() {
  __assign1079 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1079.apply(this, arguments);
};
function SvgShieldDownload(passedProps, svgRef) {
  var context = React1080.useContext(IconoirContext);
  var props = __assign1079(__assign1079({}, context), passedProps);
  return React1080.createElement(
    "svg",
    __assign1079({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1080.createElement("path", { d: "M12 8v7m0 0l3-3m-3 3l-3-3M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1079 = React1080.forwardRef(SvgShieldDownload);
var ShieldDownload_default = ForwardRef1079;

// node_modules/iconoir-react/dist/esm/ShieldEye.mjs
var React1081 = __toESM(require_react(), 1);
var __assign1080 = function() {
  __assign1080 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1080.apply(this, arguments);
};
function SvgShieldEye(passedProps, svgRef) {
  var context = React1081.useContext(IconoirContext);
  var props = __assign1080(__assign1080({}, context), passedProps);
  return React1081.createElement(
    "svg",
    __assign1080({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1081.createElement("path", { d: "M8 9s1-1 4-1 4 1 4 1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1081.createElement("path", { d: "M12 14a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1081.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1080 = React1081.forwardRef(SvgShieldEye);
var ShieldEye_default = ForwardRef1080;

// node_modules/iconoir-react/dist/esm/ShieldLoading.mjs
var React1082 = __toESM(require_react(), 1);
var __assign1081 = function() {
  __assign1081 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1081.apply(this, arguments);
};
function SvgShieldLoading(passedProps, svgRef) {
  var context = React1082.useContext(IconoirContext);
  var props = __assign1081(__assign1081({}, context), passedProps);
  return React1082.createElement(
    "svg",
    __assign1081({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1082.createElement("path", { d: "M8 10.01l.01-.011M12 10.01l.01-.011M16 10.01l.01-.011M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1081 = React1082.forwardRef(SvgShieldLoading);
var ShieldLoading_default = ForwardRef1081;

// node_modules/iconoir-react/dist/esm/ShieldMinus.mjs
var React1083 = __toESM(require_react(), 1);
var __assign1082 = function() {
  __assign1082 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1082.apply(this, arguments);
};
function SvgShieldMinus(passedProps, svgRef) {
  var context = React1083.useContext(IconoirContext);
  var props = __assign1082(__assign1082({}, context), passedProps);
  return React1083.createElement(
    "svg",
    __assign1082({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1083.createElement("path", { d: "M9 12h6M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1082 = React1083.forwardRef(SvgShieldMinus);
var ShieldMinus_default = ForwardRef1082;

// node_modules/iconoir-react/dist/esm/ShieldQuestion.mjs
var React1084 = __toESM(require_react(), 1);
var __assign1083 = function() {
  __assign1083 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1083.apply(this, arguments);
};
function SvgShieldQuestion(passedProps, svgRef) {
  var context = React1084.useContext(IconoirContext);
  var props = __assign1083(__assign1083({}, context), passedProps);
  return React1084.createElement(
    "svg",
    __assign1083({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1084.createElement("path", { d: "M9 9c0-3.5 5.5-3.5 5.5 0 0 2.5-2.5 2-2.5 5M12 18.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1084.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1083 = React1084.forwardRef(SvgShieldQuestion);
var ShieldQuestion_default = ForwardRef1083;

// node_modules/iconoir-react/dist/esm/ShieldSearch.mjs
var React1085 = __toESM(require_react(), 1);
var __assign1084 = function() {
  __assign1084 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1084.apply(this, arguments);
};
function SvgShieldSearch(passedProps, svgRef) {
  var context = React1085.useContext(IconoirContext);
  var props = __assign1084(__assign1084({}, context), passedProps);
  return React1085.createElement(
    "svg",
    __assign1084({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1085.createElement("path", { d: "M13.5 13l1.5 1.5M9 11a2.5 2.5 0 105 0 2.5 2.5 0 00-5 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1085.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1084 = React1085.forwardRef(SvgShieldSearch);
var ShieldSearch_default = ForwardRef1084;

// node_modules/iconoir-react/dist/esm/ShieldUpload.mjs
var React1086 = __toESM(require_react(), 1);
var __assign1085 = function() {
  __assign1085 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1085.apply(this, arguments);
};
function SvgShieldUpload(passedProps, svgRef) {
  var context = React1086.useContext(IconoirContext);
  var props = __assign1085(__assign1085({}, context), passedProps);
  return React1086.createElement(
    "svg",
    __assign1085({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1086.createElement("path", { d: "M12 15V8m0 0l3 3m-3-3l-3 3M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1085 = React1086.forwardRef(SvgShieldUpload);
var ShieldUpload_default = ForwardRef1085;

// node_modules/iconoir-react/dist/esm/Shield.mjs
var React1087 = __toESM(require_react(), 1);
var __assign1086 = function() {
  __assign1086 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1086.apply(this, arguments);
};
function SvgShield(passedProps, svgRef) {
  var context = React1087.useContext(IconoirContext);
  var props = __assign1086(__assign1086({}, context), passedProps);
  return React1087.createElement(
    "svg",
    __assign1086({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1087.createElement("path", { d: "M5 18L3.13 4.913a.996.996 0 01.774-1.114l7.662-1.703a2 2 0 01.868 0L20.096 3.8c.51.113.848.596.774 1.114L19 18c-.07.495-.5 3.5-7 3.5S5.07 18.495 5 18z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1086 = React1087.forwardRef(SvgShield);
var Shield_default = ForwardRef1086;

// node_modules/iconoir-react/dist/esm/ShopAlt.mjs
var React1088 = __toESM(require_react(), 1);
var __assign1087 = function() {
  __assign1087 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1087.apply(this, arguments);
};
function SvgShopAlt(passedProps, svgRef) {
  var context = React1088.useContext(IconoirContext);
  var props = __assign1087(__assign1087({}, context), passedProps);
  return React1088.createElement(
    "svg",
    __assign1087({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1088.createElement("path", { d: "M20.485 3h-3.992l.5 5s1 1 2.5 1a3.23 3.23 0 002.139-.806.503.503 0 00.15-.465L21.076 3.5A.6.6 0 0020.485 3z", stroke: "currentColor" }),
    React1088.createElement("path", { d: "M16.493 3l.5 5s-1 1-2.5 1-2.5-1-2.5-1V3h4.5z", stroke: "currentColor" }),
    React1088.createElement("path", { d: "M11.993 3v5s-1 1-2.5 1-2.5-1-2.5-1l.5-5h4.5z", stroke: "currentColor" }),
    React1088.createElement("path", { d: "M7.493 3H3.502a.6.6 0 00-.592.501L2.205 7.73c-.029.172.02.349.15.465.328.29 1.061.806 2.138.806 1.5 0 2.5-1 2.5-1l.5-5z", stroke: "currentColor" }),
    React1088.createElement("path", { d: "M3 9v10a2 2 0 002 2h14a2 2 0 002-2V9", stroke: "currentColor" }),
    React1088.createElement("path", { d: "M14.833 21v-6a2 2 0 00-2-2h-2a2 2 0 00-2 2v6", stroke: "currentColor", strokeMiterlimit: 16 })
  );
}
var ForwardRef1087 = React1088.forwardRef(SvgShopAlt);
var ShopAlt_default = ForwardRef1087;

// node_modules/iconoir-react/dist/esm/Shop.mjs
var React1089 = __toESM(require_react(), 1);
var __assign1088 = function() {
  __assign1088 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1088.apply(this, arguments);
};
function SvgShop(passedProps, svgRef) {
  var context = React1089.useContext(IconoirContext);
  var props = __assign1088(__assign1088({}, context), passedProps);
  return React1089.createElement(
    "svg",
    __assign1088({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1089.createElement("path", { d: "M3 9v10a2 2 0 002 2h14a2 2 0 002-2V9", stroke: "currentColor" }),
    React1089.createElement("path", { d: "M20.485 3h-3.992l.5 5s1 1 2.5 1a3.23 3.23 0 002.139-.806.503.503 0 00.15-.465L21.076 3.5A.6.6 0 0020.485 3z", stroke: "currentColor" }),
    React1089.createElement("path", { d: "M16.493 3l.5 5s-1 1-2.5 1-2.5-1-2.5-1V3h4.5z", stroke: "currentColor" }),
    React1089.createElement("path", { d: "M11.993 3v5s-1 1-2.5 1-2.5-1-2.5-1l.5-5h4.5z", stroke: "currentColor" }),
    React1089.createElement("path", { d: "M7.493 3H3.502a.6.6 0 00-.592.501L2.205 7.73c-.029.172.02.349.15.465.328.29 1.061.806 2.138.806 1.5 0 2.5-1 2.5-1l.5-5z", stroke: "currentColor" })
  );
}
var ForwardRef1088 = React1089.forwardRef(SvgShop);
var Shop_default = ForwardRef1088;

// node_modules/iconoir-react/dist/esm/ShoppingBagAdd.mjs
var React1090 = __toESM(require_react(), 1);
var __assign1089 = function() {
  __assign1089 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1089.apply(this, arguments);
};
function SvgShoppingBagAdd(passedProps, svgRef) {
  var context = React1090.useContext(IconoirContext);
  var props = __assign1089(__assign1089({}, context), passedProps);
  return React1090.createElement(
    "svg",
    __assign1089({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1090.createElement("path", { d: "M19.26 9.696l1.385 9A2 2 0 0118.67 21H5.33a2 2 0 01-1.977-2.304l1.385-9A2 2 0 016.716 8h10.568a2 2 0 011.977 1.696zM14 5a2 2 0 10-4 0M8.992 15h3m3 0h-3m0 0v-3m0 3v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1089 = React1090.forwardRef(SvgShoppingBagAdd);
var ShoppingBagAdd_default = ForwardRef1089;

// node_modules/iconoir-react/dist/esm/ShoppingBagAlt.mjs
var React1091 = __toESM(require_react(), 1);
var __assign1090 = function() {
  __assign1090 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1090.apply(this, arguments);
};
function SvgShoppingBagAlt(passedProps, svgRef) {
  var context = React1091.useContext(IconoirContext);
  var props = __assign1090(__assign1090({}, context), passedProps);
  return React1091.createElement(
    "svg",
    __assign1090({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1091.createElement("path", { d: "M19.26 9.696l1.385 9A2 2 0 0118.67 21H5.33a2 2 0 01-1.977-2.304l1.385-9A2 2 0 016.716 8h10.568a2 2 0 011.977 1.696zM9 11v7M15 11v7M14 5a2 2 0 10-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1090 = React1091.forwardRef(SvgShoppingBagAlt);
var ShoppingBagAlt_default = ForwardRef1090;

// node_modules/iconoir-react/dist/esm/ShoppingBagArrowDown.mjs
var React1092 = __toESM(require_react(), 1);
var __assign1091 = function() {
  __assign1091 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1091.apply(this, arguments);
};
function SvgShoppingBagArrowDown(passedProps, svgRef) {
  var context = React1092.useContext(IconoirContext);
  var props = __assign1091(__assign1091({}, context), passedProps);
  return React1092.createElement(
    "svg",
    __assign1091({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1092.createElement("path", { d: "M16.5 21h2.169a2 2 0 001.976-2.304l-1.384-9A2 2 0 0017.284 8H6.716a2 2 0 00-1.977 1.696l-1.385 9A2 2 0 005.331 21H7.5M12 12v7m0 0l3-3m-3 3l-3-3M14 5a2 2 0 10-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1091 = React1092.forwardRef(SvgShoppingBagArrowDown);
var ShoppingBagArrowDown_default = ForwardRef1091;

// node_modules/iconoir-react/dist/esm/ShoppingBagArrowUp.mjs
var React1093 = __toESM(require_react(), 1);
var __assign1092 = function() {
  __assign1092 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1092.apply(this, arguments);
};
function SvgShoppingBagArrowUp(passedProps, svgRef) {
  var context = React1093.useContext(IconoirContext);
  var props = __assign1092(__assign1092({}, context), passedProps);
  return React1093.createElement(
    "svg",
    __assign1092({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1093.createElement("path", { d: "M16.5 21h2.169a2 2 0 001.976-2.304l-1.384-9A2 2 0 0017.284 8H6.716a2 2 0 00-1.977 1.696l-1.385 9A2 2 0 005.331 21H7.5M12 19v-7m0 0l3 3m-3-3l-3 3M14 5a2 2 0 10-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1092 = React1093.forwardRef(SvgShoppingBagArrowUp);
var ShoppingBagArrowUp_default = ForwardRef1092;

// node_modules/iconoir-react/dist/esm/ShoppingBagCheck.mjs
var React1094 = __toESM(require_react(), 1);
var __assign1093 = function() {
  __assign1093 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1093.apply(this, arguments);
};
function SvgShoppingBagCheck(passedProps, svgRef) {
  var context = React1094.useContext(IconoirContext);
  var props = __assign1093(__assign1093({}, context), passedProps);
  return React1094.createElement(
    "svg",
    __assign1093({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1094.createElement("path", { d: "M20 14.5l-.74-4.804A2 2 0 0017.285 8H6.716a2 2 0 00-1.977 1.696l-1.385 9A2 2 0 005.331 21H12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1094.createElement("path", { d: "M14 19l3 3 5-5M14 5a2 2 0 10-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1093 = React1094.forwardRef(SvgShoppingBagCheck);
var ShoppingBagCheck_default = ForwardRef1093;

// node_modules/iconoir-react/dist/esm/ShoppingBagIssue.mjs
var React1095 = __toESM(require_react(), 1);
var __assign1094 = function() {
  __assign1094 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1094.apply(this, arguments);
};
function SvgShoppingBagIssue(passedProps, svgRef) {
  var context = React1095.useContext(IconoirContext);
  var props = __assign1094(__assign1094({}, context), passedProps);
  return React1095.createElement(
    "svg",
    __assign1094({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1095.createElement("path", { d: "M20 14.5l-.74-4.804A2 2 0 0017.285 8H6.716a2 2 0 00-1.977 1.696l-1.385 9A2 2 0 005.331 21H12M17.5 17v2M17.5 22.01l.01-.011M14 5a2 2 0 10-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1094 = React1095.forwardRef(SvgShoppingBagIssue);
var ShoppingBagIssue_default = ForwardRef1094;

// node_modules/iconoir-react/dist/esm/ShoppingBagRemove.mjs
var React1096 = __toESM(require_react(), 1);
var __assign1095 = function() {
  __assign1095 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1095.apply(this, arguments);
};
function SvgShoppingBagRemove(passedProps, svgRef) {
  var context = React1096.useContext(IconoirContext);
  var props = __assign1095(__assign1095({}, context), passedProps);
  return React1096.createElement(
    "svg",
    __assign1095({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1096.createElement("path", { d: "M19.26 9.696l1.385 9A2 2 0 0118.67 21H5.33a2 2 0 01-1.977-2.304l1.385-9A2 2 0 016.716 8h10.568a2 2 0 011.977 1.696zM14 5a2 2 0 10-4 0M8.992 15h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1095 = React1096.forwardRef(SvgShoppingBagRemove);
var ShoppingBagRemove_default = ForwardRef1095;

// node_modules/iconoir-react/dist/esm/ShoppingBag.mjs
var React1097 = __toESM(require_react(), 1);
var __assign1096 = function() {
  __assign1096 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1096.apply(this, arguments);
};
function SvgShoppingBag(passedProps, svgRef) {
  var context = React1097.useContext(IconoirContext);
  var props = __assign1096(__assign1096({}, context), passedProps);
  return React1097.createElement(
    "svg",
    __assign1096({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1097.createElement("path", { d: "M19.26 9.696l1.385 9A2 2 0 0118.67 21H5.33a2 2 0 01-1.977-2.304l1.385-9A2 2 0 016.716 8h10.568a2 2 0 011.977 1.696zM14 5a2 2 0 10-4 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1096 = React1097.forwardRef(SvgShoppingBag);
var ShoppingBag_default = ForwardRef1096;

// node_modules/iconoir-react/dist/esm/ShoppingCodeCheck.mjs
var React1098 = __toESM(require_react(), 1);
var __assign1097 = function() {
  __assign1097 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1097.apply(this, arguments);
};
function SvgShoppingCodeCheck(passedProps, svgRef) {
  var context = React1098.useContext(IconoirContext);
  var props = __assign1097(__assign1097({}, context), passedProps);
  return React1098.createElement(
    "svg",
    __assign1097({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1098.createElement("path", { d: "M6 5v2M10 5v6M18 5v1M6 10v6M6 18.5v.5M10 18.5v.5M10 14v2M14 13v2M14 5v5M18 9v4M15 19l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1097 = React1098.forwardRef(SvgShoppingCodeCheck);
var ShoppingCodeCheck_default = ForwardRef1097;

// node_modules/iconoir-react/dist/esm/ShoppingCodeError.mjs
var React1099 = __toESM(require_react(), 1);
var __assign1098 = function() {
  __assign1098 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1098.apply(this, arguments);
};
function SvgShoppingCodeError(passedProps, svgRef) {
  var context = React1099.useContext(IconoirContext);
  var props = __assign1098(__assign1098({}, context), passedProps);
  return React1099.createElement(
    "svg",
    __assign1098({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1099.createElement("path", { d: "M6 5v2M10 5v6M18 5v1M6 10v6M6 18.5v.5M10 18.5v.5M10 14v2M14 13v2M14 5v5M18 9v4M16.121 21.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L16.12 17.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1098 = React1099.forwardRef(SvgShoppingCodeError);
var ShoppingCodeError_default = ForwardRef1098;

// node_modules/iconoir-react/dist/esm/ShoppingCode.mjs
var React1100 = __toESM(require_react(), 1);
var __assign1099 = function() {
  __assign1099 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1099.apply(this, arguments);
};
function SvgShoppingCode(passedProps, svgRef) {
  var context = React1100.useContext(IconoirContext);
  var props = __assign1099(__assign1099({}, context), passedProps);
  return React1100.createElement(
    "svg",
    __assign1099({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1100.createElement("path", { d: "M6 5v2M10 5v6M18 5v1M6 10v6M6 18.5v.5M10 18.5v.5M14 18.5v.5M18 18.5v.5M10 14v2M14 13v3M14 5v5M18 9v7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1099 = React1100.forwardRef(SvgShoppingCode);
var ShoppingCode_default = ForwardRef1099;

// node_modules/iconoir-react/dist/esm/ShortPantsAlt.mjs
var React1101 = __toESM(require_react(), 1);
var __assign1100 = function() {
  __assign1100 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1100.apply(this, arguments);
};
function SvgShortPantsAlt(passedProps, svgRef) {
  var context = React1101.useContext(IconoirContext);
  var props = __assign1100(__assign1100({}, context), passedProps);
  return React1101.createElement(
    "svg",
    __assign1100({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1101.createElement("path", { d: "M12 16.8h6.966a.6.6 0 00.596-.53l1.36-11.6a.6.6 0 00-.596-.67H3.659a.6.6 0 00-.597.656l1.387 14.8a.6.6 0 00.597.544H11.4a.6.6 0 00.6-.6V12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1100 = React1101.forwardRef(SvgShortPantsAlt);
var ShortPantsAlt_default = ForwardRef1100;

// node_modules/iconoir-react/dist/esm/ShortPants.mjs
var React1102 = __toESM(require_react(), 1);
var __assign1101 = function() {
  __assign1101 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1101.apply(this, arguments);
};
function SvgShortPants(passedProps, svgRef) {
  var context = React1102.useContext(IconoirContext);
  var props = __assign1101(__assign1101({}, context), passedProps);
  return React1102.createElement(
    "svg",
    __assign1101({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1102.createElement("path", { d: "M3.06 5.655A.6.6 0 013.658 5h16.684a.6.6 0 01.598.655l-1.176 12.8a.6.6 0 01-.597.545h-4.152a.6.6 0 01-.574-.424l-1.867-6.102c-.174-.566-.974-.566-1.148 0l-1.868 6.102a.6.6 0 01-.573.424H4.833a.6.6 0 01-.597-.545L3.643 12 3.06 5.655z", stroke: "currentColor" }),
    React1102.createElement("path", { d: "M4 9.5h1.5a2 2 0 002-2V5M20.5 9.5h-2a2 2 0 01-2-2V5", stroke: "currentColor" })
  );
}
var ForwardRef1101 = React1102.forwardRef(SvgShortPants);
var ShortPants_default = ForwardRef1101;

// node_modules/iconoir-react/dist/esm/Shortcut.mjs
var React1103 = __toESM(require_react(), 1);
var __assign1102 = function() {
  __assign1102 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1102.apply(this, arguments);
};
function SvgShortcut(passedProps, svgRef) {
  var context = React1103.useContext(IconoirContext);
  var props = __assign1102(__assign1102({}, context), passedProps);
  return React1103.createElement(
    "svg",
    __assign1102({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1103.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1103.createElement("path", { d: "M15.025 8.025h-4.95m4.95 0v4.95m0-4.95l-3.535 3.536c-2.475 2.475 0 4.95 0 4.95", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1102 = React1103.forwardRef(SvgShortcut);
var Shortcut_default = ForwardRef1102;

// node_modules/iconoir-react/dist/esm/Shuffle.mjs
var React1104 = __toESM(require_react(), 1);
var __assign1103 = function() {
  __assign1103 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1103.apply(this, arguments);
};
function SvgShuffle(passedProps, svgRef) {
  var context = React1104.useContext(IconoirContext);
  var props = __assign1103(__assign1103({}, context), passedProps);
  return React1104.createElement(
    "svg",
    __assign1103({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1104.createElement("path", { d: "M22 7c-3 0-8.5 0-10.5 5.5S5 18 2 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1104.createElement("path", { d: "M20 5l2 2-2 2M22 18c-3 0-8.5 0-10.5-5.5S5 7 2 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1104.createElement("path", { d: "M20 20l2-2-2-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1103 = React1104.forwardRef(SvgShuffle);
var Shuffle_default = ForwardRef1103;

// node_modules/iconoir-react/dist/esm/SidebarCollapse.mjs
var React1105 = __toESM(require_react(), 1);
var __assign1104 = function() {
  __assign1104 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1104.apply(this, arguments);
};
function SvgSidebarCollapse(passedProps, svgRef) {
  var context = React1105.useContext(IconoirContext);
  var props = __assign1104(__assign1104({}, context), passedProps);
  return React1105.createElement(
    "svg",
    __assign1104({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1105.createElement("path", { d: "M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1105.createElement("path", { d: "M7.25 10L5.5 12l1.75 2M9.5 21V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1104 = React1105.forwardRef(SvgSidebarCollapse);
var SidebarCollapse_default = ForwardRef1104;

// node_modules/iconoir-react/dist/esm/SidebarExpand.mjs
var React1106 = __toESM(require_react(), 1);
var __assign1105 = function() {
  __assign1105 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1105.apply(this, arguments);
};
function SvgSidebarExpand(passedProps, svgRef) {
  var context = React1106.useContext(IconoirContext);
  var props = __assign1105(__assign1105({}, context), passedProps);
  return React1106.createElement(
    "svg",
    __assign1105({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1106.createElement("path", { d: "M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2zM9.5 21V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1106.createElement("path", { d: "M5.5 10l1.75 2-1.75 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1105 = React1106.forwardRef(SvgSidebarExpand);
var SidebarExpand_default = ForwardRef1105;

// node_modules/iconoir-react/dist/esm/SigmaFunction.mjs
var React1107 = __toESM(require_react(), 1);
var __assign1106 = function() {
  __assign1106 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1106.apply(this, arguments);
};
function SvgSigmaFunction(passedProps, svgRef) {
  var context = React1107.useContext(IconoirContext);
  var props = __assign1106(__assign1106({}, context), passedProps);
  return React1107.createElement(
    "svg",
    __assign1106({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1107.createElement("path", { d: "M4 4h16v3M4 20h16v-3M4 20l8-8-8-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1106 = React1107.forwardRef(SvgSigmaFunction);
var SigmaFunction_default = ForwardRef1106;

// node_modules/iconoir-react/dist/esm/SimpleCart.mjs
var React1108 = __toESM(require_react(), 1);
var __assign1107 = function() {
  __assign1107 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1107.apply(this, arguments);
};
function SvgSimpleCart(passedProps, svgRef) {
  var context = React1108.useContext(IconoirContext);
  var props = __assign1107(__assign1107({}, context), passedProps);
  return React1108.createElement(
    "svg",
    __assign1107({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1108.createElement("path", { d: "M3 6h19l-3 10H6L3 6zm0 0l-.75-2.5M11 19.5a1.5 1.5 0 01-3 0M17 19.5a1.5 1.5 0 01-3 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1107 = React1108.forwardRef(SvgSimpleCart);
var SimpleCart_default = ForwardRef1107;

// node_modules/iconoir-react/dist/esm/SineWave.mjs
var React1109 = __toESM(require_react(), 1);
var __assign1108 = function() {
  __assign1108 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1108.apply(this, arguments);
};
function SvgSineWave(passedProps, svgRef) {
  var context = React1109.useContext(IconoirContext);
  var props = __assign1108(__assign1108({}, context), passedProps);
  return React1109.createElement(
    "svg",
    __assign1108({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1109.createElement("path", { d: "M3 12c0-3.857 1.286-9 3.857-9 3.857 0 6.429 18 10.286 18C19.714 21 21 15.857 21 12M3 12h2M19 12h2M15.5 12h1M7.5 12h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1108 = React1109.forwardRef(SvgSineWave);
var SineWave_default = ForwardRef1108;

// node_modules/iconoir-react/dist/esm/SingleTapGesture.mjs
var React1110 = __toESM(require_react(), 1);
var __assign1109 = function() {
  __assign1109 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1109.apply(this, arguments);
};
function SvgSingleTapGesture(passedProps, svgRef) {
  var context = React1110.useContext(IconoirContext);
  var props = __assign1109(__assign1109({}, context), passedProps);
  return React1110.createElement(
    "svg",
    __assign1109({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1110.createElement("path", { d: "M12 20.5a7 7 0 100-14 7 7 0 000 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1110.createElement("path", { d: "M4 7.29C5.496 5.039 8.517 3.5 12 3.5c3.483 0 6.504 1.539 8 3.79", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1109 = React1110.forwardRef(SvgSingleTapGesture);
var SingleTapGesture_default = ForwardRef1109;

// node_modules/iconoir-react/dist/esm/Skateboard.mjs
var React1111 = __toESM(require_react(), 1);
var __assign1110 = function() {
  __assign1110 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1110.apply(this, arguments);
};
function SvgSkateboard(passedProps, svgRef) {
  var context = React1111.useContext(IconoirContext);
  var props = __assign1110(__assign1110({}, context), passedProps);
  return React1111.createElement(
    "svg",
    __assign1110({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1111.createElement("path", { d: "M6.5 16a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM2 9l3.333 1h13.334L22 9M17.5 16a1.5 1.5 0 100-3 1.5 1.5 0 000 3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1110 = React1111.forwardRef(SvgSkateboard);
var Skateboard_default = ForwardRef1110;

// node_modules/iconoir-react/dist/esm/Skateboarding.mjs
var React1112 = __toESM(require_react(), 1);
var __assign1111 = function() {
  __assign1111 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1111.apply(this, arguments);
};
function SvgSkateboarding(passedProps, svgRef) {
  var context = React1112.useContext(IconoirContext);
  var props = __assign1111(__assign1111({}, context), passedProps);
  return React1112.createElement(
    "svg",
    __assign1111({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1112.createElement("path", { d: "M5 19l2.333 1h9.334L19 19M8 22.01l.01-.011M16 22.01l.01-.011M7 7.833l3-1.5c2-1 4.27.568 4.27.568l-4.308 3.135L14 13.334v4M9.549 13.345l-1.24.827H5M15.165 9.21h2.722M17 6a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1111 = React1112.forwardRef(SvgSkateboarding);
var Skateboarding_default = ForwardRef1111;

// node_modules/iconoir-react/dist/esm/SkipNext.mjs
var React1113 = __toESM(require_react(), 1);
var __assign1112 = function() {
  __assign1112 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1112.apply(this, arguments);
};
function SvgSkipNext(passedProps, svgRef) {
  var context = React1113.useContext(IconoirContext);
  var props = __assign1112(__assign1112({}, context), passedProps);
  return React1113.createElement(
    "svg",
    __assign1112({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1113.createElement("path", { d: "M18 7v10M6.972 5.267A.6.6 0 006 5.738v12.524a.6.6 0 00.972.47l7.931-6.261a.6.6 0 000-.942L6.972 5.267z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1112 = React1113.forwardRef(SvgSkipNext);
var SkipNext_default = ForwardRef1112;

// node_modules/iconoir-react/dist/esm/SkipPrev.mjs
var React1114 = __toESM(require_react(), 1);
var __assign1113 = function() {
  __assign1113 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1113.apply(this, arguments);
};
function SvgSkipPrev(passedProps, svgRef) {
  var context = React1114.useContext(IconoirContext);
  var props = __assign1113(__assign1113({}, context), passedProps);
  return React1114.createElement(
    "svg",
    __assign1113({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1114.createElement("path", { d: "M6 7v10M17.028 5.267a.6.6 0 01.972.471v12.524a.6.6 0 01-.972.47l-7.931-6.261a.6.6 0 010-.942l7.931-6.262z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1113 = React1114.forwardRef(SvgSkipPrev);
var SkipPrev_default = ForwardRef1113;

// node_modules/iconoir-react/dist/esm/Slash.mjs
var React1115 = __toESM(require_react(), 1);
var __assign1114 = function() {
  __assign1114 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1114.apply(this, arguments);
};
function SvgSlash(passedProps, svgRef) {
  var context = React1115.useContext(IconoirContext);
  var props = __assign1114(__assign1114({}, context), passedProps);
  return React1115.createElement(
    "svg",
    __assign1114({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1115.createElement("path", { d: "M15 4L8 20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1114 = React1115.forwardRef(SvgSlash);
var Slash_default = ForwardRef1114;

// node_modules/iconoir-react/dist/esm/SleeperChair.mjs
var React1116 = __toESM(require_react(), 1);
var __assign1115 = function() {
  __assign1115 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1115.apply(this, arguments);
};
function SvgSleeperChair(passedProps, svgRef) {
  var context = React1116.useContext(IconoirContext);
  var props = __assign1115(__assign1115({}, context), passedProps);
  return React1116.createElement(
    "svg",
    __assign1115({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1116.createElement("path", { d: "M4 18v3M5 10V5a2 2 0 012-2h10a2 2 0 012 2v5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1116.createElement("path", { d: "M19.5 10a2.5 2.5 0 00-2.5 2.5V14H7v-1.5a2.5 2.5 0 10-3 2.45V18h16v-3.05a2.5 2.5 0 00-.5-4.95zM20 18v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1115 = React1116.forwardRef(SvgSleeperChair);
var SleeperChair_default = ForwardRef1115;

// node_modules/iconoir-react/dist/esm/SmallLampAlt.mjs
var React1117 = __toESM(require_react(), 1);
var __assign1116 = function() {
  __assign1116 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1116.apply(this, arguments);
};
function SvgSmallLampAlt(passedProps, svgRef) {
  var context = React1117.useContext(IconoirContext);
  var props = __assign1116(__assign1116({}, context), passedProps);
  return React1117.createElement(
    "svg",
    __assign1116({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1117.createElement("path", { d: "M6.872 3.428l-2.64 8.8a.6.6 0 00.574.772h14.388a.6.6 0 00.574-.772l-2.64-8.8A.6.6 0 0016.554 3H7.446a.6.6 0 00-.574.428zM8 15v-2M8 21h8m-4-6v6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1116 = React1117.forwardRef(SvgSmallLampAlt);
var SmallLampAlt_default = ForwardRef1116;

// node_modules/iconoir-react/dist/esm/SmallLamp.mjs
var React1118 = __toESM(require_react(), 1);
var __assign1117 = function() {
  __assign1117 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1117.apply(this, arguments);
};
function SvgSmallLamp(passedProps, svgRef) {
  var context = React1118.useContext(IconoirContext);
  var props = __assign1117(__assign1117({}, context), passedProps);
  return React1118.createElement(
    "svg",
    __assign1117({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1118.createElement("path", { d: "M6.872 3.428l-2.64 8.8a.6.6 0 00.574.772h14.388a.6.6 0 00.574-.772l-2.64-8.8A.6.6 0 0016.554 3H7.446a.6.6 0 00-.574.428zM12 17v-2M8.6 21h6.8c.331 0 .595-.268.542-.596C15.763 19.29 15.026 17 12 17c-3.026 0-3.763 2.29-3.942 3.404-.053.328.21.596.542.596z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1117 = React1118.forwardRef(SvgSmallLamp);
var SmallLamp_default = ForwardRef1117;

// node_modules/iconoir-react/dist/esm/SmallShopAlt.mjs
var React1119 = __toESM(require_react(), 1);
var __assign1118 = function() {
  __assign1118 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1118.apply(this, arguments);
};
function SvgSmallShopAlt(passedProps, svgRef) {
  var context = React1119.useContext(IconoirContext);
  var props = __assign1118(__assign1118({}, context), passedProps);
  return React1119.createElement(
    "svg",
    __assign1118({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1119.createElement("path", { d: "M3 10v9a2 2 0 002 2h14a2 2 0 002-2v-9", stroke: "currentColor" }),
    React1119.createElement("path", { d: "M14.833 21v-6a2 2 0 00-2-2h-2a2 2 0 00-2 2v6", stroke: "currentColor", strokeMiterlimit: 16 }),
    React1119.createElement("path", { d: "M21.818 9.364l-1.694-5.929A.6.6 0 0019.547 3H15.5l.475 5.704a.578.578 0 00.278.45c.39.233 1.152.663 1.747.846 1.016.313 2.5.2 3.346.096a.57.57 0 00.472-.732z", stroke: "currentColor" }),
    React1119.createElement("path", { d: "M14 10c.568-.175 1.288-.574 1.69-.812a.578.578 0 00.28-.549L15.5 3h-7l-.47 5.639a.578.578 0 00.28.55c.402.237 1.122.636 1.69.811 1.493.46 2.507.46 4 0z", stroke: "currentColor" }),
    React1119.createElement("path", { d: "M3.876 3.435l-1.694 5.93a.57.57 0 00.472.73c.845.105 2.33.217 3.346-.095.595-.183 1.358-.613 1.747-.845a.578.578 0 00.278-.451L8.5 3H4.453a.6.6 0 00-.577.435z", stroke: "currentColor" })
  );
}
var ForwardRef1118 = React1119.forwardRef(SvgSmallShopAlt);
var SmallShopAlt_default = ForwardRef1118;

// node_modules/iconoir-react/dist/esm/SmallShop.mjs
var React1120 = __toESM(require_react(), 1);
var __assign1119 = function() {
  __assign1119 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1119.apply(this, arguments);
};
function SvgSmallShop(passedProps, svgRef) {
  var context = React1120.useContext(IconoirContext);
  var props = __assign1119(__assign1119({}, context), passedProps);
  return React1120.createElement(
    "svg",
    __assign1119({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1120.createElement("path", { d: "M21.818 9.364l-1.694-5.929A.6.6 0 0019.547 3H15.5l.475 5.704a.578.578 0 00.278.45c.39.233 1.152.663 1.747.846 1.016.313 2.5.2 3.346.096a.57.57 0 00.472-.732z", stroke: "currentColor" }),
    React1120.createElement("path", { d: "M14 10c.568-.175 1.288-.574 1.69-.812a.578.578 0 00.28-.549L15.5 3h-7l-.47 5.639a.578.578 0 00.28.55c.402.237 1.122.636 1.69.811 1.493.46 2.507.46 4 0z", stroke: "currentColor" }),
    React1120.createElement("path", { d: "M3.876 3.435l-1.694 5.93a.57.57 0 00.472.73c.845.105 2.33.217 3.346-.095.595-.183 1.358-.613 1.747-.845a.578.578 0 00.278-.451L8.5 3H4.453a.6.6 0 00-.577.435z", stroke: "currentColor" }),
    React1120.createElement("path", { d: "M3 10v9a2 2 0 002 2h14a2 2 0 002-2v-9", stroke: "currentColor" })
  );
}
var ForwardRef1119 = React1120.forwardRef(SvgSmallShop);
var SmallShop_default = ForwardRef1119;

// node_modules/iconoir-react/dist/esm/SmartphoneDevice.mjs
var React1121 = __toESM(require_react(), 1);
var __assign1120 = function() {
  __assign1120 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1120.apply(this, arguments);
};
function SvgSmartphoneDevice(passedProps, svgRef) {
  var context = React1121.useContext(IconoirContext);
  var props = __assign1120(__assign1120({}, context), passedProps);
  return React1121.createElement(
    "svg",
    __assign1120({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1121.createElement("path", { d: "M12 16.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1121.createElement("path", { d: "M7 19.4V4.6a.6.6 0 01.6-.6h8.8a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6H7.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1120 = React1121.forwardRef(SvgSmartphoneDevice);
var SmartphoneDevice_default = ForwardRef1120;

// node_modules/iconoir-react/dist/esm/Smoking.mjs
var React1122 = __toESM(require_react(), 1);
var __assign1121 = function() {
  __assign1121 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1121.apply(this, arguments);
};
function SvgSmoking(passedProps, svgRef) {
  var context = React1122.useContext(IconoirContext);
  var props = __assign1121(__assign1121({}, context), passedProps);
  return React1122.createElement(
    "svg",
    __assign1121({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1122.createElement("path", { d: "M18 19v3M18 16c0-1-1-2-3-2h-1a3 3 0 01-3-3V8.5A2.5 2.5 0 0113.5 6v0h.5M22 16c0-4.5-2-5.5-4-6 2-.5 4-1 4-4s-2.5-4-4-4M22 19v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1122.createElement("rect", { x: 2, y: 19, width: 12, height: 3, rx: 0.6, stroke: "currentColor" })
  );
}
var ForwardRef1121 = React1122.forwardRef(SvgSmoking);
var Smoking_default = ForwardRef1121;

// node_modules/iconoir-react/dist/esm/Snapchat.mjs
var React1123 = __toESM(require_react(), 1);
var __assign1122 = function() {
  __assign1122 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1122.apply(this, arguments);
};
function SvgSnapchat(passedProps, svgRef) {
  var context = React1123.useContext(IconoirContext);
  var props = __assign1122(__assign1122({}, context), passedProps);
  return React1123.createElement(
    "svg",
    __assign1122({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1123.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" }),
    React1123.createElement("path", { d: "M18 8.75c0-9-12-9-12 0v1.5H4.372c-.583 0-.823.749-.348 1.088L6 12.75c-.333 1.167-1.7 3.7-4.5 4.5.333.5 1.3 1.5 2.5 1.5l1 1.5 2.5-.5c.833.667 2.9 2 4.5 2s3.667-1.333 4.5-2l2.5.5 1-1.5c1.2 0 2.167-1 2.5-1.5-2.8-.8-4.167-3.333-4.5-4.5l1.976-1.412c.475-.339.235-1.088-.348-1.088H18v-1.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1122 = React1123.forwardRef(SvgSnapchat);
var Snapchat_default = ForwardRef1122;

// node_modules/iconoir-react/dist/esm/SnowFlake.mjs
var React1124 = __toESM(require_react(), 1);
var __assign1123 = function() {
  __assign1123 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1123.apply(this, arguments);
};
function SvgSnowFlake(passedProps, svgRef) {
  var context = React1124.useContext(IconoirContext);
  var props = __assign1123(__assign1123({}, context), passedProps);
  return React1124.createElement(
    "svg",
    __assign1123({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1124.createElement("path", { d: "M3 7l3.5 2M21 17l-3.5-2M12 12L6.5 9m5.5 3l-5.5 3m5.5-3V5m0 7v6.5m0-6.5l5.5 3M12 12l5.5-3M12 2v3m0 17v-3.5M21 7l-3.5 2M3 17l3.5-2m0-6L3 10m3.5-1L6 5.5m.5 9.5L3 14m3.5 1L6 18.5M12 5L9.5 4M12 5l2.5-1M12 18.5l2.5 1.5M12 18.5L9.5 20m8-5l.5 3.5m-.5-3.5l3.5-1m-3.5-5l3.5 1m-3.5-1l.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1123 = React1124.forwardRef(SvgSnowFlake);
var SnowFlake_default = ForwardRef1123;

// node_modules/iconoir-react/dist/esm/Snow.mjs
var React1125 = __toESM(require_react(), 1);
var __assign1124 = function() {
  __assign1124 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1124.apply(this, arguments);
};
function SvgSnow(passedProps, svgRef) {
  var context = React1125.useContext(IconoirContext);
  var props = __assign1124(__assign1124({}, context), passedProps);
  return React1125.createElement(
    "svg",
    __assign1124({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1125.createElement("path", { d: "M12 12v5m0 5v-5m0 0l-4.5-2.5M12 17l4.5 2.5M12 17l4.5-2.5M12 17l-4.5 2.5M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1124 = React1125.forwardRef(SvgSnow);
var Snow_default = ForwardRef1124;

// node_modules/iconoir-react/dist/esm/Soap.mjs
var React1126 = __toESM(require_react(), 1);
var __assign1125 = function() {
  __assign1125 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1125.apply(this, arguments);
};
function SvgSoap(passedProps, svgRef) {
  var context = React1126.useContext(IconoirContext);
  var props = __assign1125(__assign1125({}, context), passedProps);
  return React1126.createElement(
    "svg",
    __assign1125({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1126.createElement("path", { d: "M7 11a4 4 0 014-4h2a4 4 0 014 4v9.4a.6.6 0 01-.6.6H7.6a.6.6 0 01-.6-.6V11zM7 13h10M12 7V3m0 0H9m3 0h1", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1125 = React1126.forwardRef(SvgSoap);
var Soap_default = ForwardRef1125;

// node_modules/iconoir-react/dist/esm/SoccerBall.mjs
var React1127 = __toESM(require_react(), 1);
var __assign1126 = function() {
  __assign1126 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1126.apply(this, arguments);
};
function SvgSoccerBall(passedProps, svgRef) {
  var context = React1127.useContext(IconoirContext);
  var props = __assign1126(__assign1126({}, context), passedProps);
  return React1127.createElement(
    "svg",
    __assign1126({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1127.createElement("path", { d: "M12 8l3.804 2.764M12 8l-3.804 2.764M12 8V5m3.804 5.764l-1.453 4.472m1.453-4.472L18.5 9.5m-4.149 5.736H9.65m4.702 0L16 17.5m-6.351-2.264l-1.453-4.472m1.453 4.472L8 17.5m.196-6.736L5.5 9.5m0 0L2.05 13M5.5 9.5l-1-4.115m14 4.115l3.45 3.5M18.5 9.5l1-4.115M12 5L8.624 2.584M12 5l3.376-2.416M8 17.5L3.338 17M8 17.5l2.5 4.388M16 17.5l4.662-.5M16 17.5l-2.5 4.388M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1126 = React1127.forwardRef(SvgSoccerBall);
var SoccerBall_default = ForwardRef1126;

// node_modules/iconoir-react/dist/esm/Sofa.mjs
var React1128 = __toESM(require_react(), 1);
var __assign1127 = function() {
  __assign1127 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1127.apply(this, arguments);
};
function SvgSofa(passedProps, svgRef) {
  var context = React1128.useContext(IconoirContext);
  var props = __assign1127(__assign1127({}, context), passedProps);
  return React1128.createElement(
    "svg",
    __assign1127({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1128.createElement("path", { d: "M2 16v3M4 9V7a2 2 0 012-2h12a2 2 0 012 2v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1128.createElement("path", { d: "M20 9a2 2 0 00-2 2v2H6v-2a2 2 0 10-4 0v6h20v-6a2 2 0 00-2-2zM22 16v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1127 = React1128.forwardRef(SvgSofa);
var Sofa_default = ForwardRef1127;

// node_modules/iconoir-react/dist/esm/SoilAlt.mjs
var React1129 = __toESM(require_react(), 1);
var __assign1128 = function() {
  __assign1128 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1128.apply(this, arguments);
};
function SvgSoilAlt(passedProps, svgRef) {
  var context = React1129.useContext(IconoirContext);
  var props = __assign1128(__assign1128({}, context), passedProps);
  return React1129.createElement(
    "svg",
    __assign1128({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1129.createElement("path", { d: "M2 12h4M17 12h5M3 20.01l.01-.011M6 16.01l.01-.011M9 20.01l.01-.011M12 16.01l.01-.011M15 20.01l.01-.011M18 16.01l.01-.011M21 20.01l.01-.011M9 13s.9-3.741 3-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1129.createElement("path", { d: "M16.186 2.241l.374 3.89c.243 2.523-1.649 4.77-4.172 5.012-2.475.238-4.718-1.571-4.956-4.047a4.503 4.503 0 014.05-4.914l4.147-.4a.51.51 0 01.557.46z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1128 = React1129.forwardRef(SvgSoilAlt);
var SoilAlt_default = ForwardRef1128;

// node_modules/iconoir-react/dist/esm/Soil.mjs
var React1130 = __toESM(require_react(), 1);
var __assign1129 = function() {
  __assign1129 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1129.apply(this, arguments);
};
function SvgSoil(passedProps, svgRef) {
  var context = React1130.useContext(IconoirContext);
  var props = __assign1129(__assign1129({}, context), passedProps);
  return React1130.createElement(
    "svg",
    __assign1129({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1130.createElement("path", { d: "M2 4h20M3 8.01l.01-.011M3 16.01l.01-.011M6 12.01l.01-.011M6 20.01l.01-.011M9 8.01l.01-.011M9 16.01l.01-.011M12 12.01l.01-.011M12 20.01l.01-.011M15 8.01l.01-.011M15 16.01l.01-.011M18 12.01l.01-.011M18 20.01l.01-.011M21 8.01l.01-.011M21 16.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1129 = React1130.forwardRef(SvgSoil);
var Soil_default = ForwardRef1129;

// node_modules/iconoir-react/dist/esm/SortDown.mjs
var React1131 = __toESM(require_react(), 1);
var __assign1130 = function() {
  __assign1130 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1130.apply(this, arguments);
};
function SvgSortDown(passedProps, svgRef) {
  var context = React1131.useContext(IconoirContext);
  var props = __assign1130(__assign1130({}, context), passedProps);
  return React1131.createElement(
    "svg",
    __assign1130({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1131.createElement("path", { d: "M14 10H2M10 14H2M6 18H2M18 6H2M19 10v10m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1130 = React1131.forwardRef(SvgSortDown);
var SortDown_default = ForwardRef1130;

// node_modules/iconoir-react/dist/esm/SortUp.mjs
var React1132 = __toESM(require_react(), 1);
var __assign1131 = function() {
  __assign1131 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1131.apply(this, arguments);
};
function SvgSortUp(passedProps, svgRef) {
  var context = React1132.useContext(IconoirContext);
  var props = __assign1131(__assign1131({}, context), passedProps);
  return React1132.createElement(
    "svg",
    __assign1131({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1132.createElement("path", { d: "M14 14H2M10 10H2M6 6H2M18 18H2M19 14V4m0 0l3 3m-3-3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1131 = React1132.forwardRef(SvgSortUp);
var SortUp_default = ForwardRef1131;

// node_modules/iconoir-react/dist/esm/Sort.mjs
var React1133 = __toESM(require_react(), 1);
var __assign1132 = function() {
  __assign1132 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1132.apply(this, arguments);
};
function SvgSort(passedProps, svgRef) {
  var context = React1133.useContext(IconoirContext);
  var props = __assign1132(__assign1132({}, context), passedProps);
  return React1133.createElement(
    "svg",
    __assign1132({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1133.createElement("path", { d: "M10 14H2M8 10H2M6 6H2M12 18H2M19 20V4m0 16l3-3m-3 3l-3-3m3-13l3 3m-3-3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1132 = React1133.forwardRef(SvgSort);
var Sort_default = ForwardRef1132;

// node_modules/iconoir-react/dist/esm/SoundHigh.mjs
var React1134 = __toESM(require_react(), 1);
var __assign1133 = function() {
  __assign1133 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1133.apply(this, arguments);
};
function SvgSoundHigh(passedProps, svgRef) {
  var context = React1134.useContext(IconoirContext);
  var props = __assign1133(__assign1133({}, context), passedProps);
  return React1134.createElement(
    "svg",
    __assign1133({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1134.createElement("path", { d: "M1 13.857v-3.714a2 2 0 012-2h2.9a1 1 0 00.55-.165l6-3.956a1 1 0 011.55.835v14.286a1 1 0 01-1.55.835l-6-3.956a1 1 0 00-.55-.165H3a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1134.createElement("path", { d: "M17.5 7.5S19 9 19 11.5s-1.5 4-1.5 4M20.5 4.5S23 7 23 11.5s-2.5 7-2.5 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1133 = React1134.forwardRef(SvgSoundHigh);
var SoundHigh_default = ForwardRef1133;

// node_modules/iconoir-react/dist/esm/SoundLow.mjs
var React1135 = __toESM(require_react(), 1);
var __assign1134 = function() {
  __assign1134 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1134.apply(this, arguments);
};
function SvgSoundLow(passedProps, svgRef) {
  var context = React1135.useContext(IconoirContext);
  var props = __assign1134(__assign1134({}, context), passedProps);
  return React1135.createElement(
    "svg",
    __assign1134({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1135.createElement("path", { d: "M19.5 7.5S21 9 21 11.5s-1.5 4-1.5 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1135.createElement("path", { d: "M2 13.857v-3.714a2 2 0 012-2h2.9a1 1 0 00.55-.165l6-3.956a1 1 0 011.55.835v14.286a1 1 0 01-1.55.835l-6-3.956a1 1 0 00-.55-.165H4a2 2 0 01-2-2z", stroke: "currentColor" })
  );
}
var ForwardRef1134 = React1135.forwardRef(SvgSoundLow);
var SoundLow_default = ForwardRef1134;

// node_modules/iconoir-react/dist/esm/SoundMin.mjs
var React1136 = __toESM(require_react(), 1);
var __assign1135 = function() {
  __assign1135 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1135.apply(this, arguments);
};
function SvgSoundMin(passedProps, svgRef) {
  var context = React1136.useContext(IconoirContext);
  var props = __assign1135(__assign1135({}, context), passedProps);
  return React1136.createElement(
    "svg",
    __assign1135({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1136.createElement("path", { d: "M3.5 13.857v-3.714a2 2 0 012-2h2.9a1 1 0 00.55-.165l6-3.956a1 1 0 011.55.835v14.286a1 1 0 01-1.55.835l-6-3.956a1 1 0 00-.55-.165H5.5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1136.createElement("path", { d: "M20.5 15V9", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1135 = React1136.forwardRef(SvgSoundMin);
var SoundMin_default = ForwardRef1135;

// node_modules/iconoir-react/dist/esm/SoundOff.mjs
var React1137 = __toESM(require_react(), 1);
var __assign1136 = function() {
  __assign1136 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1136.apply(this, arguments);
};
function SvgSoundOff(passedProps, svgRef) {
  var context = React1137.useContext(IconoirContext);
  var props = __assign1136(__assign1136({}, context), passedProps);
  return React1137.createElement(
    "svg",
    __assign1136({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1137.createElement(
      "g",
      { clipPath: "url(#sound-off_svg__clip0_3173_16686)", stroke: "currentColor" },
      React1137.createElement("path", { d: "M18 14l2-2m2-2l-2 2m0 0l-2-2m2 2l2 2", strokeLinecap: "round", strokeLinejoin: "round" }),
      React1137.createElement("path", { d: "M2 13.857v-3.714a2 2 0 012-2h2.9a1 1 0 00.55-.165l6-3.956a1 1 0 011.55.835v14.286a1 1 0 01-1.55.835l-6-3.956a1 1 0 00-.55-.165H4a2 2 0 01-2-2z" })
    ),
    React1137.createElement(
      "defs",
      null,
      React1137.createElement(
        "clipPath",
        { id: "sound-off_svg__clip0_3173_16686" },
        React1137.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1136 = React1137.forwardRef(SvgSoundOff);
var SoundOff_default = ForwardRef1136;

// node_modules/iconoir-react/dist/esm/Spades.mjs
var React1138 = __toESM(require_react(), 1);
var __assign1137 = function() {
  __assign1137 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1137.apply(this, arguments);
};
function SvgSpades(passedProps, svgRef) {
  var context = React1138.useContext(IconoirContext);
  var props = __assign1137(__assign1137({}, context), passedProps);
  return React1138.createElement(
    "svg",
    __assign1137({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1138.createElement("path", { d: "M12 14.5c3 4.5 9 4.47 9-.5 0-4-4-7-9-12-5 5-9 8-9 12 0 4.97 6 5 9 .5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1138.createElement("path", { d: "M11.47 15.493l-3 5.625A.6.6 0 009 22h6a.6.6 0 00.53-.882l-3-5.625a.6.6 0 00-1.06 0z", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1137 = React1138.forwardRef(SvgSpades);
var Spades_default = ForwardRef1137;

// node_modules/iconoir-react/dist/esm/Sphere.mjs
var React1139 = __toESM(require_react(), 1);
var __assign1138 = function() {
  __assign1138 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1138.apply(this, arguments);
};
function SvgSphere(passedProps, svgRef) {
  var context = React1139.useContext(IconoirContext);
  var props = __assign1138(__assign1138({}, context), passedProps);
  return React1139.createElement(
    "svg",
    __assign1138({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1139.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1139.createElement("path", { d: "M12 22c-3.314 0-6-4.477-6-10S8.686 2 12 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1138 = React1139.forwardRef(SvgSphere);
var Sphere_default = ForwardRef1138;

// node_modules/iconoir-react/dist/esm/Spiral.mjs
var React1140 = __toESM(require_react(), 1);
var __assign1139 = function() {
  __assign1139 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1139.apply(this, arguments);
};
function SvgSpiral(passedProps, svgRef) {
  var context = React1140.useContext(IconoirContext);
  var props = __assign1139(__assign1139({}, context), passedProps);
  return React1140.createElement(
    "svg",
    __assign1139({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1140.createElement("path", { d: "M3.5 6.004C3.5 7.808 6.357 9 11.5 9c7 0 8-2.996 8-2.996S18.5 3 11.5 3c-5.143 0-8 1.2-8 3.004zM3.5 12.004c0 1.804 2.857 2.996 8 2.996 7 0 8-2.996 8-2.996S18.5 9 11.5 9c-5.143 0-8 1.2-8 3.004zM3.5 18.004c0 1.804 2.857 2.996 8 2.996 7 0 8-2.996 8-2.996S18.5 15 11.5 15c-5.143 0-8 1.2-8 3.004zM19.5 12s1-.975 1-3-1-3-1-3M20.5 4c0 1.35-1 2-1 2M19.5 18s1-.975 1-3-1-3-1-3M20.5 20c0-1.35-1-2-1-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1139 = React1140.forwardRef(SvgSpiral);
var Spiral_default = ForwardRef1139;

// node_modules/iconoir-react/dist/esm/SpockHandGesture.mjs
var React1141 = __toESM(require_react(), 1);
var __assign1140 = function() {
  __assign1140 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1140.apply(this, arguments);
};
function SvgSpockHandGesture(passedProps, svgRef) {
  var context = React1141.useContext(IconoirContext);
  var props = __assign1140(__assign1140({}, context), passedProps);
  return React1141.createElement(
    "svg",
    __assign1140({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1141.createElement("path", { d: "M18 7.5l.919.153a2 2 0 011.623 2.407l-.528 2.376a.602.602 0 00-.014.13V17.5s0 0 0 0c0 2-1.6 4-4 4H9.42a2 2 0 01-1.519-.698l-4.548-5.307a1.582 1.582 0 01-.034-2.018v0a1.582 1.582 0 012.426-.054L8 16v-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1141.createElement("path", { d: "M9 5l-.79.132a2 2 0 00-1.595 2.522L8 12.5M11 12.5L8.923 4.606a1.514 1.514 0 011.215-1.879v0a1.514 1.514 0 011.713 1.108L14 12M17 12.5l1-5 .247-1.485a1.536 1.536 0 00-1.262-1.768v0a1.536 1.536 0 00-1.762 1.233L14 12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1140 = React1141.forwardRef(SvgSpockHandGesture);
var SpockHandGesture_default = ForwardRef1140;

// node_modules/iconoir-react/dist/esm/Spotify.mjs
var React1142 = __toESM(require_react(), 1);
var __assign1141 = function() {
  __assign1141 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1141.apply(this, arguments);
};
function SvgSpotify(passedProps, svgRef) {
  var context = React1142.useContext(IconoirContext);
  var props = __assign1141(__assign1141({}, context), passedProps);
  return React1142.createElement(
    "svg",
    __assign1141({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1142.createElement("path", { d: "M7 15s4.5-1 9 1M6.5 12s6-1.5 11 1.5M6 9c3-.5 8-1 13 2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1142.createElement("path", { d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1141 = React1142.forwardRef(SvgSpotify);
var Spotify_default = ForwardRef1141;

// node_modules/iconoir-react/dist/esm/SquareWave.mjs
var React1143 = __toESM(require_react(), 1);
var __assign1142 = function() {
  __assign1142 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1142.apply(this, arguments);
};
function SvgSquareWave(passedProps, svgRef) {
  var context = React1143.useContext(IconoirContext);
  var props = __assign1142(__assign1142({}, context), passedProps);
  return React1143.createElement(
    "svg",
    __assign1142({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1143.createElement("path", { d: "M3 12h3V4h6v16h6v-8h3M14.5 12h1M8.5 12h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1142 = React1143.forwardRef(SvgSquareWave);
var SquareWave_default = ForwardRef1142;

// node_modules/iconoir-react/dist/esm/Square.mjs
var React1144 = __toESM(require_react(), 1);
var __assign1143 = function() {
  __assign1143 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1143.apply(this, arguments);
};
function SvgSquare(passedProps, svgRef) {
  var context = React1144.useContext(IconoirContext);
  var props = __assign1143(__assign1143({}, context), passedProps);
  return React1144.createElement(
    "svg",
    __assign1143({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1144.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1143 = React1144.forwardRef(SvgSquare);
var Square_default = ForwardRef1143;

// node_modules/iconoir-react/dist/esm/Stackoverflow.mjs
var React1145 = __toESM(require_react(), 1);
var __assign1144 = function() {
  __assign1144 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1144.apply(this, arguments);
};
function SvgStackoverflow(passedProps, svgRef) {
  var context = React1145.useContext(IconoirContext);
  var props = __assign1144(__assign1144({}, context), passedProps);
  return React1145.createElement(
    "svg",
    __assign1144({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1145.createElement("path", { d: "M19 15v6H5v-6M16 17H8M15.913 14.663L8.087 13M16.713 12.38L9.463 9M18.173 10.642L12.044 5.5M20.034 8.804L15.109 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1144 = React1145.forwardRef(SvgStackoverflow);
var Stackoverflow_default = ForwardRef1144;

// node_modules/iconoir-react/dist/esm/StarDashed.mjs
var React1146 = __toESM(require_react(), 1);
var __assign1145 = function() {
  __assign1145 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1145.apply(this, arguments);
};
function SvgStarDashed(passedProps, svgRef) {
  var context = React1146.useContext(IconoirContext);
  var props = __assign1145(__assign1145({}, context), passedProps);
  return React1146.createElement(
    "svg",
    __assign1145({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1146.createElement("path", { d: "M13.806 5l-.99-1.996a.911.911 0 00-1.631 0l-.496.998M15.011 7.427l.402.809 1.452.211M19.77 8.87l1.451.21a.902.902 0 01.503 1.542l-1.05 1.017M18.572 13.674l-1.05 1.018.248 1.437M18.266 19.004l.248 1.437c.127.739-.653 1.302-1.32.953l-1.298-.679M10.428 19.5L12 18.678l1.299.679M5.671 19.369l-.185 1.072c-.127.739.653 1.302 1.32.953l.847-.443M6.253 16l.225-1.308-.695-.673M3.699 12l-1.423-1.378a.902.902 0 01.503-1.542l1.11-.161M7 8.467l1.587-.231.804-1.618", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1145 = React1146.forwardRef(SvgStarDashed);
var StarDashed_default = ForwardRef1145;

// node_modules/iconoir-react/dist/esm/StarHalfDashed.mjs
var React1147 = __toESM(require_react(), 1);
var __assign1146 = function() {
  __assign1146 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1146.apply(this, arguments);
};
function SvgStarHalfDashed(passedProps, svgRef) {
  var context = React1147.useContext(IconoirContext);
  var props = __assign1146(__assign1146({}, context), passedProps);
  return React1147.createElement(
    "svg",
    __assign1146({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1147.createElement("path", { d: "M12.815 3.004a.911.911 0 00-1.63 0l-.496.998M12 18.678l-1.572.822M5.671 19.369l-.185 1.072c-.127.739.653 1.302 1.32.953l.847-.443M6.253 16l.225-1.308-.695-.673M3.699 12l-1.423-1.378a.902.902 0 01.503-1.542l1.11-.161M7 8.467l1.587-.231.804-1.618", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1147.createElement("path", { d: "M15.413 8.236l-2.598-5.232A.899.899 0 0012 2.5v16.178l5.195 2.716c.666.349 1.446-.214 1.319-.953l-.992-5.75 4.202-4.07a.902.902 0 00-.503-1.54l-5.808-.845z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1146 = React1147.forwardRef(SvgStarHalfDashed);
var StarHalfDashed_default = ForwardRef1146;

// node_modules/iconoir-react/dist/esm/Star.mjs
var React1148 = __toESM(require_react(), 1);
var __assign1147 = function() {
  __assign1147 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1147.apply(this, arguments);
};
function SvgStar(passedProps, svgRef) {
  var context = React1148.useContext(IconoirContext);
  var props = __assign1147(__assign1147({}, context), passedProps);
  return React1148.createElement(
    "svg",
    __assign1147({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1148.createElement("path", { d: "M8.587 8.236l2.598-5.232a.911.911 0 011.63 0l2.598 5.232 5.808.844a.902.902 0 01.503 1.542l-4.202 4.07.992 5.75c.127.738-.653 1.3-1.32.952L12 18.678l-5.195 2.716c-.666.349-1.446-.214-1.319-.953l.992-5.75-4.202-4.07a.902.902 0 01.503-1.54l5.808-.845z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1147 = React1148.forwardRef(SvgStar);
var Star_default = ForwardRef1147;

// node_modules/iconoir-react/dist/esm/StatDown.mjs
var React1149 = __toESM(require_react(), 1);
var __assign1148 = function() {
  __assign1148 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1148.apply(this, arguments);
};
function SvgStatDown(passedProps, svgRef) {
  var context = React1149.useContext(IconoirContext);
  var props = __assign1148(__assign1148({}, context), passedProps);
  return React1149.createElement(
    "svg",
    __assign1148({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1149.createElement("path", { d: "M4 10l8 8 3-3 5 5M16 4v8m0 0l3-3m-3 3l-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1148 = React1149.forwardRef(SvgStatDown);
var StatDown_default = ForwardRef1148;

// node_modules/iconoir-react/dist/esm/StatUp.mjs
var React1150 = __toESM(require_react(), 1);
var __assign1149 = function() {
  __assign1149 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1149.apply(this, arguments);
};
function SvgStatUp(passedProps, svgRef) {
  var context = React1150.useContext(IconoirContext);
  var props = __assign1149(__assign1149({}, context), passedProps);
  return React1150.createElement(
    "svg",
    __assign1149({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1150.createElement("path", { d: "M16 20v-8m0 0l3 3m-3-3l-3 3M4 14l8-8 3 3 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1149 = React1150.forwardRef(SvgStatUp);
var StatUp_default = ForwardRef1149;

// node_modules/iconoir-react/dist/esm/StatsDownSquare.mjs
var React1151 = __toESM(require_react(), 1);
var __assign1150 = function() {
  __assign1150 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1150.apply(this, arguments);
};
function SvgStatsDownSquare(passedProps, svgRef) {
  var context = React1151.useContext(IconoirContext);
  var props = __assign1150(__assign1150({}, context), passedProps);
  return React1151.createElement(
    "svg",
    __assign1150({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1151.createElement("path", { d: "M8 16V8M12 16v-5M16 16v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1151.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1150 = React1151.forwardRef(SvgStatsDownSquare);
var StatsDownSquare_default = ForwardRef1150;

// node_modules/iconoir-react/dist/esm/StatsReport.mjs
var React1152 = __toESM(require_react(), 1);
var __assign1151 = function() {
  __assign1151 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1151.apply(this, arguments);
};
function SvgStatsReport(passedProps, svgRef) {
  var context = React1152.useContext(IconoirContext);
  var props = __assign1151(__assign1151({}, context), passedProps);
  return React1152.createElement(
    "svg",
    __assign1151({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1152.createElement("path", { d: "M10 9H6M15.5 11a2.5 2.5 0 110-5 2.5 2.5 0 010 5zM6 6h3M18 18l-4.5-3-2.5 2-5-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1152.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1151 = React1152.forwardRef(SvgStatsReport);
var StatsReport_default = ForwardRef1151;

// node_modules/iconoir-react/dist/esm/StatsUpSquare.mjs
var React1153 = __toESM(require_react(), 1);
var __assign1152 = function() {
  __assign1152 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1152.apply(this, arguments);
};
function SvgStatsUpSquare(passedProps, svgRef) {
  var context = React1153.useContext(IconoirContext);
  var props = __assign1152(__assign1152({}, context), passedProps);
  return React1153.createElement(
    "svg",
    __assign1152({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1153.createElement("path", { d: "M16 16V8M12 16v-5M8 16v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1153.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1152 = React1153.forwardRef(SvgStatsUpSquare);
var StatsUpSquare_default = ForwardRef1152;

// node_modules/iconoir-react/dist/esm/Strategy.mjs
var React1154 = __toESM(require_react(), 1);
var __assign1153 = function() {
  __assign1153 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1153.apply(this, arguments);
};
function SvgStrategy(passedProps, svgRef) {
  var context = React1154.useContext(IconoirContext);
  var props = __assign1153(__assign1153({}, context), passedProps);
  return React1154.createElement(
    "svg",
    __assign1153({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1154.createElement("path", { d: "M6 20.5C7 11 11.5 8 20 6M15.909 3.81L20.395 5.9l-2.092 4.486M5 7a2 2 0 100-4 2 2 0 000 4zM16 20.243l2.121-2.122m0 0L20.243 16m-2.122 2.121L16 16m2.121 2.121l2.122 2.122", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1153 = React1154.forwardRef(SvgStrategy);
var Strategy_default = ForwardRef1153;

// node_modules/iconoir-react/dist/esm/Stretching.mjs
var React1155 = __toESM(require_react(), 1);
var __assign1154 = function() {
  __assign1154 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1154.apply(this, arguments);
};
function SvgStretching(passedProps, svgRef) {
  var context = React1155.useContext(IconoirContext);
  var props = __assign1154(__assign1154({}, context), passedProps);
  return React1155.createElement(
    "svg",
    __assign1154({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1155.createElement("path", { d: "M16 7a2 2 0 100-4 2 2 0 000 4zM5 20l4.91-.524 2.726-5.238L13.727 9l-4.909 1.048 1.636 2.095M14.818 15.286H17V20", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1154 = React1155.forwardRef(SvgStretching);
var Stretching_default = ForwardRef1154;

// node_modules/iconoir-react/dist/esm/Strikethrough.mjs
var React1156 = __toESM(require_react(), 1);
var __assign1155 = function() {
  __assign1155 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1155.apply(this, arguments);
};
function SvgStrikethrough(passedProps, svgRef) {
  var context = React1156.useContext(IconoirContext);
  var props = __assign1155(__assign1155({}, context), passedProps);
  return React1156.createElement(
    "svg",
    __assign1155({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1156.createElement("path", { d: "M3 12h18M16.286 3h-6.218a4.068 4.068 0 00-1.286 7.927L12 12m-6 9h7.932a4.068 4.068 0 003.58-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1155 = React1156.forwardRef(SvgStrikethrough);
var Strikethrough_default = ForwardRef1155;

// node_modules/iconoir-react/dist/esm/Stroller.mjs
var React1157 = __toESM(require_react(), 1);
var __assign1156 = function() {
  __assign1156 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1156.apply(this, arguments);
};
function SvgStroller(passedProps, svgRef) {
  var context = React1157.useContext(IconoirContext);
  var props = __assign1156(__assign1156({}, context), passedProps);
  return React1157.createElement(
    "svg",
    __assign1156({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1157.createElement(
      "g",
      { clipPath: "url(#stroller_svg__clip0)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React1157.createElement("path", { d: "M11.5 3a8.5 8.5 0 00-7.212 13M18.712 16A8.46 8.46 0 0020 11.5v-2h2.5M8 21a2 2 0 110-4 2 2 0 010 4zM15 21a2 2 0 110-4 2 2 0 010 4zM11.5 3v9M3.5 12h16" })
    ),
    React1157.createElement(
      "defs",
      null,
      React1157.createElement(
        "clipPath",
        { id: "stroller_svg__clip0" },
        React1157.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1156 = React1157.forwardRef(SvgStroller);
var Stroller_default = ForwardRef1156;

// node_modules/iconoir-react/dist/esm/StyleBorder.mjs
var React1158 = __toESM(require_react(), 1);
var __assign1157 = function() {
  __assign1157 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1157.apply(this, arguments);
};
function SvgStyleBorder(passedProps, svgRef) {
  var context = React1158.useContext(IconoirContext);
  var props = __assign1157(__assign1157({}, context), passedProps);
  return React1158.createElement(
    "svg",
    __assign1157({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1158.createElement("path", { d: "M16 2H8a6 6 0 00-6 6v8a6 6 0 006 6h8a6 6 0 006-6V8a6 6 0 00-6-6z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round", strokeDasharray: "2 2" }),
    React1158.createElement("path", { d: "M16 5H8a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V8a3 3 0 00-3-3z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1157 = React1158.forwardRef(SvgStyleBorder);
var StyleBorder_default = ForwardRef1157;

// node_modules/iconoir-react/dist/esm/SubmitDocument.mjs
var React1159 = __toESM(require_react(), 1);
var __assign1158 = function() {
  __assign1158 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1158.apply(this, arguments);
};
function SvgSubmitDocument(passedProps, svgRef) {
  var context = React1159.useContext(IconoirContext);
  var props = __assign1158(__assign1158({}, context), passedProps);
  return React1159.createElement(
    "svg",
    __assign1158({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1159.createElement("path", { d: "M20 13V5.749a.6.6 0 00-.176-.425l-3.148-3.148A.6.6 0 0016.252 2H4.6a.6.6 0 00-.6.6v18.8a.6.6 0 00.6.6H14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1159.createElement("path", { d: "M16 2v3.4a.6.6 0 00.6.6H20M16 19h6m0 0l-3-3m3 3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1158 = React1159.forwardRef(SvgSubmitDocument);
var SubmitDocument_default = ForwardRef1158;

// node_modules/iconoir-react/dist/esm/Substract.mjs
var React1160 = __toESM(require_react(), 1);
var __assign1159 = function() {
  __assign1159 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1159.apply(this, arguments);
};
function SvgSubstract(passedProps, svgRef) {
  var context = React1160.useContext(IconoirContext);
  var props = __assign1159(__assign1159({}, context), passedProps);
  return React1160.createElement(
    "svg",
    __assign1159({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1160.createElement("path", { d: "M15 3.6v10.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6zM13.5 21h3M21 13.5v3M21 19.5v.9a.6.6 0 01-.6.6h-.9M10.5 21h-.9a.6.6 0 01-.6-.6v-.9M19.5 9h.9a.6.6 0 01.6.6v.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1160.createElement("path", { d: "M16.5 9H9.6a.6.6 0 00-.6.6v6.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1159 = React1160.forwardRef(SvgSubstract);
var Substract_default = ForwardRef1159;

// node_modules/iconoir-react/dist/esm/Suggestion.mjs
var React1161 = __toESM(require_react(), 1);
var __assign1160 = function() {
  __assign1160 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1160.apply(this, arguments);
};
function SvgSuggestion(passedProps, svgRef) {
  var context = React1161.useContext(IconoirContext);
  var props = __assign1160(__assign1160({}, context), passedProps);
  return React1161.createElement(
    "svg",
    __assign1160({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1161.createElement("path", { d: "M3 3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v13.8a.6.6 0 01-.6.6h-4.14a.6.6 0 00-.438.189l-3.385 3.597a.6.6 0 01-.874 0l-3.385-3.597A.6.6 0 007.74 18H3.6a.6.6 0 01-.6-.6V3.6z", stroke: "currentColor" }),
    React1161.createElement("path", { d: "M12 7l1.425 2.575L16 11l-2.575 1.425L12 15l-1.425-2.575L8 11l2.575-1.425L12 7z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1160 = React1161.forwardRef(SvgSuggestion);
var Suggestion_default = ForwardRef1160;

// node_modules/iconoir-react/dist/esm/SunLight.mjs
var React1162 = __toESM(require_react(), 1);
var __assign1161 = function() {
  __assign1161 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1161.apply(this, arguments);
};
function SvgSunLight(passedProps, svgRef) {
  var context = React1162.useContext(IconoirContext);
  var props = __assign1161(__assign1161({}, context), passedProps);
  return React1162.createElement(
    "svg",
    __assign1161({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1162.createElement("path", { d: "M12 18a6 6 0 100-12 6 6 0 000 12zM22 12h1M12 2V1M12 23v-1M20 20l-1-1M20 4l-1 1M4 20l1-1M4 4l1 1M1 12h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1161 = React1162.forwardRef(SvgSunLight);
var SunLight_default = ForwardRef1161;

// node_modules/iconoir-react/dist/esm/SvgFormat.mjs
var React1163 = __toESM(require_react(), 1);
var __assign1162 = function() {
  __assign1162 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1162.apply(this, arguments);
};
function SvgSvgFormat(passedProps, svgRef) {
  var context = React1163.useContext(IconoirContext);
  var props = __assign1162(__assign1162({}, context), passedProps);
  return React1163.createElement(
    "svg",
    __assign1162({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1163.createElement("path", { d: "M4.5 15h2A1.5 1.5 0 008 13.5v0A1.5 1.5 0 006.5 12H6a1.5 1.5 0 01-1.5-1.5v0A1.5 1.5 0 016 9h1.5M10.5 9l1.5 6 1.5-6M19.5 9h-3v6h3v-2.4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1163.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1162 = React1163.forwardRef(SvgSvgFormat);
var SvgFormat_default = ForwardRef1162;

// node_modules/iconoir-react/dist/esm/Sweep3D.mjs
var React1164 = __toESM(require_react(), 1);
var __assign1163 = function() {
  __assign1163 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1163.apply(this, arguments);
};
function SvgSweep3D(passedProps, svgRef) {
  var context = React1164.useContext(IconoirContext);
  var props = __assign1163(__assign1163({}, context), passedProps);
  return React1164.createElement(
    "svg",
    __assign1163({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1164.createElement("path", { d: "M3 22l5.5-5.5M20 5l-2.5 2.5M7 21h8.5l-7-12-5.833 10M14.5 3l7 12M8.5 9l6-6M15.5 21l6-6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1163 = React1164.forwardRef(SvgSweep3D);
var Sweep3D_default = ForwardRef1163;

// node_modules/iconoir-react/dist/esm/Swimming.mjs
var React1165 = __toESM(require_react(), 1);
var __assign1164 = function() {
  __assign1164 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1164.apply(this, arguments);
};
function SvgSwimming(passedProps, svgRef) {
  var context = React1165.useContext(IconoirContext);
  var props = __assign1164(__assign1164({}, context), passedProps);
  return React1165.createElement(
    "svg",
    __assign1164({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1165.createElement("path", { d: "M3 15c2.483 0 4.345-3 4.345-3s1.862 3 4.345 3c2.482 0 4.965-3 4.965-3s2.483 3 4.345 3M3 20c2.483 0 4.345-3 4.345-3s1.862 3 4.345 3c2.482 0 4.965-3 4.965-3s2.483 3 4.345 3M5 10.5L9 8 7.813 6.516a1.262 1.262 0 01.228-1.797v0a1.261 1.261 0 011.726.202L14 10M16.5 8a2.5 2.5 0 100-5 2.5 2.5 0 000 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1164 = React1165.forwardRef(SvgSwimming);
var Swimming_default = ForwardRef1164;

// node_modules/iconoir-react/dist/esm/SwipeDownGesture.mjs
var React1166 = __toESM(require_react(), 1);
var __assign1165 = function() {
  __assign1165 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1165.apply(this, arguments);
};
function SvgSwipeDownGesture(passedProps, svgRef) {
  var context = React1166.useContext(IconoirContext);
  var props = __assign1165(__assign1165({}, context), passedProps);
  return React1166.createElement(
    "svg",
    __assign1165({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1166.createElement("path", { d: "M12 14a6 6 0 100-12 6 6 0 000 12zm0 0v8m0 0l-3-3m3 3l3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1165 = React1166.forwardRef(SvgSwipeDownGesture);
var SwipeDownGesture_default = ForwardRef1165;

// node_modules/iconoir-react/dist/esm/SwipeLeftGesture.mjs
var React1167 = __toESM(require_react(), 1);
var __assign1166 = function() {
  __assign1166 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1166.apply(this, arguments);
};
function SvgSwipeLeftGesture(passedProps, svgRef) {
  var context = React1167.useContext(IconoirContext);
  var props = __assign1166(__assign1166({}, context), passedProps);
  return React1167.createElement(
    "svg",
    __assign1166({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1167.createElement("path", { d: "M10 12a6 6 0 1012 0 6 6 0 00-12 0zm0 0H2m0 0l3-3m-3 3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1166 = React1167.forwardRef(SvgSwipeLeftGesture);
var SwipeLeftGesture_default = ForwardRef1166;

// node_modules/iconoir-react/dist/esm/SwipeRightGesture.mjs
var React1168 = __toESM(require_react(), 1);
var __assign1167 = function() {
  __assign1167 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1167.apply(this, arguments);
};
function SvgSwipeRightGesture(passedProps, svgRef) {
  var context = React1168.useContext(IconoirContext);
  var props = __assign1167(__assign1167({}, context), passedProps);
  return React1168.createElement(
    "svg",
    __assign1167({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1168.createElement("path", { d: "M14 12a6 6 0 11-12 0 6 6 0 0112 0zm0 0h8m0 0l-3-3m3 3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1167 = React1168.forwardRef(SvgSwipeRightGesture);
var SwipeRightGesture_default = ForwardRef1167;

// node_modules/iconoir-react/dist/esm/SwipeTwoFingersDownGesture.mjs
var React1169 = __toESM(require_react(), 1);
var __assign1168 = function() {
  __assign1168 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1168.apply(this, arguments);
};
function SvgSwipeTwoFingersDownGesture(passedProps, svgRef) {
  var context = React1169.useContext(IconoirContext);
  var props = __assign1168(__assign1168({}, context), passedProps);
  return React1169.createElement(
    "svg",
    __assign1168({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1169.createElement("path", { d: "M6.5 12a3.5 3.5 0 110-7 3.5 3.5 0 010 7zm0 0v7m0 0L9 16.6M6.5 19L4 16.6M17.5 12a3.5 3.5 0 110-7 3.5 3.5 0 010 7zm0 0v7m0 0l2.5-2.4M17.5 19L15 16.6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1168 = React1169.forwardRef(SvgSwipeTwoFingersDownGesture);
var SwipeTwoFingersDownGesture_default = ForwardRef1168;

// node_modules/iconoir-react/dist/esm/SwipeTwoFingersLeftGesture.mjs
var React1170 = __toESM(require_react(), 1);
var __assign1169 = function() {
  __assign1169 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1169.apply(this, arguments);
};
function SvgSwipeTwoFingersLeftGesture(passedProps, svgRef) {
  var context = React1170.useContext(IconoirContext);
  var props = __assign1169(__assign1169({}, context), passedProps);
  return React1170.createElement(
    "svg",
    __assign1169({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1170.createElement("path", { d: "M12 17.5a3.5 3.5 0 107 0 3.5 3.5 0 00-7 0zm0 0H5m0 0L7.4 15M5 17.5L7.4 20M12 6.5a3.5 3.5 0 107 0 3.5 3.5 0 00-7 0zm0 0H5m0 0L7.4 4M5 6.5L7.4 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1169 = React1170.forwardRef(SvgSwipeTwoFingersLeftGesture);
var SwipeTwoFingersLeftGesture_default = ForwardRef1169;

// node_modules/iconoir-react/dist/esm/SwipeTwoFingersRightGesture.mjs
var React1171 = __toESM(require_react(), 1);
var __assign1170 = function() {
  __assign1170 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1170.apply(this, arguments);
};
function SvgSwipeTwoFingersRightGesture(passedProps, svgRef) {
  var context = React1171.useContext(IconoirContext);
  var props = __assign1170(__assign1170({}, context), passedProps);
  return React1171.createElement(
    "svg",
    __assign1170({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1171.createElement("path", { d: "M12 17.5a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0zm0 0h7m0 0L16.6 15m2.4 2.5L16.6 20M12 6.5a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0zm0 0h7m0 0L16.6 4M19 6.5L16.6 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1170 = React1171.forwardRef(SvgSwipeTwoFingersRightGesture);
var SwipeTwoFingersRightGesture_default = ForwardRef1170;

// node_modules/iconoir-react/dist/esm/SwipeTwoFingersUpGesture.mjs
var React1172 = __toESM(require_react(), 1);
var __assign1171 = function() {
  __assign1171 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1171.apply(this, arguments);
};
function SvgSwipeTwoFingersUpGesture(passedProps, svgRef) {
  var context = React1172.useContext(IconoirContext);
  var props = __assign1171(__assign1171({}, context), passedProps);
  return React1172.createElement(
    "svg",
    __assign1171({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1172.createElement("path", { d: "M6.5 12a3.5 3.5 0 100 7 3.5 3.5 0 000-7zm0 0V5m0 0L9 7.4M6.5 5L4 7.4M17.5 12a3.5 3.5 0 100 7 3.5 3.5 0 000-7zm0 0V5m0 0L20 7.4M17.5 5L15 7.4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1171 = React1172.forwardRef(SvgSwipeTwoFingersUpGesture);
var SwipeTwoFingersUpGesture_default = ForwardRef1171;

// node_modules/iconoir-react/dist/esm/SwipeUpGesture.mjs
var React1173 = __toESM(require_react(), 1);
var __assign1172 = function() {
  __assign1172 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1172.apply(this, arguments);
};
function SvgSwipeUpGesture(passedProps, svgRef) {
  var context = React1173.useContext(IconoirContext);
  var props = __assign1172(__assign1172({}, context), passedProps);
  return React1173.createElement(
    "svg",
    __assign1172({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1173.createElement("path", { d: "M12 10a6 6 0 100 12 6 6 0 000-12zm0 0V2m0 0l3 3m-3-3L9 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1172 = React1173.forwardRef(SvgSwipeUpGesture);
var SwipeUpGesture_default = ForwardRef1172;

// node_modules/iconoir-react/dist/esm/SwitchOff.mjs
var React1174 = __toESM(require_react(), 1);
var __assign1173 = function() {
  __assign1173 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1173.apply(this, arguments);
};
function SvgSwitchOff(passedProps, svgRef) {
  var context = React1174.useContext(IconoirContext);
  var props = __assign1173(__assign1173({}, context), passedProps);
  return React1174.createElement(
    "svg",
    __assign1173({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1174.createElement("path", { d: "M7 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1174.createElement("path", { d: "M17 17H7A5 5 0 017 7h10a5 5 0 010 10z", stroke: "currentColor" })
  );
}
var ForwardRef1173 = React1174.forwardRef(SvgSwitchOff);
var SwitchOff_default = ForwardRef1173;

// node_modules/iconoir-react/dist/esm/SwitchOn.mjs
var React1175 = __toESM(require_react(), 1);
var __assign1174 = function() {
  __assign1174 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1174.apply(this, arguments);
};
function SvgSwitchOn(passedProps, svgRef) {
  var context = React1175.useContext(IconoirContext);
  var props = __assign1174(__assign1174({}, context), passedProps);
  return React1175.createElement(
    "svg",
    __assign1174({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1175.createElement("path", { d: "M17 13a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1175.createElement("path", { d: "M17 17H7A5 5 0 017 7h10a5 5 0 010 10z", stroke: "currentColor" })
  );
}
var ForwardRef1174 = React1175.forwardRef(SvgSwitchOn);
var SwitchOn_default = ForwardRef1174;

// node_modules/iconoir-react/dist/esm/SystemRestart.mjs
var React1176 = __toESM(require_react(), 1);
var __assign1175 = function() {
  __assign1175 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1175.apply(this, arguments);
};
function SvgSystemRestart(passedProps, svgRef) {
  var context = React1176.useContext(IconoirContext);
  var props = __assign1175(__assign1175({}, context), passedProps);
  return React1176.createElement(
    "svg",
    __assign1175({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1176.createElement("path", { d: "M12 2v4M12 18v4M22 12h-4M6 12H2M4.929 4.929l2.828 2.828M16.243 16.243l2.828 2.828M19.071 4.929l-2.828 2.828M7.757 16.243L4.93 19.07", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1175 = React1176.forwardRef(SvgSystemRestart);
var SystemRestart_default = ForwardRef1175;

// node_modules/iconoir-react/dist/esm/SystemShut.mjs
var React1177 = __toESM(require_react(), 1);
var __assign1176 = function() {
  __assign1176 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1176.apply(this, arguments);
};
function SvgSystemShut(passedProps, svgRef) {
  var context = React1177.useContext(IconoirContext);
  var props = __assign1176(__assign1176({}, context), passedProps);
  return React1177.createElement(
    "svg",
    __assign1176({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1177.createElement("path", { d: "M12 7v10M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1176 = React1177.forwardRef(SvgSystemShut);
var SystemShut_default = ForwardRef1176;

// node_modules/iconoir-react/dist/esm/TShirt.mjs
var React1178 = __toESM(require_react(), 1);
var __assign1177 = function() {
  __assign1177 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1177.apply(this, arguments);
};
function SvgTShirt(passedProps, svgRef) {
  var context = React1178.useContext(IconoirContext);
  var props = __assign1177(__assign1177({}, context), passedProps);
  return React1178.createElement(
    "svg",
    __assign1177({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1178.createElement("path", { d: "M6 4h3s0 3 3 3 3-3 3-3h3m0 7v8.4a.6.6 0 01-.6.6H6.6a.6.6 0 01-.6-.6V11M18 4l4.443 1.777a.6.6 0 01.334.78l-1.626 4.066a.6.6 0 01-.557.377H18M6 4L1.557 5.777a.6.6 0 00-.334.78l1.626 4.066a.6.6 0 00.557.377H6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1177 = React1178.forwardRef(SvgTShirt);
var TShirt_default = ForwardRef1177;

// node_modules/iconoir-react/dist/esm/Table2Columns.mjs
var React1179 = __toESM(require_react(), 1);
var __assign1178 = function() {
  __assign1178 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1178.apply(this, arguments);
};
function SvgTable2Columns(passedProps, svgRef) {
  var context = React1179.useContext(IconoirContext);
  var props = __assign1178(__assign1178({}, context), passedProps);
  return React1179.createElement(
    "svg",
    __assign1178({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1179.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6zM3 16.5h18M3 12h18M21 7.5H3M12 21V3", stroke: "currentColor" })
  );
}
var ForwardRef1178 = React1179.forwardRef(SvgTable2Columns);
var Table2Columns_default = ForwardRef1178;

// node_modules/iconoir-react/dist/esm/TableRows.mjs
var React1180 = __toESM(require_react(), 1);
var __assign1179 = function() {
  __assign1179 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1179.apply(this, arguments);
};
function SvgTableRows(passedProps, svgRef) {
  var context = React1180.useContext(IconoirContext);
  var props = __assign1179(__assign1179({}, context), passedProps);
  return React1180.createElement(
    "svg",
    __assign1179({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1180.createElement("path", { d: "M3 12h18M3 12v4.5M3 12V7.5M21 12v4.5m0-4.5V7.5m-18 9v3.9a.6.6 0 00.6.6h16.8a.6.6 0 00.6-.6v-3.9m-18 0h18m0-9V3.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6v3.9m18 0H3", stroke: "currentColor" })
  );
}
var ForwardRef1179 = React1180.forwardRef(SvgTableRows);
var TableRows_default = ForwardRef1179;

// node_modules/iconoir-react/dist/esm/Table.mjs
var React1181 = __toESM(require_react(), 1);
var __assign1180 = function() {
  __assign1180 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1180.apply(this, arguments);
};
function SvgTable(passedProps, svgRef) {
  var context = React1181.useContext(IconoirContext);
  var props = __assign1180(__assign1180({}, context), passedProps);
  return React1181.createElement(
    "svg",
    __assign1180({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1181.createElement("path", { d: "M21 3v18H3V3h18zM3 16.5h18M3 12h18M3 7.5h18M16.5 3v18M12 3v18M7.5 3v18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1180 = React1181.forwardRef(SvgTable);
var Table_default = ForwardRef1180;

// node_modules/iconoir-react/dist/esm/TaskList.mjs
var React1182 = __toESM(require_react(), 1);
var __assign1181 = function() {
  __assign1181 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1181.apply(this, arguments);
};
function SvgTaskList(passedProps, svgRef) {
  var context = React1182.useContext(IconoirContext);
  var props = __assign1181(__assign1181({}, context), passedProps);
  return React1182.createElement(
    "svg",
    __assign1181({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1182.createElement("path", { d: "M9 6h11M3.8 5.8l.8.8 2-2M3.8 11.8l.8.8 2-2M3.8 17.8l.8.8 2-2M9 12h11M9 18h11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1181 = React1182.forwardRef(SvgTaskList);
var TaskList_default = ForwardRef1181;

// node_modules/iconoir-react/dist/esm/TelegramCircle.mjs
var React1183 = __toESM(require_react(), 1);
var __assign1182 = function() {
  __assign1182 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1182.apply(this, arguments);
};
function SvgTelegramCircle(passedProps, svgRef) {
  var context = React1183.useContext(IconoirContext);
  var props = __assign1182(__assign1182({}, context), passedProps);
  return React1183.createElement(
    "svg",
    __assign1182({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1183.createElement("path", { d: "M18 8L5 12.5 9.5 14M18 8l-8.5 6M18 8l-4 10.5L9.5 14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1183.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1182 = React1183.forwardRef(SvgTelegramCircle);
var TelegramCircle_default = ForwardRef1182;

// node_modules/iconoir-react/dist/esm/Telegram.mjs
var React1184 = __toESM(require_react(), 1);
var __assign1183 = function() {
  __assign1183 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1183.apply(this, arguments);
};
function SvgTelegram(passedProps, svgRef) {
  var context = React1184.useContext(IconoirContext);
  var props = __assign1183(__assign1183({}, context), passedProps);
  return React1184.createElement(
    "svg",
    __assign1183({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1184.createElement("path", { d: "M21 5L2 12.5l7 1M21 5l-2.5 15L9 13.5M21 5L9 13.5m0 0V19l3.249-3.277", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1183 = React1184.forwardRef(SvgTelegram);
var Telegram_default = ForwardRef1183;

// node_modules/iconoir-react/dist/esm/TemperatureDown.mjs
var React1185 = __toESM(require_react(), 1);
var __assign1184 = function() {
  __assign1184 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1184.apply(this, arguments);
};
function SvgTemperatureDown(passedProps, svgRef) {
  var context = React1185.useContext(IconoirContext);
  var props = __assign1184(__assign1184({}, context), passedProps);
  return React1185.createElement(
    "svg",
    __assign1184({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1185.createElement("path", { d: "M5 12a5 5 0 106 0M5 12V3h6v9M11 3h2M11 6h2M11 9h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1185.createElement("path", { d: "M8 14a2 2 0 100 4 2 2 0 000-4zm0 0V6M19 6v12m0 0l2.5-2.5M19 18l-2.5-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1184 = React1185.forwardRef(SvgTemperatureDown);
var TemperatureDown_default = ForwardRef1184;

// node_modules/iconoir-react/dist/esm/TemperatureHigh.mjs
var React1186 = __toESM(require_react(), 1);
var __assign1185 = function() {
  __assign1185 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1185.apply(this, arguments);
};
function SvgTemperatureHigh(passedProps, svgRef) {
  var context = React1186.useContext(IconoirContext);
  var props = __assign1185(__assign1185({}, context), passedProps);
  return React1186.createElement(
    "svg",
    __assign1185({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1186.createElement("path", { d: "M6 12a5 5 0 106 0M6 12V3h6v9M12 3h2M12 6h2M12 9h2M19 7a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1186.createElement("path", { d: "M9 14a2 2 0 100 4 2 2 0 000-4zm0 0V6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1185 = React1186.forwardRef(SvgTemperatureHigh);
var TemperatureHigh_default = ForwardRef1185;

// node_modules/iconoir-react/dist/esm/TemperatureLow.mjs
var React1187 = __toESM(require_react(), 1);
var __assign1186 = function() {
  __assign1186 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1186.apply(this, arguments);
};
function SvgTemperatureLow(passedProps, svgRef) {
  var context = React1187.useContext(IconoirContext);
  var props = __assign1186(__assign1186({}, context), passedProps);
  return React1187.createElement(
    "svg",
    __assign1186({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1187.createElement("path", { d: "M6 12a5 5 0 106 0M6 12V3h6v9M12 3h2M12 6h2M12 9h2M19 7a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1187.createElement("path", { d: "M9 14a2 2 0 100 4 2 2 0 000-4zm0 0v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1186 = React1187.forwardRef(SvgTemperatureLow);
var TemperatureLow_default = ForwardRef1186;

// node_modules/iconoir-react/dist/esm/TemperatureUp.mjs
var React1188 = __toESM(require_react(), 1);
var __assign1187 = function() {
  __assign1187 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1187.apply(this, arguments);
};
function SvgTemperatureUp(passedProps, svgRef) {
  var context = React1188.useContext(IconoirContext);
  var props = __assign1187(__assign1187({}, context), passedProps);
  return React1188.createElement(
    "svg",
    __assign1187({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1188.createElement("path", { d: "M4 12a5 5 0 106 0M4 12V3h6v9M10 3h2M10 6h2M10 9h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1188.createElement("path", { d: "M7 14a2 2 0 100 4 2 2 0 000-4zm0 0V6M19 18V6m0 0l2.5 2.5M19 6l-2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1187 = React1188.forwardRef(SvgTemperatureUp);
var TemperatureUp_default = ForwardRef1187;

// node_modules/iconoir-react/dist/esm/TennisBallAlt.mjs
var React1189 = __toESM(require_react(), 1);
var __assign1188 = function() {
  __assign1188 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1188.apply(this, arguments);
};
function SvgTennisBallAlt(passedProps, svgRef) {
  var context = React1189.useContext(IconoirContext);
  var props = __assign1188(__assign1188({}, context), passedProps);
  return React1189.createElement(
    "svg",
    __assign1188({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1189.createElement("path", { d: "M20.66 7c2.762 4.783 1.123 10.899-3.66 13.66C12.217 23.422 6.101 21.783 3.34 17 .578 12.217 2.217 6.1 7 3.34 11.783.578 17.899 2.217 20.66 7zM21.46 15.242c-4.986-3.303-7.582-7.8-7.538-13.056M10.078 21.814C9.71 15.844 7.114 11.347 2.54 8.758", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1188 = React1189.forwardRef(SvgTennisBallAlt);
var TennisBallAlt_default = ForwardRef1188;

// node_modules/iconoir-react/dist/esm/TennisBall.mjs
var React1190 = __toESM(require_react(), 1);
var __assign1189 = function() {
  __assign1189 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1189.apply(this, arguments);
};
function SvgTennisBall(passedProps, svgRef) {
  var context = React1190.useContext(IconoirContext);
  var props = __assign1189(__assign1189({}, context), passedProps);
  return React1190.createElement(
    "svg",
    __assign1189({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1190.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM18.572 4.462c-2.667 4.53-2.667 9.723 0 15.076M5.428 4.462c2.667 4.53 2.667 9.723 0 15.076", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1189 = React1190.forwardRef(SvgTennisBall);
var TennisBall_default = ForwardRef1189;

// node_modules/iconoir-react/dist/esm/TerminalTag.mjs
var React1191 = __toESM(require_react(), 1);
var __assign1190 = function() {
  __assign1190 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1190.apply(this, arguments);
};
function SvgTerminalTag(passedProps, svgRef) {
  var context = React1191.useContext(IconoirContext);
  var props = __assign1190(__assign1190({}, context), passedProps);
  return React1191.createElement(
    "svg",
    __assign1190({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1191.createElement("path", { d: "M13 16h5M6 8l4 4-4 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1191.createElement("path", { d: "M2 18V6a2 2 0 012-2h16a2 2 0 012 2v12a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1190 = React1191.forwardRef(SvgTerminalTag);
var TerminalTag_default = ForwardRef1190;

// node_modules/iconoir-react/dist/esm/Terminal.mjs
var React1192 = __toESM(require_react(), 1);
var __assign1191 = function() {
  __assign1191 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1191.apply(this, arguments);
};
function SvgTerminal(passedProps, svgRef) {
  var context = React1192.useContext(IconoirContext);
  var props = __assign1191(__assign1191({}, context), passedProps);
  return React1192.createElement(
    "svg",
    __assign1191({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1192.createElement("path", { d: "M13 17h7M5 7l5 5-5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1191 = React1192.forwardRef(SvgTerminal);
var Terminal_default = ForwardRef1191;

// node_modules/iconoir-react/dist/esm/TestTube.mjs
var React1193 = __toESM(require_react(), 1);
var __assign1192 = function() {
  __assign1192 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1192.apply(this, arguments);
};
function SvgTestTube(passedProps, svgRef) {
  var context = React1193.useContext(IconoirContext);
  var props = __assign1192(__assign1192({}, context), passedProps);
  return React1193.createElement(
    "svg",
    __assign1192({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1193.createElement("path", { d: "M6.141 19.995c2.458 1.72 4.281-.012 5.318-1.492l7.3-10.426 1.966-1.065-6.553-4.588-8.447 12.064c-1.037 1.48-2.041 3.786.416 5.507zM16.091 11.02c-2.876-.853-4.403.781-7.28-.071", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1192 = React1193.forwardRef(SvgTestTube);
var TestTube_default = ForwardRef1192;

// node_modules/iconoir-react/dist/esm/TextAlt.mjs
var React1194 = __toESM(require_react(), 1);
var __assign1193 = function() {
  __assign1193 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1193.apply(this, arguments);
};
function SvgTextAlt(passedProps, svgRef) {
  var context = React1194.useContext(IconoirContext);
  var props = __assign1193(__assign1193({}, context), passedProps);
  return React1194.createElement(
    "svg",
    __assign1193({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1194.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1194.createElement("path", { d: "M7 9V7h10v2M12 7v10m0 0h-2m2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1193 = React1194.forwardRef(SvgTextAlt);
var TextAlt_default = ForwardRef1193;

// node_modules/iconoir-react/dist/esm/TextBox.mjs
var React1195 = __toESM(require_react(), 1);
var __assign1194 = function() {
  __assign1194 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1194.apply(this, arguments);
};
function SvgTextBox(passedProps, svgRef) {
  var context = React1195.useContext(IconoirContext);
  var props = __assign1194(__assign1194({}, context), passedProps);
  return React1195.createElement(
    "svg",
    __assign1194({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1195.createElement("path", { d: "M12 8v8m0-8H8m4 0h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1195.createElement("path", { d: "M21 13.5V19a2 2 0 01-2 2H5a2 2 0 01-2-2v-5.5m18-3V5a2 2 0 00-2-2H5a2 2 0 00-2 2v5.5M19.5 13.5v-3h3v3h-3zM1.5 13.5v-3h3v3h-3z", stroke: "currentColor", strokeLinejoin: "round" })
  );
}
var ForwardRef1194 = React1195.forwardRef(SvgTextBox);
var TextBox_default = ForwardRef1194;

// node_modules/iconoir-react/dist/esm/TextSize.mjs
var React1196 = __toESM(require_react(), 1);
var __assign1195 = function() {
  __assign1195 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1195.apply(this, arguments);
};
function SvgTextSize(passedProps, svgRef) {
  var context = React1196.useContext(IconoirContext);
  var props = __assign1195(__assign1195({}, context), passedProps);
  return React1196.createElement(
    "svg",
    __assign1195({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1196.createElement("path", { d: "M3 7V5h14v2M10 5v14m0 0h2m-2 0H8M13 14v-2h8v2M17 12v7m0 0h-1.5m1.5 0h1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1195 = React1196.forwardRef(SvgTextSize);
var TextSize_default = ForwardRef1195;

// node_modules/iconoir-react/dist/esm/Text.mjs
var React1197 = __toESM(require_react(), 1);
var __assign1196 = function() {
  __assign1196 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1196.apply(this, arguments);
};
function SvgText(passedProps, svgRef) {
  var context = React1197.useContext(IconoirContext);
  var props = __assign1196(__assign1196({}, context), passedProps);
  return React1197.createElement(
    "svg",
    __assign1196({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1197.createElement("path", { d: "M19 7V5H5v2M12 5v14m0 0h-2m2 0h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1196 = React1197.forwardRef(SvgText);
var Text_default = ForwardRef1196;

// node_modules/iconoir-react/dist/esm/ThreePointsCircle.mjs
var React1198 = __toESM(require_react(), 1);
var __assign1197 = function() {
  __assign1197 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1197.apply(this, arguments);
};
function SvgThreePointsCircle(passedProps, svgRef) {
  var context = React1198.useContext(IconoirContext);
  var props = __assign1197(__assign1197({}, context), passedProps);
  return React1198.createElement(
    "svg",
    __assign1197({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1198.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1198.createElement("path", { d: "M5 6a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1198.createElement("path", { d: "M5 10.5V9M5 15v-1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1198.createElement("path", { d: "M5 20a1 1 0 100-2 1 1 0 000 2zM19 20a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1198.createElement("path", { d: "M10.5 19H9M15 19h-1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1197 = React1198.forwardRef(SvgThreePointsCircle);
var ThreePointsCircle_default = ForwardRef1197;

// node_modules/iconoir-react/dist/esm/ThreeStars.mjs
var React1199 = __toESM(require_react(), 1);
var __assign1198 = function() {
  __assign1198 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1198.apply(this, arguments);
};
function SvgThreeStars(passedProps, svgRef) {
  var context = React1199.useContext(IconoirContext);
  var props = __assign1198(__assign1198({}, context), passedProps);
  return React1199.createElement(
    "svg",
    __assign1198({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1199.createElement("path", { d: "M4.635 14.415l1.039-2.203a.357.357 0 01.652 0l1.04 2.203 2.323.356c.298.045.416.429.2.649l-1.68 1.713.396 2.421c.051.311-.26.548-.527.401L6 18.812l-2.078 1.143c-.267.147-.578-.09-.527-.4l.396-2.422-1.68-1.713c-.217-.22-.098-.604.2-.65l2.324-.355zM16.635 14.415l1.039-2.203a.357.357 0 01.652 0l1.04 2.203 2.323.356c.298.045.416.429.2.649l-1.68 1.713.396 2.421c.051.311-.26.548-.527.401L18 18.812l-2.078 1.143c-.267.147-.578-.09-.527-.4l.396-2.422-1.68-1.713c-.216-.22-.098-.604.2-.65l2.324-.355zM10.635 5.415l1.039-2.203a.357.357 0 01.652 0l1.04 2.203 2.323.356c.298.045.416.429.2.649l-1.68 1.713.396 2.421c.051.311-.26.548-.527.401L12 9.812l-2.078 1.143c-.267.147-.578-.09-.527-.4l.396-2.422-1.68-1.713c-.217-.22-.098-.604.2-.65l2.324-.355z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1198 = React1199.forwardRef(SvgThreeStars);
var ThreeStars_default = ForwardRef1198;

// node_modules/iconoir-react/dist/esm/ThumbsDown.mjs
var React1200 = __toESM(require_react(), 1);
var __assign1199 = function() {
  __assign1199 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1199.apply(this, arguments);
};
function SvgThumbsDown(passedProps, svgRef) {
  var context = React1200.useContext(IconoirContext);
  var props = __assign1199(__assign1199({}, context), passedProps);
  return React1200.createElement(
    "svg",
    __assign1199({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1200.createElement("path", { d: "M16.472 3.5H4.1a.6.6 0 00-.6.6v9.8a.6.6 0 00.6.6h2.768a2 2 0 011.715.971l2.71 4.517a1.631 1.631 0 002.961-1.308l-1.022-3.408a.6.6 0 01.574-.772h4.575a2 2 0 001.93-2.526l-1.91-7A2 2 0 0016.473 3.5z", stroke: "currentColor", strokeLinecap: "round" }),
    React1200.createElement("path", { d: "M7 14.5v-11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1199 = React1200.forwardRef(SvgThumbsDown);
var ThumbsDown_default = ForwardRef1199;

// node_modules/iconoir-react/dist/esm/ThumbsUp.mjs
var React1201 = __toESM(require_react(), 1);
var __assign1200 = function() {
  __assign1200 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1200.apply(this, arguments);
};
function SvgThumbsUp(passedProps, svgRef) {
  var context = React1201.useContext(IconoirContext);
  var props = __assign1200(__assign1200({}, context), passedProps);
  return React1201.createElement(
    "svg",
    __assign1200({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1201.createElement("path", { d: "M16.472 20H4.1a.6.6 0 01-.6-.6V9.6a.6.6 0 01.6-.6h2.768a2 2 0 001.715-.971l2.71-4.517a1.631 1.631 0 012.961 1.308l-1.022 3.408a.6.6 0 00.574.772h4.575a2 2 0 011.93 2.526l-1.91 7A2 2 0 0116.473 20z", stroke: "currentColor", strokeLinecap: "round" }),
    React1201.createElement("path", { d: "M7 20V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1200 = React1201.forwardRef(SvgThumbsUp);
var ThumbsUp_default = ForwardRef1200;

// node_modules/iconoir-react/dist/esm/Thunderstorm.mjs
var React1202 = __toESM(require_react(), 1);
var __assign1201 = function() {
  __assign1201 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1201.apply(this, arguments);
};
function SvgThunderstorm(passedProps, svgRef) {
  var context = React1202.useContext(IconoirContext);
  var props = __assign1201(__assign1201({}, context), passedProps);
  return React1202.createElement(
    "svg",
    __assign1201({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1202.createElement("path", { d: "M11.5 12L9 17h6l-2.5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1202.createElement("path", { d: "M20 17.607c1.494-.585 3-1.918 3-4.607 0-4-3.333-5-5-5 0-2 0-6-6-6S6 6 6 8c-1.667 0-5 1-5 5 0 2.689 1.506 4.022 3 4.607", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1201 = React1202.forwardRef(SvgThunderstorm);
var Thunderstorm_default = ForwardRef1201;

// node_modules/iconoir-react/dist/esm/TifFormat.mjs
var React1203 = __toESM(require_react(), 1);
var __assign1202 = function() {
  __assign1202 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1202.apply(this, arguments);
};
function SvgTifFormat(passedProps, svgRef) {
  var context = React1203.useContext(IconoirContext);
  var props = __assign1202(__assign1202({}, context), passedProps);
  return React1203.createElement(
    "svg",
    __assign1202({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1203.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6", stroke: "currentColor", strokeLinecap: "round" }),
    React1203.createElement("path", { d: "M15 15V9h3M6.5 9H8m1.5 0H8m0 0v6M15 12h2.5M12 15V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1203.createElement("path", { d: "M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1202 = React1203.forwardRef(SvgTifFormat);
var TifFormat_default = ForwardRef1202;

// node_modules/iconoir-react/dist/esm/TiffFormat.mjs
var React1204 = __toESM(require_react(), 1);
var __assign1203 = function() {
  __assign1203 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1203.apply(this, arguments);
};
function SvgTiffFormat(passedProps, svgRef) {
  var context = React1204.useContext(IconoirContext);
  var props = __assign1203(__assign1203({}, context), passedProps);
  return React1204.createElement(
    "svg",
    __assign1203({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1204.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React1204.createElement("path", { d: "M12 15V9h3M17.5 15V9h3M3.5 9H5m1.5 0H5m0 0v6M12 12h2.5M17.5 12H20M9 15V9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1203 = React1204.forwardRef(SvgTiffFormat);
var TiffFormat_default = ForwardRef1203;

// node_modules/iconoir-react/dist/esm/TikTok.mjs
var React1205 = __toESM(require_react(), 1);
var __assign1204 = function() {
  __assign1204 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1204.apply(this, arguments);
};
function SvgTikTok(passedProps, svgRef) {
  var context = React1205.useContext(IconoirContext);
  var props = __assign1204(__assign1204({}, context), passedProps);
  return React1205.createElement(
    "svg",
    __assign1204({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1205.createElement("path", { d: "M21 8v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8a5 5 0 015 5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1205.createElement("path", { d: "M10 12a3 3 0 103 3V6c.333 1 1.6 3 4 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1204 = React1205.forwardRef(SvgTikTok);
var TikTok_default = ForwardRef1204;

// node_modules/iconoir-react/dist/esm/TimeZone.mjs
var React1206 = __toESM(require_react(), 1);
var __assign1205 = function() {
  __assign1205 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1205.apply(this, arguments);
};
function SvgTimeZone(passedProps, svgRef) {
  var context = React1206.useContext(IconoirContext);
  var props = __assign1205(__assign1205({}, context), passedProps);
  return React1206.createElement(
    "svg",
    __assign1205({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1206.createElement("path", { d: "M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12s4.477 10 10 10M13 2.05S16 6 16 12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1206.createElement("path", { d: "M11 21.95S8 18 8 12c0-6 3-9.95 3-9.95M2.63 15.5H12M2.63 8.5h18.74M19 17.5V19h1.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1206.createElement("path", { d: "M19 23a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1205 = React1206.forwardRef(SvgTimeZone);
var TimeZone_default = ForwardRef1205;

// node_modules/iconoir-react/dist/esm/TimerOff.mjs
var React1207 = __toESM(require_react(), 1);
var __assign1206 = function() {
  __assign1206 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1206.apply(this, arguments);
};
function SvgTimerOff(passedProps, svgRef) {
  var context = React1207.useContext(IconoirContext);
  var props = __assign1206(__assign1206({}, context), passedProps);
  return React1207.createElement(
    "svg",
    __assign1206({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1207.createElement("path", { d: "M9 2h6M5 7l14 14.5M12 10v4M6.19 8.5a8 8 0 0011.05 11.544M19.42 17A8 8 0 009.21 6.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1206 = React1207.forwardRef(SvgTimerOff);
var TimerOff_default = ForwardRef1206;

// node_modules/iconoir-react/dist/esm/Timer.mjs
var React1208 = __toESM(require_react(), 1);
var __assign1207 = function() {
  __assign1207 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1207.apply(this, arguments);
};
function SvgTimer(passedProps, svgRef) {
  var context = React1208.useContext(IconoirContext);
  var props = __assign1207(__assign1207({}, context), passedProps);
  return React1208.createElement(
    "svg",
    __assign1207({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1208.createElement("path", { d: "M9 2h6M12 10v4M12 22a8 8 0 100-16 8 8 0 000 16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1207 = React1208.forwardRef(SvgTimer);
var Timer_default = ForwardRef1207;

// node_modules/iconoir-react/dist/esm/Tools.mjs
var React1209 = __toESM(require_react(), 1);
var __assign1208 = function() {
  __assign1208 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1208.apply(this, arguments);
};
function SvgTools(passedProps, svgRef) {
  var context = React1209.useContext(IconoirContext);
  var props = __assign1208(__assign1208({}, context), passedProps);
  return React1209.createElement(
    "svg",
    __assign1208({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1209.createElement("path", { d: "M10.05 10.607l-7.07 7.07a2 2 0 000 2.83v0a2 2 0 002.828 0l7.07-7.072M17.193 13.8l3.878 3.878a2 2 0 010 2.828v0a2 2 0 01-2.828 0l-6.209-6.208M6.733 5.904L4.61 6.61 2.49 3.075l1.414-1.414L7.44 3.782l-.707 2.122zm0 0l2.83 2.83", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1209.createElement("path", { d: "M10.05 10.607c-.844-2.153-.679-4.978 1.061-6.718 1.74-1.74 4.95-2.121 6.717-1.06l-3.04 3.04-.283 3.111 3.111-.282 3.04-3.041c1.062 1.768.68 4.978-1.06 6.717-1.74 1.74-4.564 1.905-6.717 1.061", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1208 = React1209.forwardRef(SvgTools);
var Tools_default = ForwardRef1208;

// node_modules/iconoir-react/dist/esm/Tournament.mjs
var React1210 = __toESM(require_react(), 1);
var __assign1209 = function() {
  __assign1209 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1209.apply(this, arguments);
};
function SvgTournament(passedProps, svgRef) {
  var context = React1210.useContext(IconoirContext);
  var props = __assign1209(__assign1209({}, context), passedProps);
  return React1210.createElement(
    "svg",
    __assign1209({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1210.createElement("path", { d: "M3 3h5v6H3M8 6h7v12H8M15 12h7M3 15h5v6H3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1209 = React1210.forwardRef(SvgTournament);
var Tournament_default = ForwardRef1209;

// node_modules/iconoir-react/dist/esm/TowerCheck.mjs
var React1211 = __toESM(require_react(), 1);
var __assign1210 = function() {
  __assign1210 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1210.apply(this, arguments);
};
function SvgTowerCheck(passedProps, svgRef) {
  var context = React1211.useContext(IconoirContext);
  var props = __assign1210(__assign1210({}, context), passedProps);
  return React1211.createElement(
    "svg",
    __assign1210({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1211.createElement("path", { d: "M13 19l3 3 5-5M9 22H7a2 2 0 01-2-2v-8.818a.6.6 0 00-.1-.333L3.1 8.15a.6.6 0 01-.1-.333V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v5.218a.6.6 0 01-.1.333l-1.8 2.698a.6.6 0 00-.1.333V13.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1210 = React1211.forwardRef(SvgTowerCheck);
var TowerCheck_default = ForwardRef1210;

// node_modules/iconoir-react/dist/esm/TowerNoAccess.mjs
var React1212 = __toESM(require_react(), 1);
var __assign1211 = function() {
  __assign1211 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1211.apply(this, arguments);
};
function SvgTowerNoAccess(passedProps, svgRef) {
  var context = React1212.useContext(IconoirContext);
  var props = __assign1211(__assign1211({}, context), passedProps);
  return React1212.createElement(
    "svg",
    __assign1211({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1212.createElement("path", { d: "M19.857 15.2a4 4 0 00-5.713 5.6m5.713-5.6a4 4 0 01-5.713 5.6m5.713-5.6l-5.714 5.6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1212.createElement("path", { d: "M9 22H7a2 2 0 01-2-2v-8.818a.6.6 0 00-.1-.333L3.1 8.15a.6.6 0 01-.1-.333V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v5.218a.6.6 0 01-.1.333L20 9.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1211 = React1212.forwardRef(SvgTowerNoAccess);
var TowerNoAccess_default = ForwardRef1211;

// node_modules/iconoir-react/dist/esm/TowerWarning.mjs
var React1213 = __toESM(require_react(), 1);
var __assign1212 = function() {
  __assign1212 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1212.apply(this, arguments);
};
function SvgTowerWarning(passedProps, svgRef) {
  var context = React1213.useContext(IconoirContext);
  var props = __assign1212(__assign1212({}, context), passedProps);
  return React1213.createElement(
    "svg",
    __assign1212({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1213.createElement("path", { d: "M12 10v3M12 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1213.createElement("path", { d: "M17 22H7a2 2 0 01-2-2v-8.818a.6.6 0 00-.1-.333L3.1 8.15a.6.6 0 01-.1-.333V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v5.218a.6.6 0 01-.1.333l-1.8 2.698a.6.6 0 00-.1.333V20a2 2 0 01-2 2z", stroke: "currentColor" })
  );
}
var ForwardRef1212 = React1213.forwardRef(SvgTowerWarning);
var TowerWarning_default = ForwardRef1212;

// node_modules/iconoir-react/dist/esm/Tower.mjs
var React1214 = __toESM(require_react(), 1);
var __assign1213 = function() {
  __assign1213 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1213.apply(this, arguments);
};
function SvgTower(passedProps, svgRef) {
  var context = React1214.useContext(IconoirContext);
  var props = __assign1213(__assign1213({}, context), passedProps);
  return React1214.createElement(
    "svg",
    __assign1213({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1214.createElement("path", { d: "M17 22H7a2 2 0 01-2-2v-8.818a.6.6 0 00-.1-.333L3.1 8.15a.6.6 0 01-.1-.333V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h2.8a.6.6 0 01.6.6v1.8a.6.6 0 00.6.6h2.8a.6.6 0 00.6-.6V2.6a.6.6 0 01.6-.6h1.8a.6.6 0 01.6.6v5.218a.6.6 0 01-.1.333l-1.8 2.698a.6.6 0 00-.1.333V20a2 2 0 01-2 2z", stroke: "currentColor" })
  );
}
var ForwardRef1213 = React1214.forwardRef(SvgTower);
var Tower_default = ForwardRef1213;

// node_modules/iconoir-react/dist/esm/Trademark.mjs
var React1215 = __toESM(require_react(), 1);
var __assign1214 = function() {
  __assign1214 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1214.apply(this, arguments);
};
function SvgTrademark(passedProps, svgRef) {
  var context = React1215.useContext(IconoirContext);
  var props = __assign1214(__assign1214({}, context), passedProps);
  return React1215.createElement(
    "svg",
    __assign1214({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1215.createElement("path", { d: "M9.5 15.5v-2.8m2.857 0c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H9.5v4.2m2.857 0H9.5m2.857 0l2.143 2.8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1215.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1214 = React1215.forwardRef(SvgTrademark);
var Trademark_default = ForwardRef1214;

// node_modules/iconoir-react/dist/esm/Train.mjs
var React1216 = __toESM(require_react(), 1);
var __assign1215 = function() {
  __assign1215 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1215.apply(this, arguments);
};
function SvgTrain(passedProps, svgRef) {
  var context = React1216.useContext(IconoirContext);
  var props = __assign1215(__assign1215({}, context), passedProps);
  return React1216.createElement(
    "svg",
    __assign1215({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1216.createElement("path", { d: "M9.609 7h4.782A2.609 2.609 0 0117 9.609a.391.391 0 01-.391.391H7.39A.391.391 0 017 9.609 2.609 2.609 0 019.609 7z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1216.createElement("path", { d: "M9 3h6a6 6 0 016 6v4a6 6 0 01-6 6H9a6 6 0 01-6-6V9a6 6 0 016-6zM16 15.01l.01-.011M8 15.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1216.createElement("path", { d: "M10.5 19l-2 2.5M13.5 19l2 2.5M16.5 19l2 2.5M7.5 19l-2 2.5", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1215 = React1216.forwardRef(SvgTrain);
var Train_default = ForwardRef1215;

// node_modules/iconoir-react/dist/esm/Tram.mjs
var React1217 = __toESM(require_react(), 1);
var __assign1216 = function() {
  __assign1216 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1216.apply(this, arguments);
};
function SvgTram(passedProps, svgRef) {
  var context = React1217.useContext(IconoirContext);
  var props = __assign1216(__assign1216({}, context), passedProps);
  return React1217.createElement(
    "svg",
    __assign1216({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1217.createElement("path", { d: "M15 16.01l.01-.011M9 16.01l.01-.011M13 6h2a5 5 0 015 5v7a2 2 0 01-2 2H6a2 2 0 01-2-2v-7a5 5 0 015-5h4zm0 0l1-4m0 0h3m-3 0H7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1217.createElement("path", { d: "M10.5 20l-2 2.5M13.5 20l2 2.5M16.5 20l2 2.5M7.5 20l-2 2.5", stroke: "currentColor", strokeLinecap: "round" }),
    React1217.createElement("path", { d: "M9.609 9h4.782A2.609 2.609 0 0117 11.609a.391.391 0 01-.391.391H7.39A.391.391 0 017 11.609 2.609 2.609 0 019.609 9z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1216 = React1217.forwardRef(SvgTram);
var Tram_default = ForwardRef1216;

// node_modules/iconoir-react/dist/esm/TransitionDown.mjs
var React1218 = __toESM(require_react(), 1);
var __assign1217 = function() {
  __assign1217 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1217.apply(this, arguments);
};
function SvgTransitionDown(passedProps, svgRef) {
  var context = React1218.useContext(IconoirContext);
  var props = __assign1217(__assign1217({}, context), passedProps);
  return React1218.createElement(
    "svg",
    __assign1217({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1218.createElement("path", { d: "M18 2H6a3 3 0 00-3 3v2a3 3 0 003 3h12a3 3 0 003-3V5a3 3 0 00-3-3z", stroke: "currentColor" }),
    React1218.createElement("path", { d: "M3 16v2a4 4 0 004 4h10a4 4 0 004-4v-2M12 10v8m0 0l-3-3m3 3l3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1217 = React1218.forwardRef(SvgTransitionDown);
var TransitionDown_default = ForwardRef1217;

// node_modules/iconoir-react/dist/esm/TransitionLeft.mjs
var React1219 = __toESM(require_react(), 1);
var __assign1218 = function() {
  __assign1218 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1218.apply(this, arguments);
};
function SvgTransitionLeft(passedProps, svgRef) {
  var context = React1219.useContext(IconoirContext);
  var props = __assign1218(__assign1218({}, context), passedProps);
  return React1219.createElement(
    "svg",
    __assign1218({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1219.createElement("path", { d: "M22 18V6a3 3 0 00-3-3h-2a3 3 0 00-3 3v12a3 3 0 003 3h2a3 3 0 003-3z", stroke: "currentColor" }),
    React1219.createElement("path", { d: "M8 3H6a4 4 0 00-4 4v10a4 4 0 004 4h2M14 12H6m0 0l3-3m-3 3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1218 = React1219.forwardRef(SvgTransitionLeft);
var TransitionLeft_default = ForwardRef1218;

// node_modules/iconoir-react/dist/esm/TransitionRight.mjs
var React1220 = __toESM(require_react(), 1);
var __assign1219 = function() {
  __assign1219 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1219.apply(this, arguments);
};
function SvgTransitionRight(passedProps, svgRef) {
  var context = React1220.useContext(IconoirContext);
  var props = __assign1219(__assign1219({}, context), passedProps);
  return React1220.createElement(
    "svg",
    __assign1219({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1220.createElement("path", { d: "M2 18V6a3 3 0 013-3h2a3 3 0 013 3v12a3 3 0 01-3 3H5a3 3 0 01-3-3z", stroke: "currentColor" }),
    React1220.createElement("path", { d: "M16 3h2a4 4 0 014 4v10a4 4 0 01-4 4h-2M10 12h8m0 0l-3-3m3 3l-3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1219 = React1220.forwardRef(SvgTransitionRight);
var TransitionRight_default = ForwardRef1219;

// node_modules/iconoir-react/dist/esm/TransitionUp.mjs
var React1221 = __toESM(require_react(), 1);
var __assign1220 = function() {
  __assign1220 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1220.apply(this, arguments);
};
function SvgTransitionUp(passedProps, svgRef) {
  var context = React1221.useContext(IconoirContext);
  var props = __assign1220(__assign1220({}, context), passedProps);
  return React1221.createElement(
    "svg",
    __assign1220({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1221.createElement("path", { d: "M18 22H6a3 3 0 01-3-3v-2a3 3 0 013-3h12a3 3 0 013 3v2a3 3 0 01-3 3z", stroke: "currentColor" }),
    React1221.createElement("path", { d: "M3 8V6a4 4 0 014-4h10a4 4 0 014 4v2M12 14V6m0 0L9 9m3-3l3 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1220 = React1221.forwardRef(SvgTransitionUp);
var TransitionUp_default = ForwardRef1220;

// node_modules/iconoir-react/dist/esm/Translate.mjs
var React1222 = __toESM(require_react(), 1);
var __assign1221 = function() {
  __assign1221 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1221.apply(this, arguments);
};
function SvgTranslate(passedProps, svgRef) {
  var context = React1222.useContext(IconoirContext);
  var props = __assign1221(__assign1221({}, context), passedProps);
  return React1222.createElement(
    "svg",
    __assign1221({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1222.createElement("path", { d: "M2 5h7m7 0h-2.5M9 5h4.5M9 5V3m4.5 2c-.82 2.735-2.539 5.32-4.5 7.593M4 17.5c1.585-1.359 3.376-3.026 5-4.907m0 0C8 11.5 6.4 9.3 6 8.5m3 4.093l3 2.907M13.5 21l1.143-3m6.857 3l-1.143-3m-5.714 0l2.857-7.5 2.857 7.5m-5.714 0h5.714", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1221 = React1222.forwardRef(SvgTranslate);
var Translate_default = ForwardRef1221;

// node_modules/iconoir-react/dist/esm/Trash.mjs
var React1223 = __toESM(require_react(), 1);
var __assign1222 = function() {
  __assign1222 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1222.apply(this, arguments);
};
function SvgTrash(passedProps, svgRef) {
  var context = React1223.useContext(IconoirContext);
  var props = __assign1222(__assign1222({}, context), passedProps);
  return React1223.createElement(
    "svg",
    __assign1222({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1223.createElement("path", { d: "M20 9l-1.995 11.346A2 2 0 0116.035 22h-8.07a2 2 0 01-1.97-1.654L4 9M21 6h-5.625M3 6h5.625m0 0V4a2 2 0 012-2h2.75a2 2 0 012 2v2m-6.75 0h6.75", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1222 = React1223.forwardRef(SvgTrash);
var Trash_default = ForwardRef1222;

// node_modules/iconoir-react/dist/esm/Treadmill.mjs
var React1224 = __toESM(require_react(), 1);
var __assign1223 = function() {
  __assign1223 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1223.apply(this, arguments);
};
function SvgTreadmill(passedProps, svgRef) {
  var context = React1224.useContext(IconoirContext);
  var props = __assign1223(__assign1223({}, context), passedProps);
  return React1224.createElement(
    "svg",
    __assign1223({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1224.createElement("path", { d: "M13 6a2 2 0 100-4 2 2 0 000 4zM10.613 7.267l-3.308 4.135 4.135 4.135-2.067 4.55", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1224.createElement("path", { d: "M4.41 8.508l3.387-3.309 2.816 2.068 2.895 3.308h1.722M6.892 14.71l-1.241.827H2.343M3.343 21.537l15.308-2V8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1224.createElement("path", { d: "M20.892 6L18.65 8 17 9.5M20.891 21.71l-2.24-2.173", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1223 = React1224.forwardRef(SvgTreadmill);
var Treadmill_default = ForwardRef1223;

// node_modules/iconoir-react/dist/esm/Tree.mjs
var React1225 = __toESM(require_react(), 1);
var __assign1224 = function() {
  __assign1224 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1224.apply(this, arguments);
};
function SvgTree(passedProps, svgRef) {
  var context = React1225.useContext(IconoirContext);
  var props = __assign1224(__assign1224({}, context), passedProps);
  return React1225.createElement(
    "svg",
    __assign1224({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1225.createElement("path", { d: "M12 22v-8m0-4v4m0 0l4-2M17 7A5 5 0 007 7M12 18H7.5a5.5 5.5 0 110-11H9M12 18h4.5A5.5 5.5 0 0017 7.022", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1224 = React1225.forwardRef(SvgTree);
var Tree_default = ForwardRef1224;

// node_modules/iconoir-react/dist/esm/Trekking.mjs
var React1226 = __toESM(require_react(), 1);
var __assign1225 = function() {
  __assign1225 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1225.apply(this, arguments);
};
function SvgTrekking(passedProps, svgRef) {
  var context = React1226.useContext(IconoirContext);
  var props = __assign1225(__assign1225({}, context), passedProps);
  return React1226.createElement(
    "svg",
    __assign1225({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1226.createElement("path", { d: "M18 10l-3 1.5-4-3-1 5.5 3.5 3 .5 4.5M18 8.5v13M10 17l-2 4.5M8.5 8.5C7 9.5 6 12 6 12l2 1M12 6.5a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1225 = React1226.forwardRef(SvgTrekking);
var Trekking_default = ForwardRef1225;

// node_modules/iconoir-react/dist/esm/Trello.mjs
var React1227 = __toESM(require_react(), 1);
var __assign1226 = function() {
  __assign1226 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1226.apply(this, arguments);
};
function SvgTrello(passedProps, svgRef) {
  var context = React1227.useContext(IconoirContext);
  var props = __assign1226(__assign1226({}, context), passedProps);
  return React1227.createElement(
    "svg",
    __assign1226({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1227.createElement("path", { d: "M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1227.createElement("path", { d: "M10.4 6H6.6a.6.6 0 00-.6.6v10.8a.6.6 0 00.6.6h3.8a.6.6 0 00.6-.6V6.6a.6.6 0 00-.6-.6zM17.4 6h-3.8a.6.6 0 00-.6.6v6.8a.6.6 0 00.6.6h3.8a.6.6 0 00.6-.6V6.6a.6.6 0 00-.6-.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1226 = React1227.forwardRef(SvgTrello);
var Trello_default = ForwardRef1226;

// node_modules/iconoir-react/dist/esm/TriangleFlagCircle.mjs
var React1228 = __toESM(require_react(), 1);
var __assign1227 = function() {
  __assign1227 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1227.apply(this, arguments);
};
function SvgTriangleFlagCircle(passedProps, svgRef) {
  var context = React1228.useContext(IconoirContext);
  var props = __assign1227(__assign1227({}, context), passedProps);
  return React1228.createElement(
    "svg",
    __assign1227({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1228.createElement("path", { d: "M9 21.5v-6m0 0V6.997a.6.6 0 01.88-.53l6.67 3.53a.6.6 0 01.024 1.048L9 15.5zM22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1227 = React1228.forwardRef(SvgTriangleFlagCircle);
var TriangleFlagCircle_default = ForwardRef1227;

// node_modules/iconoir-react/dist/esm/TriangleFlagTwoStripes.mjs
var React1229 = __toESM(require_react(), 1);
var __assign1228 = function() {
  __assign1228 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1228.apply(this, arguments);
};
function SvgTriangleFlagTwoStripes(passedProps, svgRef) {
  var context = React1229.useContext(IconoirContext);
  var props = __assign1228(__assign1228({}, context), passedProps);
  return React1229.createElement(
    "svg",
    __assign1228({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1229.createElement("path", { d: "M8 21v-5m0 0l9.723-6.482a.6.6 0 00-.017-1.01l-8.79-5.441a.6.6 0 00-.916.51V16zM8 11l6.5-4.476", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1228 = React1229.forwardRef(SvgTriangleFlagTwoStripes);
var TriangleFlagTwoStripes_default = ForwardRef1228;

// node_modules/iconoir-react/dist/esm/TriangleFlag.mjs
var React1230 = __toESM(require_react(), 1);
var __assign1229 = function() {
  __assign1229 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1229.apply(this, arguments);
};
function SvgTriangleFlag(passedProps, svgRef) {
  var context = React1230.useContext(IconoirContext);
  var props = __assign1229(__assign1229({}, context), passedProps);
  return React1230.createElement(
    "svg",
    __assign1229({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1230.createElement("path", { d: "M8 21v-5m0 0V3.577a.6.6 0 01.916-.51l8.79 5.442a.6.6 0 01.017 1.009L8 16z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1229 = React1230.forwardRef(SvgTriangleFlag);
var TriangleFlag_default = ForwardRef1229;

// node_modules/iconoir-react/dist/esm/Triangle.mjs
var React1231 = __toESM(require_react(), 1);
var __assign1230 = function() {
  __assign1230 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1230.apply(this, arguments);
};
function SvgTriangle(passedProps, svgRef) {
  var context = React1231.useContext(IconoirContext);
  var props = __assign1230(__assign1230({}, context), passedProps);
  return React1231.createElement(
    "svg",
    __assign1230({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1231.createElement("path", { d: "M11.475 2.947a.6.6 0 011.05 0l9.373 16.912a.6.6 0 01-.524.891H2.626a.6.6 0 01-.525-.89l9.374-16.913z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1230 = React1231.forwardRef(SvgTriangle);
var Triangle_default = ForwardRef1230;

// node_modules/iconoir-react/dist/esm/Trophy.mjs
var React1232 = __toESM(require_react(), 1);
var __assign1231 = function() {
  __assign1231 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1231.apply(this, arguments);
};
function SvgTrophy(passedProps, svgRef) {
  var context = React1232.useContext(IconoirContext);
  var props = __assign1231(__assign1231({}, context), passedProps);
  return React1232.createElement(
    "svg",
    __assign1231({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1232.createElement("path", { d: "M6.745 4h10.568s-.88 13.257-5.284 13.257c-2.15 0-3.461-3.164-4.239-6.4C6.976 7.468 6.745 4 6.745 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1232.createElement("path", { d: "M17.313 4s.921-.983 1.687-1c1.5-.034 1.777 1 1.777 1 .294.61.529 2.194-.88 3.657-1.41 1.463-2.987 2.743-3.629 3.2M6.745 4S5.785 3.006 5 3c-1.5-.012-1.777 1-1.777 1-.294.61-.529 2.194.88 3.657a29.896 29.896 0 003.687 3.2M8.507 20c0-1.829 3.522-2.743 3.522-2.743s3.523.914 3.523 2.743H8.507z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1231 = React1232.forwardRef(SvgTrophy);
var Trophy_default = ForwardRef1231;

// node_modules/iconoir-react/dist/esm/TruckLength.mjs
var React1233 = __toESM(require_react(), 1);
var __assign1232 = function() {
  __assign1232 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1232.apply(this, arguments);
};
function SvgTruckLength(passedProps, svgRef) {
  var context = React1233.useContext(IconoirContext);
  var props = __assign1232(__assign1232({}, context), passedProps);
  return React1233.createElement(
    "svg",
    __assign1232({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1233.createElement("path", { d: "M7 16a2 2 0 100-4 2 2 0 000 4zM17 16a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React1233.createElement("path", { d: "M14 14V3.6a.6.6 0 00-.6-.6H2.6a.6.6 0 00-.6.6v9.8a.6.6 0 00.6.6h2.05M14 14H9.05M14 6h5.61a.6.6 0 01.548.356l1.79 4.028a.6.6 0 01.052.243V13.4a.6.6 0 01-.6.6h-1.9M14 14h1", stroke: "currentColor", strokeLinecap: "round" }),
    React1233.createElement("path", { d: "M3 20h17.75M3 20l1.75 1.75M3 20l1.75-1.75m16 1.75L19 21.75M20.75 20L19 18.25", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1232 = React1233.forwardRef(SvgTruckLength);
var TruckLength_default = ForwardRef1232;

// node_modules/iconoir-react/dist/esm/Truck.mjs
var React1234 = __toESM(require_react(), 1);
var __assign1233 = function() {
  __assign1233 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1233.apply(this, arguments);
};
function SvgTruck(passedProps, svgRef) {
  var context = React1234.useContext(IconoirContext);
  var props = __assign1233(__assign1233({}, context), passedProps);
  return React1234.createElement(
    "svg",
    __assign1233({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1234.createElement("path", { d: "M7 19a2 2 0 100-4 2 2 0 000 4zM17 19a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeMiterlimit: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }),
    React1234.createElement("path", { d: "M14 17V6.6a.6.6 0 00-.6-.6H2.6a.6.6 0 00-.6.6v9.8a.6.6 0 00.6.6h2.05M14 17H9.05M14 9h5.61a.6.6 0 01.548.356l1.79 4.028a.6.6 0 01.052.243V16.4a.6.6 0 01-.6.6h-1.9M14 17h1", stroke: "currentColor", strokeLinecap: "round" })
  );
}
var ForwardRef1233 = React1234.forwardRef(SvgTruck);
var Truck_default = ForwardRef1233;

// node_modules/iconoir-react/dist/esm/Tunnel.mjs
var React1235 = __toESM(require_react(), 1);
var __assign1234 = function() {
  __assign1234 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1234.apply(this, arguments);
};
function SvgTunnel(passedProps, svgRef) {
  var context = React1235.useContext(IconoirContext);
  var props = __assign1234(__assign1234({}, context), passedProps);
  return React1235.createElement(
    "svg",
    __assign1234({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1235.createElement("path", { d: "M21 20L3 14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1235.createElement("path", { d: "M16 10v1M12 9v1M8 8v1", stroke: "currentColor", strokeLinecap: "round" }),
    React1235.createElement("path", { d: "M3 21h18v-9a9 9 0 10-18 0v9z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1234 = React1235.forwardRef(SvgTunnel);
var Tunnel_default = ForwardRef1234;

// node_modules/iconoir-react/dist/esm/TvFix.mjs
var React1236 = __toESM(require_react(), 1);
var __assign1235 = function() {
  __assign1235 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1235.apply(this, arguments);
};
function SvgTvFix(passedProps, svgRef) {
  var context = React1236.useContext(IconoirContext);
  var props = __assign1235(__assign1235({}, context), passedProps);
  return React1236.createElement(
    "svg",
    __assign1235({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1236.createElement("path", { d: "M2 20V9a2 2 0 012-2h16a2 2 0 012 2v11a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1236.createElement("path", { d: "M13.657 12.828l-2.829 2.829M16.485 12.828A2 2 0 1113.657 10M10.828 18.485A2 2 0 008 15.657M8.5 2.5L12 6l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1235 = React1236.forwardRef(SvgTvFix);
var TvFix_default = ForwardRef1235;

// node_modules/iconoir-react/dist/esm/TvIssue.mjs
var React1237 = __toESM(require_react(), 1);
var __assign1236 = function() {
  __assign1236 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1236.apply(this, arguments);
};
function SvgTvIssue(passedProps, svgRef) {
  var context = React1237.useContext(IconoirContext);
  var props = __assign1236(__assign1236({}, context), passedProps);
  return React1237.createElement(
    "svg",
    __assign1236({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1237.createElement("path", { d: "M12 11v3M12 18.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1237.createElement("path", { d: "M2 20V9a2 2 0 012-2h16a2 2 0 012 2v11a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1237.createElement("path", { d: "M8.5 2.5L12 6l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1236 = React1237.forwardRef(SvgTvIssue);
var TvIssue_default = ForwardRef1236;

// node_modules/iconoir-react/dist/esm/Tv.mjs
var React1238 = __toESM(require_react(), 1);
var __assign1237 = function() {
  __assign1237 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1237.apply(this, arguments);
};
function SvgTv(passedProps, svgRef) {
  var context = React1238.useContext(IconoirContext);
  var props = __assign1237(__assign1237({}, context), passedProps);
  return React1238.createElement(
    "svg",
    __assign1237({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1238.createElement("path", { d: "M2 20V9a2 2 0 012-2h16a2 2 0 012 2v11a2 2 0 01-2 2H4a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1238.createElement("path", { d: "M8.5 2.5L12 6l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1237 = React1238.forwardRef(SvgTv);
var Tv_default = ForwardRef1237;

// node_modules/iconoir-react/dist/esm/TwitterVerifiedBadge.mjs
var React1239 = __toESM(require_react(), 1);
var __assign1238 = function() {
  __assign1238 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1238.apply(this, arguments);
};
function SvgTwitterVerifiedBadge(passedProps, svgRef) {
  var context = React1239.useContext(IconoirContext);
  var props = __assign1238(__assign1238({}, context), passedProps);
  return React1239.createElement(
    "svg",
    __assign1238({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1239.createElement("path", { d: "M10.521 2.624a2 2 0 012.958 0l1.02 1.12a2 2 0 001.572.651l1.513-.07a2 2 0 012.092 2.09l-.071 1.514a2 2 0 00.651 1.572l1.12 1.02a2 2 0 010 2.958l-1.12 1.02a2 2 0 00-.651 1.572l.07 1.513a2 2 0 01-2.09 2.092l-1.514-.071a2 2 0 00-1.572.651l-1.02 1.12a2 2 0 01-2.958 0l-1.02-1.12a2 2 0 00-1.572-.651l-1.513.07a2 2 0 01-2.092-2.09l.071-1.514a2 2 0 00-.651-1.572l-1.12-1.02a2 2 0 010-2.958l1.12-1.02a2 2 0 00.651-1.572l-.07-1.513a2 2 0 012.09-2.092l1.514.071a2 2 0 001.572-.651l1.02-1.12z", stroke: "currentColor" }),
    React1239.createElement("path", { d: "M9 12l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1238 = React1239.forwardRef(SvgTwitterVerifiedBadge);
var TwitterVerifiedBadge_default = ForwardRef1238;

// node_modules/iconoir-react/dist/esm/Twitter.mjs
var React1240 = __toESM(require_react(), 1);
var __assign1239 = function() {
  __assign1239 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1239.apply(this, arguments);
};
function SvgTwitter(passedProps, svgRef) {
  var context = React1240.useContext(IconoirContext);
  var props = __assign1239(__assign1239({}, context), passedProps);
  return React1240.createElement(
    "svg",
    __assign1239({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1240.createElement("path", { d: "M23 3.01s-2.018 1.192-3.14 1.53a4.48 4.48 0 00-7.86 3v1a10.66 10.66 0 01-9-4.53s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5 0-.278-.028-.556-.08-.83C21.94 5.674 23 3.01 23 3.01z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1239 = React1240.forwardRef(SvgTwitter);
var Twitter_default = ForwardRef1239;

// node_modules/iconoir-react/dist/esm/TwoPointsCircle.mjs
var React1241 = __toESM(require_react(), 1);
var __assign1240 = function() {
  __assign1240 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1240.apply(this, arguments);
};
function SvgTwoPointsCircle(passedProps, svgRef) {
  var context = React1241.useContext(IconoirContext);
  var props = __assign1240(__assign1240({}, context), passedProps);
  return React1241.createElement(
    "svg",
    __assign1240({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1241.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1241.createElement("path", { d: "M5 6a1 1 0 100-2 1 1 0 000 2zM19 20a1 1 0 100-2 1 1 0 000 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1241.createElement("path", { d: "M19 19l-1.5-1.5M15.5 15.5l-1-1M12.5 12.5l-1-1M9.5 9.5l-1-1M6.5 6.5L5 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1240 = React1241.forwardRef(SvgTwoPointsCircle);
var TwoPointsCircle_default = ForwardRef1240;

// node_modules/iconoir-react/dist/esm/TwoSeaterSofa.mjs
var React1242 = __toESM(require_react(), 1);
var __assign1241 = function() {
  __assign1241 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1241.apply(this, arguments);
};
function SvgTwoSeaterSofa(passedProps, svgRef) {
  var context = React1242.useContext(IconoirContext);
  var props = __assign1241(__assign1241({}, context), passedProps);
  return React1242.createElement(
    "svg",
    __assign1241({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1242.createElement("path", { d: "M2 16v3M12 13V7a2 2 0 012-2h4a2 2 0 012 2v2M12 13V7a2 2 0 00-2-2H6a2 2 0 00-2 2v2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1242.createElement("path", { d: "M20 9a2 2 0 00-2 2v2H6v-2a2 2 0 10-4 0v6h20v-6a2 2 0 00-2-2zM22 16v3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1241 = React1242.forwardRef(SvgTwoSeaterSofa);
var TwoSeaterSofa_default = ForwardRef1241;

// node_modules/iconoir-react/dist/esm/Type.mjs
var React1243 = __toESM(require_react(), 1);
var __assign1242 = function() {
  __assign1242 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1242.apply(this, arguments);
};
function SvgType(passedProps, svgRef) {
  var context = React1243.useContext(IconoirContext);
  var props = __assign1242(__assign1242({}, context), passedProps);
  return React1243.createElement(
    "svg",
    __assign1242({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1243.createElement("path", { d: "M7 16.248a.6.6 0 00-.176-.424l-3.648-3.648A.6.6 0 013 11.75V4a2 2 0 012-2h14a2 2 0 012 2v7.752a.6.6 0 01-.176.424l-3.648 3.648a.6.6 0 00-.176.425V20a2 2 0 01-2 2H9a2 2 0 01-2-2v-3.752z", stroke: "currentColor" }),
    React1243.createElement("path", { d: "M9.5 11.5l.5-1.1m4.5 1.1l-.5-1.1m0 0L12 6l-2 4.4m4 0h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1242 = React1243.forwardRef(SvgType);
var Type_default = ForwardRef1242;

// node_modules/iconoir-react/dist/esm/UmbrellaFull.mjs
var React1244 = __toESM(require_react(), 1);
var __assign1243 = function() {
  __assign1243 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1243.apply(this, arguments);
};
function SvgUmbrellaFull(passedProps, svgRef) {
  var context = React1244.useContext(IconoirContext);
  var props = __assign1243(__assign1243({}, context), passedProps);
  return React1244.createElement(
    "svg",
    __assign1243({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1244.createElement("path", { d: "M19.778 4.043C17.701 2.081 14.938 1 12 1 9.062 1 6.3 2.08 4.222 4.043 2.144 6.006 1 8.616 1 11.391c0 .336.289.609.644.609.356 0 .645-.273.645-.609 0-1.013.872-1.837 1.944-1.837C6.126 9.554 5.431 12 6.823 12c1.39 0 .696-2.446 2.588-2.446C11.304 9.554 12 12 12 12s.697-2.446 2.589-2.446S15.988 12 17.178 12s.696-2.446 2.589-2.446c1.072 0 1.944.824 1.944 1.837 0 .336.289.609.645.609.355 0 .644-.273.644-.609 0-2.775-1.144-5.385-3.222-7.348z", stroke: "currentColor" }),
    React1244.createElement("path", { d: "M12 12v8c0 4-6 4-6 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1243 = React1244.forwardRef(SvgUmbrellaFull);
var UmbrellaFull_default = ForwardRef1243;

// node_modules/iconoir-react/dist/esm/UnderlineSquare.mjs
var React1245 = __toESM(require_react(), 1);
var __assign1244 = function() {
  __assign1244 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1244.apply(this, arguments);
};
function SvgUnderlineSquare(passedProps, svgRef) {
  var context = React1245.useContext(IconoirContext);
  var props = __assign1244(__assign1244({}, context), passedProps);
  return React1245.createElement(
    "svg",
    __assign1244({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1245.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React1245.createElement("path", { d: "M16 6v4a4 4 0 01-4 4v0a4 4 0 01-4-4V6M6 18h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1244 = React1245.forwardRef(SvgUnderlineSquare);
var UnderlineSquare_default = ForwardRef1244;

// node_modules/iconoir-react/dist/esm/Underline.mjs
var React1246 = __toESM(require_react(), 1);
var __assign1245 = function() {
  __assign1245 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1245.apply(this, arguments);
};
function SvgUnderline(passedProps, svgRef) {
  var context = React1246.useContext(IconoirContext);
  var props = __assign1245(__assign1245({}, context), passedProps);
  return React1246.createElement(
    "svg",
    __assign1245({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1246.createElement("path", { d: "M16 5v6a4 4 0 01-4 4v0a4 4 0 01-4-4V5M6 19h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1245 = React1246.forwardRef(SvgUnderline);
var Underline_default = ForwardRef1245;

// node_modules/iconoir-react/dist/esm/UndoAction.mjs
var React1247 = __toESM(require_react(), 1);
var __assign1246 = function() {
  __assign1246 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1246.apply(this, arguments);
};
function SvgUndoAction(passedProps, svgRef) {
  var context = React1247.useContext(IconoirContext);
  var props = __assign1246(__assign1246({}, context), passedProps);
  return React1247.createElement(
    "svg",
    __assign1246({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1247.createElement("path", { d: "M5 5v6M8.5 8H15s0 0 0 0 5 0 5 4.706C20 18 15 18 15 18H6.286", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1247.createElement("path", { d: "M11.5 11.5L8 8l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1246 = React1247.forwardRef(SvgUndoAction);
var UndoAction_default = ForwardRef1246;

// node_modules/iconoir-react/dist/esm/UndoCircle.mjs
var React1248 = __toESM(require_react(), 1);
var __assign1247 = function() {
  __assign1247 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1247.apply(this, arguments);
};
function SvgUndoCircle(passedProps, svgRef) {
  var context = React1248.useContext(IconoirContext);
  var props = __assign1247(__assign1247({}, context), passedProps);
  return React1248.createElement(
    "svg",
    __assign1247({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1248.createElement("path", { d: "M7 10.625h7.2s0 0 0 0 2.8 0 2.8 3C17 17 14.2 17 14.2 17h-.8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1248.createElement("path", { d: "M10.5 14L7 10.625 10.5 7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1248.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1247 = React1248.forwardRef(SvgUndoCircle);
var UndoCircle_default = ForwardRef1247;

// node_modules/iconoir-react/dist/esm/Undo.mjs
var React1249 = __toESM(require_react(), 1);
var __assign1248 = function() {
  __assign1248 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1248.apply(this, arguments);
};
function SvgUndo(passedProps, svgRef) {
  var context = React1249.useContext(IconoirContext);
  var props = __assign1248(__assign1248({}, context), passedProps);
  return React1249.createElement(
    "svg",
    __assign1248({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1249.createElement("path", { d: "M4.5 8H15s0 0 0 0 5 0 5 4.706C20 18 15 18 15 18H6.286", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1249.createElement("path", { d: "M7.5 11.5L4 8l3.5-3.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1248 = React1249.forwardRef(SvgUndo);
var Undo_default = ForwardRef1248;

// node_modules/iconoir-react/dist/esm/UnionAlt.mjs
var React1250 = __toESM(require_react(), 1);
var __assign1249 = function() {
  __assign1249 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1249.apply(this, arguments);
};
function SvgUnionAlt(passedProps, svgRef) {
  var context = React1250.useContext(IconoirContext);
  var props = __assign1249(__assign1249({}, context), passedProps);
  return React1250.createElement(
    "svg",
    __assign1249({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1250.createElement("path", { d: "M9 22A7 7 0 109 8a7 7 0 000 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1250.createElement("path", { d: "M15 16a7 7 0 100-14 7 7 0 000 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1249 = React1250.forwardRef(SvgUnionAlt);
var UnionAlt_default = ForwardRef1249;

// node_modules/iconoir-react/dist/esm/UnionHorizAlt.mjs
var React1251 = __toESM(require_react(), 1);
var __assign1250 = function() {
  __assign1250 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1250.apply(this, arguments);
};
function SvgUnionHorizAlt(passedProps, svgRef) {
  var context = React1251.useContext(IconoirContext);
  var props = __assign1250(__assign1250({}, context), passedProps);
  return React1251.createElement(
    "svg",
    __assign1250({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1251.createElement("path", { d: "M8 19A7 7 0 108 5a7 7 0 000 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1251.createElement("path", { d: "M16 19a7 7 0 100-14 7 7 0 000 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1250 = React1251.forwardRef(SvgUnionHorizAlt);
var UnionHorizAlt_default = ForwardRef1250;

// node_modules/iconoir-react/dist/esm/Union.mjs
var React1252 = __toESM(require_react(), 1);
var __assign1251 = function() {
  __assign1251 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1251.apply(this, arguments);
};
function SvgUnion(passedProps, svgRef) {
  var context = React1252.useContext(IconoirContext);
  var props = __assign1251(__assign1251({}, context), passedProps);
  return React1252.createElement(
    "svg",
    __assign1251({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1252.createElement("path", { d: "M15 9h5.4a.6.6 0 01.6.6v10.8a.6.6 0 01-.6.6H9.6a.6.6 0 01-.6-.6V15", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1252.createElement("path", { d: "M15 9V3.6a.6.6 0 00-.6-.6H3.6a.6.6 0 00-.6.6v10.8a.6.6 0 00.6.6H9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1251 = React1252.forwardRef(SvgUnion);
var Union_default = ForwardRef1251;

// node_modules/iconoir-react/dist/esm/Unity5.mjs
var React1253 = __toESM(require_react(), 1);
var __assign1252 = function() {
  __assign1252 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1252.apply(this, arguments);
};
function SvgUnity5(passedProps, svgRef) {
  var context = React1253.useContext(IconoirContext);
  var props = __assign1252(__assign1252({}, context), passedProps);
  return React1253.createElement(
    "svg",
    __assign1252({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1253.createElement("path", { d: "M11.672 20.786a.6.6 0 00.656 0l9.284-6.062a.6.6 0 00.24-.694L18.285 3.41A.6.6 0 0017.716 3H6.221a.6.6 0 00-.57.412l-3.506 10.62a.6.6 0 00.241.69l9.286 6.064z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1253.createElement("path", { d: "M14.5 6H10l-.5 5a3 3 0 110 3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1252 = React1253.forwardRef(SvgUnity5);
var Unity5_default = ForwardRef1252;

// node_modules/iconoir-react/dist/esm/Unity.mjs
var React1254 = __toESM(require_react(), 1);
var __assign1253 = function() {
  __assign1253 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1253.apply(this, arguments);
};
function SvgUnity(passedProps, svgRef) {
  var context = React1254.useContext(IconoirContext);
  var props = __assign1253(__assign1253({}, context), passedProps);
  return React1254.createElement(
    "svg",
    __assign1253({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1254.createElement(
      "g",
      { clipPath: "url(#unity_svg__clip0)" },
      React1254.createElement("path", { d: "M4 13h9.5M4 13l4 4.5M4 13l4-4.5m5.5 4.5l5-9m-5 9l5 7m0-16l-6 1m6-1L20 9.5M18.5 20l1.5-5.5M18.5 20l-6-.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
    ),
    React1254.createElement(
      "defs",
      null,
      React1254.createElement(
        "clipPath",
        { id: "unity_svg__clip0" },
        React1254.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1253 = React1254.forwardRef(SvgUnity);
var Unity_default = ForwardRef1253;

// node_modules/iconoir-react/dist/esm/Unjoin3D.mjs
var React1255 = __toESM(require_react(), 1);
var __assign1254 = function() {
  __assign1254 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1254.apply(this, arguments);
};
function SvgUnjoin3D(passedProps, svgRef) {
  var context = React1255.useContext(IconoirContext);
  var props = __assign1254(__assign1254({}, context), passedProps);
  return React1255.createElement(
    "svg",
    __assign1254({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1255.createElement("path", { d: "M11.5 7L9 12h6l-2.5 5M20.839 20.84h-3.536m3.536 0v-3.537m0 3.536L17 17M2.768 2.768h3.535m-3.535 0v3.535m0-3.535l3.839 3.839", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1254 = React1255.forwardRef(SvgUnjoin3D);
var Unjoin3D_default = ForwardRef1254;

// node_modules/iconoir-react/dist/esm/UpRoundArrow.mjs
var React1256 = __toESM(require_react(), 1);
var __assign1255 = function() {
  __assign1255 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1255.apply(this, arguments);
};
function SvgUpRoundArrow(passedProps, svgRef) {
  var context = React1256.useContext(IconoirContext);
  var props = __assign1255(__assign1255({}, context), passedProps);
  return React1256.createElement(
    "svg",
    __assign1255({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1256.createElement("path", { d: "M14.5 13.25l-2.5-2.5-2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1256.createElement("path", { d: "M6 5h12a4 4 0 014 4v6a4 4 0 01-4 4H6a4 4 0 01-4-4V9a4 4 0 014-4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1255 = React1256.forwardRef(SvgUpRoundArrow);
var UpRoundArrow_default = ForwardRef1255;

// node_modules/iconoir-react/dist/esm/UploadDataWindow.mjs
var React1257 = __toESM(require_react(), 1);
var __assign1256 = function() {
  __assign1256 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1256.apply(this, arguments);
};
function SvgUploadDataWindow(passedProps, svgRef) {
  var context = React1257.useContext(IconoirContext);
  var props = __assign1256(__assign1256({}, context), passedProps);
  return React1257.createElement(
    "svg",
    __assign1256({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1257.createElement("path", { d: "M14 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v9", stroke: "currentColor", strokeLinecap: "round" }),
    React1257.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M19.5 22v-6m0 0L17 18.5m2.5-2.5l2.5 2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1256 = React1257.forwardRef(SvgUploadDataWindow);
var UploadDataWindow_default = ForwardRef1256;

// node_modules/iconoir-react/dist/esm/UploadSquare.mjs
var React1258 = __toESM(require_react(), 1);
var __assign1257 = function() {
  __assign1257 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1257.apply(this, arguments);
};
function SvgUploadSquare(passedProps, svgRef) {
  var context = React1258.useContext(IconoirContext);
  var props = __assign1257(__assign1257({}, context), passedProps);
  return React1258.createElement(
    "svg",
    __assign1257({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1258.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React1258.createElement("path", { d: "M6 18h12M12 14V6m0 0l3.5 3.5M12 6L8.5 9.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1257 = React1258.forwardRef(SvgUploadSquare);
var UploadSquare_default = ForwardRef1257;

// node_modules/iconoir-react/dist/esm/Upload.mjs
var React1259 = __toESM(require_react(), 1);
var __assign1258 = function() {
  __assign1258 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1258.apply(this, arguments);
};
function SvgUpload(passedProps, svgRef) {
  var context = React1259.useContext(IconoirContext);
  var props = __assign1258(__assign1258({}, context), passedProps);
  return React1259.createElement(
    "svg",
    __assign1258({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1259.createElement("path", { d: "M6 20h12M12 16V4m0 0l3.5 3.5M12 4L8.5 7.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1258 = React1259.forwardRef(SvgUpload);
var Upload_default = ForwardRef1258;

// node_modules/iconoir-react/dist/esm/Usb.mjs
var React1260 = __toESM(require_react(), 1);
var __assign1259 = function() {
  __assign1259 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1259.apply(this, arguments);
};
function SvgUsb(passedProps, svgRef) {
  var context = React1260.useContext(IconoirContext);
  var props = __assign1259(__assign1259({}, context), passedProps);
  return React1260.createElement(
    "svg",
    __assign1259({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1260.createElement("path", { d: "M12.5 2v15M12.5 14l5.5-2V8.5M12.5 16L7 14.5v-3M12.5 22a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM16.5 5.5v3h3v-3h-3zM10.5 4l2-2 2 2M7 11a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1259 = React1260.forwardRef(SvgUsb);
var Usb_default = ForwardRef1259;

// node_modules/iconoir-react/dist/esm/UserBag.mjs
var React1261 = __toESM(require_react(), 1);
var __assign1260 = function() {
  __assign1260 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1260.apply(this, arguments);
};
function SvgUserBag(passedProps, svgRef) {
  var context = React1261.useContext(IconoirContext);
  var props = __assign1260(__assign1260({}, context), passedProps);
  return React1261.createElement(
    "svg",
    __assign1260({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1261.createElement("path", { d: "M9 11a4 4 0 100-8 4 4 0 000 8zM2 18a7 7 0 0111.33-5.5M21.364 16.707l.296 2A2 2 0 0119.682 21h-3.364a2 2 0 01-1.978-2.293l.296-2A2 2 0 0116.614 15h2.772a2 2 0 011.978 1.707zM17 13h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1260 = React1261.forwardRef(SvgUserBag);
var UserBag_default = ForwardRef1260;

// node_modules/iconoir-react/dist/esm/UserCart.mjs
var React1262 = __toESM(require_react(), 1);
var __assign1261 = function() {
  __assign1261 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1261.apply(this, arguments);
};
function SvgUserCart(passedProps, svgRef) {
  var context = React1262.useContext(IconoirContext);
  var props = __assign1261(__assign1261({}, context), passedProps);
  return React1262.createElement(
    "svg",
    __assign1261({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1262.createElement("path", { d: "M22 12.5l-.833 2.5m0 0L20 18.5h-4.5l-1-3.5h6.667zM16.5 20.51l.01-.011M19.5 20.51l.01-.011M9 11a4 4 0 100-8 4 4 0 000 8zM2 18a7 7 0 0111.33-5.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1261 = React1262.forwardRef(SvgUserCart);
var UserCart_default = ForwardRef1261;

// node_modules/iconoir-react/dist/esm/UserCircle.mjs
var React1263 = __toESM(require_react(), 1);
var __assign1262 = function() {
  __assign1262 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1262.apply(this, arguments);
};
function SvgUserCircle(passedProps, svgRef) {
  var context = React1263.useContext(IconoirContext);
  var props = __assign1262(__assign1262({}, context), passedProps);
  return React1263.createElement(
    "svg",
    __assign1262({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1263.createElement("path", { d: "M7 18v-1a5 5 0 015-5v0a5 5 0 015 5v1", stroke: "currentColor", strokeLinecap: "round" }),
    React1263.createElement("path", { d: "M12 12a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1263.createElement("circle", { cx: 12, cy: 12, r: 10, stroke: "currentColor" })
  );
}
var ForwardRef1262 = React1263.forwardRef(SvgUserCircle);
var UserCircle_default = ForwardRef1262;

// node_modules/iconoir-react/dist/esm/UserCrown.mjs
var React1264 = __toESM(require_react(), 1);
var __assign1263 = function() {
  __assign1263 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1263.apply(this, arguments);
};
function SvgUserCrown(passedProps, svgRef) {
  var context = React1264.useContext(IconoirContext);
  var props = __assign1263(__assign1263({}, context), passedProps);
  return React1264.createElement(
    "svg",
    __assign1263({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1264.createElement("path", { d: "M12 12a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1264.createElement("path", { d: "M5 20v-1a7 7 0 0110-6.326M21 22l1-6-3.5 1.8L17 16l-1.5 1.8L12 16l1 6h8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1263 = React1264.forwardRef(SvgUserCrown);
var UserCrown_default = ForwardRef1263;

// node_modules/iconoir-react/dist/esm/UserLove.mjs
var React1265 = __toESM(require_react(), 1);
var __assign1264 = function() {
  __assign1264 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1264.apply(this, arguments);
};
function SvgUserLove(passedProps, svgRef) {
  var context = React1265.useContext(IconoirContext);
  var props = __assign1264(__assign1264({}, context), passedProps);
  return React1265.createElement(
    "svg",
    __assign1264({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1265.createElement("path", { d: "M12 12a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1265.createElement("path", { d: "M22 17.28a2.28 2.28 0 01-.662 1.606c-.976.984-1.923 2.01-2.936 2.958a.597.597 0 01-.823-.017l-2.918-2.94a2.281 2.281 0 010-3.214 2.277 2.277 0 013.233 0l.106.107.106-.107A2.277 2.277 0 0122 17.28z", stroke: "currentColor", strokeLinejoin: "round" }),
    React1265.createElement("path", { d: "M5 20v-1a7 7 0 0110-6.326", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1264 = React1265.forwardRef(SvgUserLove);
var UserLove_default = ForwardRef1264;

// node_modules/iconoir-react/dist/esm/UserScan.mjs
var React1266 = __toESM(require_react(), 1);
var __assign1265 = function() {
  __assign1265 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1265.apply(this, arguments);
};
function SvgUserScan(passedProps, svgRef) {
  var context = React1266.useContext(IconoirContext);
  var props = __assign1265(__assign1265({}, context), passedProps);
  return React1266.createElement(
    "svg",
    __assign1265({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1266.createElement("path", { d: "M6 3H3v3M18 3h3v3M6 21H3v-3M7 18v-1a5 5 0 015-5v0a5 5 0 015 5v1M12 12a3 3 0 100-6 3 3 0 000 6zM18 21h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1265 = React1266.forwardRef(SvgUserScan);
var UserScan_default = ForwardRef1265;

// node_modules/iconoir-react/dist/esm/UserSquare.mjs
var React1267 = __toESM(require_react(), 1);
var __assign1266 = function() {
  __assign1266 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1266.apply(this, arguments);
};
function SvgUserSquare(passedProps, svgRef) {
  var context = React1267.useContext(IconoirContext);
  var props = __assign1266(__assign1266({}, context), passedProps);
  return React1267.createElement(
    "svg",
    __assign1266({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1267.createElement("path", { d: "M7 18v-1a5 5 0 015-5v0a5 5 0 015 5v1", stroke: "currentColor", strokeLinecap: "round" }),
    React1267.createElement("path", { d: "M12 12a3 3 0 100-6 3 3 0 000 6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1267.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1266 = React1267.forwardRef(SvgUserSquare);
var UserSquare_default = ForwardRef1266;

// node_modules/iconoir-react/dist/esm/UserStar.mjs
var React1268 = __toESM(require_react(), 1);
var __assign1267 = function() {
  __assign1267 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1267.apply(this, arguments);
};
function SvgUserStar(passedProps, svgRef) {
  var context = React1268.useContext(IconoirContext);
  var props = __assign1267(__assign1267({}, context), passedProps);
  return React1268.createElement(
    "svg",
    __assign1267({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1268.createElement("path", { d: "M12 12a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1268.createElement("path", { d: "M5 20v-1a7 7 0 0110-6.326M16.635 16.415l1.039-2.203a.357.357 0 01.652 0l1.04 2.203 2.323.356c.298.045.416.429.2.649l-1.68 1.713.396 2.421c.051.311-.26.548-.527.401L18 20.812l-2.078 1.143c-.267.147-.578-.09-.527-.4l.396-2.422-1.68-1.713c-.216-.22-.098-.604.2-.65l2.324-.355z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1267 = React1268.forwardRef(SvgUserStar);
var UserStar_default = ForwardRef1267;

// node_modules/iconoir-react/dist/esm/User.mjs
var React1269 = __toESM(require_react(), 1);
var __assign1268 = function() {
  __assign1268 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1268.apply(this, arguments);
};
function SvgUser(passedProps, svgRef) {
  var context = React1269.useContext(IconoirContext);
  var props = __assign1268(__assign1268({}, context), passedProps);
  return React1269.createElement(
    "svg",
    __assign1268({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1269.createElement("path", { d: "M5 20v-1a7 7 0 017-7v0a7 7 0 017 7v1M12 12a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1268 = React1269.forwardRef(SvgUser);
var User_default = ForwardRef1268;

// node_modules/iconoir-react/dist/esm/VeganCircle.mjs
var React1270 = __toESM(require_react(), 1);
var __assign1269 = function() {
  __assign1269 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1269.apply(this, arguments);
};
function SvgVeganCircle(passedProps, svgRef) {
  var context = React1270.useContext(IconoirContext);
  var props = __assign1269(__assign1269({}, context), passedProps);
  return React1270.createElement(
    "svg",
    __assign1269({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1270.createElement("path", { d: "M14.5 11.5C12.75 13.382 11 18 11 18s-2.5-6.5-5-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1270.createElement("path", { d: "M18.015 7.73l.297 3.08c.192 1.998-1.306 3.777-3.304 3.97-1.96.188-3.736-1.245-3.925-3.205a3.566 3.566 0 013.208-3.892l3.284-.316a.404.404 0 01.44.363z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1270.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1269 = React1270.forwardRef(SvgVeganCircle);
var VeganCircle_default = ForwardRef1269;

// node_modules/iconoir-react/dist/esm/VeganSquare.mjs
var React1271 = __toESM(require_react(), 1);
var __assign1270 = function() {
  __assign1270 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1270.apply(this, arguments);
};
function SvgVeganSquare(passedProps, svgRef) {
  var context = React1271.useContext(IconoirContext);
  var props = __assign1270(__assign1270({}, context), passedProps);
  return React1271.createElement(
    "svg",
    __assign1270({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1271.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1271.createElement("path", { d: "M14.5 10.5C12.75 12.382 11 17 11 17s-2.5-6.5-5-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1271.createElement("path", { d: "M18.015 6.73l.297 3.08c.192 1.998-1.306 3.777-3.304 3.97-1.96.188-3.736-1.245-3.925-3.205a3.566 3.566 0 013.208-3.892l3.284-.316a.404.404 0 01.44.363z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1270 = React1271.forwardRef(SvgVeganSquare);
var VeganSquare_default = ForwardRef1270;

// node_modules/iconoir-react/dist/esm/Vegan.mjs
var React1272 = __toESM(require_react(), 1);
var __assign1271 = function() {
  __assign1271 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1271.apply(this, arguments);
};
function SvgVegan(passedProps, svgRef) {
  var context = React1272.useContext(IconoirContext);
  var props = __assign1271(__assign1271({}, context), passedProps);
  return React1272.createElement(
    "svg",
    __assign1271({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1272.createElement("path", { d: "M15 11.063C12.53 13.65 10.059 20 10.059 20S6.529 11.062 3 9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1272.createElement("path", { d: "M20.496 5.577l.426 4.424c.276 2.87-1.875 5.425-4.745 5.702-2.816.27-5.367-1.788-5.638-4.604a5.122 5.122 0 014.608-5.59l4.716-.454a.58.58 0 01.633.522z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1271 = React1272.forwardRef(SvgVegan);
var Vegan_default = ForwardRef1271;

// node_modules/iconoir-react/dist/esm/VerifiedBadge.mjs
var React1273 = __toESM(require_react(), 1);
var __assign1272 = function() {
  __assign1272 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1272.apply(this, arguments);
};
function SvgVerifiedBadge(passedProps, svgRef) {
  var context = React1273.useContext(IconoirContext);
  var props = __assign1272(__assign1272({}, context), passedProps);
  return React1273.createElement(
    "svg",
    __assign1272({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1273.createElement("path", { d: "M11.528 1.6a.6.6 0 01.944 0l1.809 2.3a.6.6 0 00.635.207l2.815-.798a.6.6 0 01.764.554l.11 2.925a.6.6 0 00.393.54l2.747 1.01a.6.6 0 01.292.897l-1.63 2.431a.6.6 0 000 .668l1.63 2.431a.6.6 0 01-.292.897l-2.747 1.01a.6.6 0 00-.392.54l-.111 2.925a.6.6 0 01-.764.554l-2.815-.798a.6.6 0 00-.636.206L12.473 22.4a.6.6 0 01-.944 0L9.72 20.1a.6.6 0 00-.635-.207l-2.815.798a.6.6 0 01-.764-.554l-.11-2.925a.6.6 0 00-.393-.54l-2.747-1.01a.6.6 0 01-.292-.897l1.63-2.431a.6.6 0 000-.668l-1.63-2.431a.6.6 0 01.292-.897l2.747-1.01a.6.6 0 00.392-.54l.111-2.925a.6.6 0 01.764-.554l2.815.798A.6.6 0 009.72 3.9L11.53 1.6z", stroke: "currentColor" }),
    React1273.createElement("path", { d: "M9 12l2 2 4-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1272 = React1273.forwardRef(SvgVerifiedBadge);
var VerifiedBadge_default = ForwardRef1272;

// node_modules/iconoir-react/dist/esm/VerifiedUser.mjs
var React1274 = __toESM(require_react(), 1);
var __assign1273 = function() {
  __assign1273 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1273.apply(this, arguments);
};
function SvgVerifiedUser(passedProps, svgRef) {
  var context = React1274.useContext(IconoirContext);
  var props = __assign1273(__assign1273({}, context), passedProps);
  return React1274.createElement(
    "svg",
    __assign1273({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1274.createElement("path", { d: "M2 20v-1a7 7 0 017-7v0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1274.createElement("path", { d: "M15.804 12.313a1.618 1.618 0 012.392 0v0c.325.357.79.55 1.272.527v0a1.618 1.618 0 011.692 1.692v0c-.023.481.17.947.526 1.272v0c.705.642.705 1.75 0 2.392v0c-.356.325-.549.79-.526 1.272v0a1.618 1.618 0 01-1.692 1.692v0a1.618 1.618 0 00-1.272.526v0a1.618 1.618 0 01-2.392 0v0a1.618 1.618 0 00-1.272-.526v0a1.618 1.618 0 01-1.692-1.692v0a1.618 1.618 0 00-.527-1.272v0a1.618 1.618 0 010-2.392v0c.357-.325.55-.79.527-1.272v0a1.618 1.618 0 011.692-1.692v0c.481.023.947-.17 1.272-.527v0z", stroke: "currentColor" }),
    React1274.createElement("path", { d: "M15.364 17l1.09 1.09 2.182-2.18M9 12a4 4 0 100-8 4 4 0 000 8z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1273 = React1274.forwardRef(SvgVerifiedUser);
var VerifiedUser_default = ForwardRef1273;

// node_modules/iconoir-react/dist/esm/VerticalMerge.mjs
var React1275 = __toESM(require_react(), 1);
var __assign1274 = function() {
  __assign1274 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1274.apply(this, arguments);
};
function SvgVerticalMerge(passedProps, svgRef) {
  var context = React1275.useContext(IconoirContext);
  var props = __assign1274(__assign1274({}, context), passedProps);
  return React1275.createElement(
    "svg",
    __assign1274({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1275.createElement("path", { d: "M12 2v8m0 0l3.5-3.5M12 10L8.5 6.5M12 22v-8m0 0l3.5 3.5M12 14l-3.5 3.5M3 14h18M3 10h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1274 = React1275.forwardRef(SvgVerticalMerge);
var VerticalMerge_default = ForwardRef1274;

// node_modules/iconoir-react/dist/esm/VerticalSplit.mjs
var React1276 = __toESM(require_react(), 1);
var __assign1275 = function() {
  __assign1275 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1275.apply(this, arguments);
};
function SvgVerticalSplit(passedProps, svgRef) {
  var context = React1276.useContext(IconoirContext);
  var props = __assign1275(__assign1275({}, context), passedProps);
  return React1276.createElement(
    "svg",
    __assign1275({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1276.createElement("path", { d: "M12 14v8m0 0l3.5-3.5M12 22l-3.5-3.5M12 10V2m0 0l3.5 3.5M12 2L8.5 5.5M3 14h18M3 10h18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1275 = React1276.forwardRef(SvgVerticalSplit);
var VerticalSplit_default = ForwardRef1275;

// node_modules/iconoir-react/dist/esm/Vials.mjs
var React1277 = __toESM(require_react(), 1);
var __assign1276 = function() {
  __assign1276 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1276.apply(this, arguments);
};
function SvgVials(passedProps, svgRef) {
  var context = React1277.useContext(IconoirContext);
  var props = __assign1276(__assign1276({}, context), passedProps);
  return React1277.createElement(
    "svg",
    __assign1276({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1277.createElement("path", { d: "M21 21H3M9 12H5M19 12h-4M7 18a2 2 0 01-2-2V3h4v13a2 2 0 01-2 2zM17 18a2 2 0 01-2-2V3h4v13a2 2 0 01-2 2z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1276 = React1277.forwardRef(SvgVials);
var Vials_default = ForwardRef1276;

// node_modules/iconoir-react/dist/esm/VideoCameraOff.mjs
var React1278 = __toESM(require_react(), 1);
var __assign1277 = function() {
  __assign1277 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1277.apply(this, arguments);
};
function SvgVideoCameraOff(passedProps, svgRef) {
  var context = React1278.useContext(IconoirContext);
  var props = __assign1277(__assign1277({}, context), passedProps);
  return React1278.createElement(
    "svg",
    __assign1277({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1278.createElement("path", { d: "M6.5 7H3.6a.6.6 0 00-.6.6v8.8a.6.6 0 00.6.6h10.8a.6.6 0 00.6-.6V15m-3.5-8h2.9a.6.6 0 01.6.6v3.119a.6.6 0 00.984.46l4.032-3.359a.6.6 0 01.984.461V15.5M3 3l18 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1277 = React1278.forwardRef(SvgVideoCameraOff);
var VideoCameraOff_default = ForwardRef1277;

// node_modules/iconoir-react/dist/esm/VideoCamera.mjs
var React1279 = __toESM(require_react(), 1);
var __assign1278 = function() {
  __assign1278 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1278.apply(this, arguments);
};
function SvgVideoCamera(passedProps, svgRef) {
  var context = React1279.useContext(IconoirContext);
  var props = __assign1278(__assign1278({}, context), passedProps);
  return React1279.createElement(
    "svg",
    __assign1278({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1279.createElement("path", { d: "M15 12v4.4a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6h10.8a.6.6 0 01.6.6V12zm0 0l5.016-4.18a.6.6 0 01.984.461v7.438a.6.6 0 01-.984.46L15 12z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1278 = React1279.forwardRef(SvgVideoCamera);
var VideoCamera_default = ForwardRef1278;

// node_modules/iconoir-react/dist/esm/VideoProjector.mjs
var React1280 = __toESM(require_react(), 1);
var __assign1279 = function() {
  __assign1279 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1279.apply(this, arguments);
};
function SvgVideoProjector(passedProps, svgRef) {
  var context = React1280.useContext(IconoirContext);
  var props = __assign1279(__assign1279({}, context), passedProps);
  return React1280.createElement(
    "svg",
    __assign1279({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1280.createElement("path", { d: "M4 19h2M18 19h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1280.createElement("path", { d: "M2 16.4V7.6a.6.6 0 01.6-.6h18.8a.6.6 0 01.6.6v8.8a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React1280.createElement("path", { d: "M5 10.01l.01-.011M8 10.01l.01-.011M11 10.01l.01-.011M5 14.01l.01-.011M8 14.01l.01-.011M11 14.01l.01-.011M17 14a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1279 = React1280.forwardRef(SvgVideoProjector);
var VideoProjector_default = ForwardRef1279;

// node_modules/iconoir-react/dist/esm/ViewColumns2.mjs
var React1281 = __toESM(require_react(), 1);
var __assign1280 = function() {
  __assign1280 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1280.apply(this, arguments);
};
function SvgViewColumns2(passedProps, svgRef) {
  var context = React1281.useContext(IconoirContext);
  var props = __assign1280(__assign1280({}, context), passedProps);
  return React1281.createElement(
    "svg",
    __assign1280({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1281.createElement("path", { d: "M12 3h8.4a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H12m0-18H3.6a.6.6 0 00-.6.6v16.8a.6.6 0 00.6.6H12m0-18v18", stroke: "currentColor" })
  );
}
var ForwardRef1280 = React1281.forwardRef(SvgViewColumns2);
var ViewColumns2_default = ForwardRef1280;

// node_modules/iconoir-react/dist/esm/ViewColumns3.mjs
var React1282 = __toESM(require_react(), 1);
var __assign1281 = function() {
  __assign1281 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1281.apply(this, arguments);
};
function SvgViewColumns3(passedProps, svgRef) {
  var context = React1282.useContext(IconoirContext);
  var props = __assign1281(__assign1281({}, context), passedProps);
  return React1282.createElement(
    "svg",
    __assign1281({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1282.createElement("path", { d: "M9 3H3.6a.6.6 0 00-.6.6v16.8a.6.6 0 00.6.6H9M9 3v18M9 3h6M9 21h6m0-18h5.4a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H15m0-18v18", stroke: "currentColor" })
  );
}
var ForwardRef1281 = React1282.forwardRef(SvgViewColumns3);
var ViewColumns3_default = ForwardRef1281;

// node_modules/iconoir-react/dist/esm/ViewGrid.mjs
var React1283 = __toESM(require_react(), 1);
var __assign1282 = function() {
  __assign1282 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1282.apply(this, arguments);
};
function SvgViewGrid(passedProps, svgRef) {
  var context = React1283.useContext(IconoirContext);
  var props = __assign1282(__assign1282({}, context), passedProps);
  return React1283.createElement(
    "svg",
    __assign1282({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1283.createElement("path", { d: "M14 20.4v-5.8a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6h-5.8a.6.6 0 01-.6-.6zM3 20.4v-5.8a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6zM14 9.4V3.6a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6h-5.8a.6.6 0 01-.6-.6zM3 9.4V3.6a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1282 = React1283.forwardRef(SvgViewGrid);
var ViewGrid_default = ForwardRef1282;

// node_modules/iconoir-react/dist/esm/ViewStructureDown.mjs
var React1284 = __toESM(require_react(), 1);
var __assign1283 = function() {
  __assign1283 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1283.apply(this, arguments);
};
function SvgViewStructureDown(passedProps, svgRef) {
  var context = React1284.useContext(IconoirContext);
  var props = __assign1283(__assign1283({}, context), passedProps);
  return React1284.createElement(
    "svg",
    __assign1283({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1284.createElement("path", { d: "M3 20.4v-5.8a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6zM14 9.4V3.6a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6h-5.8a.6.6 0 01-.6-.6zM3 9.4V3.6a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1283 = React1284.forwardRef(SvgViewStructureDown);
var ViewStructureDown_default = ForwardRef1283;

// node_modules/iconoir-react/dist/esm/ViewStructureUp.mjs
var React1285 = __toESM(require_react(), 1);
var __assign1284 = function() {
  __assign1284 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1284.apply(this, arguments);
};
function SvgViewStructureUp(passedProps, svgRef) {
  var context = React1285.useContext(IconoirContext);
  var props = __assign1284(__assign1284({}, context), passedProps);
  return React1285.createElement(
    "svg",
    __assign1284({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1285.createElement("path", { d: "M3 9.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6zM14 20.4v-5.8a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6h-5.8a.6.6 0 01-.6-.6zM3 20.4v-5.8a.6.6 0 01.6-.6h5.8a.6.6 0 01.6.6v5.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1284 = React1285.forwardRef(SvgViewStructureUp);
var ViewStructureUp_default = ForwardRef1284;

// node_modules/iconoir-react/dist/esm/View360.mjs
var React1286 = __toESM(require_react(), 1);
var __assign1285 = function() {
  __assign1285 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1285.apply(this, arguments);
};
function SvgView360(passedProps, svgRef) {
  var context = React1286.useContext(IconoirContext);
  var props = __assign1285(__assign1285({}, context), passedProps);
  return React1286.createElement(
    "svg",
    __assign1285({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1286.createElement("path", { d: "M4 8.5h1.75m0 0a1.75 1.75 0 110 3.5H3m2.75-3.5a1.75 1.75 0 100-3.5H3M21 15c0 3.314-4.03 6-9 6s-9-2.686-9-6M14 5h-1a3 3 0 00-3 3v2m4.5-.5v.5a2 2 0 01-2 2H12a2 2 0 01-2-2v-.5a2 2 0 012-2h.5a2 2 0 012 2zM17 8.5V7a2 2 0 012-2h.5a2 2 0 012 2v3a2 2 0 01-2 2H19a2 2 0 01-2-2V8.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1285 = React1286.forwardRef(SvgView360);
var View360_default = ForwardRef1285;

// node_modules/iconoir-react/dist/esm/VoiceCircle.mjs
var React1287 = __toESM(require_react(), 1);
var __assign1286 = function() {
  __assign1286 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1286.apply(this, arguments);
};
function SvgVoiceCircle(passedProps, svgRef) {
  var context = React1287.useContext(IconoirContext);
  var props = __assign1286(__assign1286({}, context), passedProps);
  return React1287.createElement(
    "svg",
    __assign1286({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1287.createElement("path", { d: "M12 6v12M9 9v6M18 11v2M6 11v2M15 7v10M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1286 = React1287.forwardRef(SvgVoiceCircle);
var VoiceCircle_default = ForwardRef1286;

// node_modules/iconoir-react/dist/esm/VoiceError.mjs
var React1288 = __toESM(require_react(), 1);
var __assign1287 = function() {
  __assign1287 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1287.apply(this, arguments);
};
function SvgVoiceError(passedProps, svgRef) {
  var context = React1288.useContext(IconoirContext);
  var props = __assign1287(__assign1287({}, context), passedProps);
  return React1288.createElement(
    "svg",
    __assign1287({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1288.createElement("path", { d: "M12 3v16M8 8v6M20 9v4M4 9v4M16 6v8M16.121 21.364l2.122-2.121m0 0l2.121-2.122m-2.121 2.122L16.12 17.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1287 = React1288.forwardRef(SvgVoiceError);
var VoiceError_default = ForwardRef1287;

// node_modules/iconoir-react/dist/esm/VoiceLockCircle.mjs
var React1289 = __toESM(require_react(), 1);
var __assign1288 = function() {
  __assign1288 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1288.apply(this, arguments);
};
function SvgVoiceLockCircle(passedProps, svgRef) {
  var context = React1289.useContext(IconoirContext);
  var props = __assign1288(__assign1288({}, context), passedProps);
  return React1289.createElement(
    "svg",
    __assign1288({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1289.createElement("path", { d: "M14 21.8c-.646.131-1.315.2-2 .2-5.523 0-10-4.477-10-10S6.477 2 12 2s10 4.477 10 10c0 .254-.01.506-.028.755M12 6v12M9 9v6M18 11v2M6 11v2M15 7v10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1289.createElement("path", { d: "M21.167 18.5h.233a.6.6 0 01.6.6v2.3a.6.6 0 01-.6.6h-3.8a.6.6 0 01-.6-.6v-2.3a.6.6 0 01.6-.6h.233m3.334 0v-1.75c0-.583-.334-1.75-1.667-1.75s-1.667 1.167-1.667 1.75v1.75m3.334 0h-3.334", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1288 = React1289.forwardRef(SvgVoiceLockCircle);
var VoiceLockCircle_default = ForwardRef1288;

// node_modules/iconoir-react/dist/esm/VoiceOk.mjs
var React1290 = __toESM(require_react(), 1);
var __assign1289 = function() {
  __assign1289 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1289.apply(this, arguments);
};
function SvgVoiceOk(passedProps, svgRef) {
  var context = React1290.useContext(IconoirContext);
  var props = __assign1289(__assign1289({}, context), passedProps);
  return React1290.createElement(
    "svg",
    __assign1289({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1290.createElement("path", { d: "M12 3v16M8 8v6M20 9v4M4 9v4M16 6v9M15.5 19.5l2 2 5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1289 = React1290.forwardRef(SvgVoiceOk);
var VoiceOk_default = ForwardRef1289;

// node_modules/iconoir-react/dist/esm/VoicePhone.mjs
var React1291 = __toESM(require_react(), 1);
var __assign1290 = function() {
  __assign1290 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1290.apply(this, arguments);
};
function SvgVoicePhone(passedProps, svgRef) {
  var context = React1291.useContext(IconoirContext);
  var props = __assign1290(__assign1290({}, context), passedProps);
  return React1291.createElement(
    "svg",
    __assign1290({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1291.createElement("path", { d: "M8 17.01l.01-.011M8 5H3.6a.6.6 0 00-.6.6v14.8a.6.6 0 00.6.6h8.8a.6.6 0 00.6-.6V16M16 3v10M13 5v6M22 7v2M10 7v2M19 4v8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1290 = React1291.forwardRef(SvgVoicePhone);
var VoicePhone_default = ForwardRef1290;

// node_modules/iconoir-react/dist/esm/VoiceScan.mjs
var React1292 = __toESM(require_react(), 1);
var __assign1291 = function() {
  __assign1291 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1291.apply(this, arguments);
};
function SvgVoiceScan(passedProps, svgRef) {
  var context = React1292.useContext(IconoirContext);
  var props = __assign1291(__assign1291({}, context), passedProps);
  return React1292.createElement(
    "svg",
    __assign1291({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1292.createElement("path", { d: "M12 6v12M9 9v6M18 11v2M6 11v2M15 7v10M6 3H3v3M18 3h3v3M6 21H3v-3M18 21h3v-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1291 = React1292.forwardRef(SvgVoiceScan);
var VoiceScan_default = ForwardRef1291;

// node_modules/iconoir-react/dist/esm/VoiceSquare.mjs
var React1293 = __toESM(require_react(), 1);
var __assign1292 = function() {
  __assign1292 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1292.apply(this, arguments);
};
function SvgVoiceSquare(passedProps, svgRef) {
  var context = React1293.useContext(IconoirContext);
  var props = __assign1292(__assign1292({}, context), passedProps);
  return React1293.createElement(
    "svg",
    __assign1292({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1293.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM12 6v12M9 9v6M18 11v2M6 11v2M15 7v10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1292 = React1293.forwardRef(SvgVoiceSquare);
var VoiceSquare_default = ForwardRef1292;

// node_modules/iconoir-react/dist/esm/Voice.mjs
var React1294 = __toESM(require_react(), 1);
var __assign1293 = function() {
  __assign1293 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1293.apply(this, arguments);
};
function SvgVoice(passedProps, svgRef) {
  var context = React1294.useContext(IconoirContext);
  var props = __assign1293(__assign1293({}, context), passedProps);
  return React1294.createElement(
    "svg",
    __assign1293({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1294.createElement("path", { d: "M12 4v16M8 9v6M20 10v4M4 10v4M16 7v10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1293 = React1294.forwardRef(SvgVoice);
var Voice_default = ForwardRef1293;

// node_modules/iconoir-react/dist/esm/VrSymbol.mjs
var React1295 = __toESM(require_react(), 1);
var __assign1294 = function() {
  __assign1294 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1294.apply(this, arguments);
};
function SvgVrSymbol(passedProps, svgRef) {
  var context = React1295.useContext(IconoirContext);
  var props = __assign1294(__assign1294({}, context), passedProps);
  return React1295.createElement(
    "svg",
    __assign1294({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1295.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React1295.createElement("path", { d: "M13 15.5v-2.8m2.857 0c.714 0 2.143 0 2.143-2.1s-1.429-2.1-2.143-2.1H13v4.2m2.857 0H13m2.857 0L18 15.5M11 8.5l-3 7-3-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1294 = React1295.forwardRef(SvgVrSymbol);
var VrSymbol_default = ForwardRef1294;

// node_modules/iconoir-react/dist/esm/VueJs.mjs
var React1296 = __toESM(require_react(), 1);
var __assign1295 = function() {
  __assign1295 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1295.apply(this, arguments);
};
function SvgVueJs(passedProps, svgRef) {
  var context = React1296.useContext(IconoirContext);
  var props = __assign1295(__assign1295({}, context), passedProps);
  return React1296.createElement(
    "svg",
    __assign1295({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1296.createElement("path", { d: "M12 20.5L22.5 4h-4L12 14 5.5 4h-4L12 20.5z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1296.createElement("path", { d: "M18.5 4h-4L12 7.5 9.5 4h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1295 = React1296.forwardRef(SvgVueJs);
var VueJs_default = ForwardRef1295;

// node_modules/iconoir-react/dist/esm/Waist.mjs
var React1297 = __toESM(require_react(), 1);
var __assign1296 = function() {
  __assign1296 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1296.apply(this, arguments);
};
function SvgWaist(passedProps, svgRef) {
  var context = React1297.useContext(IconoirContext);
  var props = __assign1296(__assign1296({}, context), passedProps);
  return React1297.createElement(
    "svg",
    __assign1296({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1297.createElement("path", { d: "M18.4 4s-1.6 3.75-1.6 6.857c0 .995.34 1.827.8 2.656.528.954 1.214 1.903 1.717 3.09.399.943.683 2.034.683 3.397M5.6 4s1.6 3.75 1.6 6.857c0 .995-.34 1.827-.8 2.656-.528.954-1.214 1.903-1.717 3.09A8.483 8.483 0 004 20M6.4 13.513h11.2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1297.createElement("path", { d: "M4.683 16.604S10.4 17.713 12 20c1.6-2.286 7.317-3.396 7.317-3.396", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1296 = React1297.forwardRef(SvgWaist);
var Waist_default = ForwardRef1296;

// node_modules/iconoir-react/dist/esm/Walking.mjs
var React1298 = __toESM(require_react(), 1);
var __assign1297 = function() {
  __assign1297 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1297.apply(this, arguments);
};
function SvgWalking(passedProps, svgRef) {
  var context = React1298.useContext(IconoirContext);
  var props = __assign1297(__assign1297({}, context), passedProps);
  return React1298.createElement(
    "svg",
    __assign1297({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1298.createElement("path", { d: "M12.44 9.127l-1.408 5.635 4.93 6.339M10.328 18.284L8.215 21.1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1298.createElement("path", { d: "M8.215 13.353c0-3.944 2.817-4.226 4.226-4.226h1.408c.235 1.174 1.268 3.663 3.522 4.226M13 7a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1297 = React1298.forwardRef(SvgWalking);
var Walking_default = ForwardRef1297;

// node_modules/iconoir-react/dist/esm/Wallet.mjs
var React1299 = __toESM(require_react(), 1);
var __assign1298 = function() {
  __assign1298 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1298.apply(this, arguments);
};
function SvgWallet(passedProps, svgRef) {
  var context = React1299.useContext(IconoirContext);
  var props = __assign1298(__assign1298({}, context), passedProps);
  return React1299.createElement(
    "svg",
    __assign1298({ width: "1.5em", strokeWidth: 1.5, height: "1.5em", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1299.createElement("path", { d: "M19 20H5a2 2 0 01-2-2V9a2 2 0 012-2h14a2 2 0 012 2v9a2 2 0 01-2 2z", stroke: "currentColor" }),
    React1299.createElement("path", { d: "M16.5 14a.5.5 0 110-1 .5.5 0 010 1z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1299.createElement("path", { d: "M18 7V5.603a2 2 0 00-2.515-1.932l-11 2.933A2 2 0 003 8.537V9", stroke: "currentColor" })
  );
}
var ForwardRef1298 = React1299.forwardRef(SvgWallet);
var Wallet_default = ForwardRef1298;

// node_modules/iconoir-react/dist/esm/WarningCircle.mjs
var React1300 = __toESM(require_react(), 1);
var __assign1299 = function() {
  __assign1299 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1299.apply(this, arguments);
};
function SvgWarningCircle(passedProps, svgRef) {
  var context = React1300.useContext(IconoirContext);
  var props = __assign1299(__assign1299({}, context), passedProps);
  return React1300.createElement(
    "svg",
    __assign1299({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1300.createElement("path", { d: "M12 7v6M12 17.01l.01-.011M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1299 = React1300.forwardRef(SvgWarningCircle);
var WarningCircle_default = ForwardRef1299;

// node_modules/iconoir-react/dist/esm/WarningHexagon.mjs
var React1301 = __toESM(require_react(), 1);
var __assign1300 = function() {
  __assign1300 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1300.apply(this, arguments);
};
function SvgWarningHexagon(passedProps, svgRef) {
  var context = React1301.useContext(IconoirContext);
  var props = __assign1300(__assign1300({}, context), passedProps);
  return React1301.createElement(
    "svg",
    __assign1300({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1301.createElement("path", { d: "M1.173 12.3a.6.6 0 010-.6l5.154-8.926a.6.6 0 01.52-.3h10.307a.6.6 0 01.52.3l5.153 8.926a.6.6 0 010 .6l-5.154 8.926a.6.6 0 01-.52.3H6.847a.6.6 0 01-.52-.3L1.174 12.3zM12 8v4M12 16.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1300 = React1301.forwardRef(SvgWarningHexagon);
var WarningHexagon_default = ForwardRef1300;

// node_modules/iconoir-react/dist/esm/WarningSquare.mjs
var React1302 = __toESM(require_react(), 1);
var __assign1301 = function() {
  __assign1301 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1301.apply(this, arguments);
};
function SvgWarningSquare(passedProps, svgRef) {
  var context = React1302.useContext(IconoirContext);
  var props = __assign1301(__assign1301({}, context), passedProps);
  return React1302.createElement(
    "svg",
    __assign1301({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1302.createElement("path", { d: "M12 7v6M12 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1302.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" })
  );
}
var ForwardRef1301 = React1302.forwardRef(SvgWarningSquare);
var WarningSquare_default = ForwardRef1301;

// node_modules/iconoir-react/dist/esm/WarningTriangle.mjs
var React1303 = __toESM(require_react(), 1);
var __assign1302 = function() {
  __assign1302 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1302.apply(this, arguments);
};
function SvgWarningTriangle(passedProps, svgRef) {
  var context = React1303.useContext(IconoirContext);
  var props = __assign1302(__assign1302({}, context), passedProps);
  return React1303.createElement(
    "svg",
    __assign1302({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1303.createElement("path", { d: "M20.043 21H3.957c-1.538 0-2.5-1.664-1.734-2.997l8.043-13.988c.77-1.337 2.699-1.337 3.468 0l8.043 13.988C22.543 19.336 21.58 21 20.043 21zM12 9v4", stroke: "currentColor", strokeLinecap: "round" }),
    React1303.createElement("path", { d: "M12 17.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1302 = React1303.forwardRef(SvgWarningTriangle);
var WarningTriangle_default = ForwardRef1302;

// node_modules/iconoir-react/dist/esm/WarningWindow.mjs
var React1304 = __toESM(require_react(), 1);
var __assign1303 = function() {
  __assign1303 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1303.apply(this, arguments);
};
function SvgWarningWindow(passedProps, svgRef) {
  var context = React1304.useContext(IconoirContext);
  var props = __assign1303(__assign1303({}, context), passedProps);
  return React1304.createElement(
    "svg",
    __assign1303({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1304.createElement("path", { d: "M18 21H4a2 2 0 01-2-2V5a2 2 0 012-2h16a2 2 0 012 2v8", stroke: "currentColor", strokeLinecap: "round" }),
    React1304.createElement("path", { d: "M2 7h20M5 5.01l.01-.011M8 5.01l.01-.011M11 5.01l.01-.011M21 16v2M21 22.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1303 = React1304.forwardRef(SvgWarningWindow);
var WarningWindow_default = ForwardRef1303;

// node_modules/iconoir-react/dist/esm/Wash.mjs
var React1305 = __toESM(require_react(), 1);
var __assign1304 = function() {
  __assign1304 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1304.apply(this, arguments);
};
function SvgWash(passedProps, svgRef) {
  var context = React1305.useContext(IconoirContext);
  var props = __assign1304(__assign1304({}, context), passedProps);
  return React1305.createElement(
    "svg",
    __assign1304({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1305.createElement("path", { d: "M22 5l-1.954 12.314A2 2 0 0118.07 19H5.93a2 2 0 01-1.975-1.686L2 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1305.createElement("path", { d: "M21 11c-2 0-4.5-3-4.5-3s-2.149 3-4.5 3-4.5-3-4.5-3S5 11 3 11", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1304 = React1305.forwardRef(SvgWash);
var Wash_default = ForwardRef1304;

// node_modules/iconoir-react/dist/esm/WashingMachine.mjs
var React1306 = __toESM(require_react(), 1);
var __assign1305 = function() {
  __assign1305 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1305.apply(this, arguments);
};
function SvgWashingMachine(passedProps, svgRef) {
  var context = React1306.useContext(IconoirContext);
  var props = __assign1305(__assign1305({}, context), passedProps);
  return React1306.createElement(
    "svg",
    __assign1305({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1306.createElement("path", { d: "M21 4v16a2 2 0 01-2 2H5a2 2 0 01-2-2V4a2 2 0 012-2h14a2 2 0 012 2zM18 5.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1306.createElement("path", { d: "M12 19a6 6 0 100-12 6 6 0 000 12zM12 16a3 3 0 01-3-3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1305 = React1306.forwardRef(SvgWashingMachine);
var WashingMachine_default = ForwardRef1305;

// node_modules/iconoir-react/dist/esm/WateringSoil.mjs
var React1307 = __toESM(require_react(), 1);
var __assign1306 = function() {
  __assign1306 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1306.apply(this, arguments);
};
function SvgWateringSoil(passedProps, svgRef) {
  var context = React1307.useContext(IconoirContext);
  var props = __assign1306(__assign1306({}, context), passedProps);
  return React1307.createElement(
    "svg",
    __assign1306({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1307.createElement("path", { d: "M2 12h2M20 12h2M3 20.01l.01-.011M6 16.01l.01-.011M9 20.01l.01-.011M15 20.01l.01-.011M18 16.01l.01-.011M21 20.01l.01-.011M12.396 3.396L15.5 6.5a4.95 4.95 0 11-7 0l3.104-3.104a.56.56 0 01.792 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1306 = React1307.forwardRef(SvgWateringSoil);
var WateringSoil_default = ForwardRef1306;

// node_modules/iconoir-react/dist/esm/WebWindowClose.mjs
var React1308 = __toESM(require_react(), 1);
var __assign1307 = function() {
  __assign1307 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1307.apply(this, arguments);
};
function SvgWebWindowClose(passedProps, svgRef) {
  var context = React1308.useContext(IconoirContext);
  var props = __assign1307(__assign1307({}, context), passedProps);
  return React1308.createElement(
    "svg",
    __assign1307({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1308.createElement("path", { d: "M3 17V7a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1308.createElement("path", { d: "M10 14.243l2.121-2.122m0 0L14.243 10m-2.122 2.121L10 10m2.121 2.121l2.122 2.122M6 8h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1307 = React1308.forwardRef(SvgWebWindowClose);
var WebWindowClose_default = ForwardRef1307;

// node_modules/iconoir-react/dist/esm/WebWindowEnergyConsumption.mjs
var React1309 = __toESM(require_react(), 1);
var __assign1308 = function() {
  __assign1308 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1308.apply(this, arguments);
};
function SvgWebWindowEnergyConsumption(passedProps, svgRef) {
  var context = React1309.useContext(IconoirContext);
  var props = __assign1308(__assign1308({}, context), passedProps);
  return React1309.createElement(
    "svg",
    __assign1308({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1309.createElement("path", { d: "M3 17V7a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1309.createElement("path", { d: "M11.667 9L10 12h4l-1.667 3M6 8h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1308 = React1309.forwardRef(SvgWebWindowEnergyConsumption);
var WebWindowEnergyConsumption_default = ForwardRef1308;

// node_modules/iconoir-react/dist/esm/WebWindow.mjs
var React1310 = __toESM(require_react(), 1);
var __assign1309 = function() {
  __assign1309 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1309.apply(this, arguments);
};
function SvgWebWindow(passedProps, svgRef) {
  var context = React1310.useContext(IconoirContext);
  var props = __assign1309(__assign1309({}, context), passedProps);
  return React1310.createElement(
    "svg",
    __assign1309({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1310.createElement("path", { d: "M3 17V7a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z", stroke: "currentColor" }),
    React1310.createElement("path", { d: "M6 8h1", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1309 = React1310.forwardRef(SvgWebWindow);
var WebWindow_default = ForwardRef1309;

// node_modules/iconoir-react/dist/esm/WebpFormat.mjs
var React1311 = __toESM(require_react(), 1);
var __assign1310 = function() {
  __assign1310 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1310.apply(this, arguments);
};
function SvgWebpFormat(passedProps, svgRef) {
  var context = React1311.useContext(IconoirContext);
  var props = __assign1310(__assign1310({}, context), passedProps);
  return React1311.createElement(
    "svg",
    __assign1310({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1311.createElement("path", { d: "M4 6V3.6a.6.6 0 01.6-.6h14.8a.6.6 0 01.6.6V6M4 18v2.4a.6.6 0 00.6.6h14.8a.6.6 0 00.6-.6V18", stroke: "currentColor", strokeLinecap: "round" }),
    React1311.createElement("path", { d: "M13.5 15V9h2.4a.6.6 0 01.6.6v.9A1.5 1.5 0 0115 12v0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1311.createElement("path", { d: "M13.5 15h2.4a.6.6 0 00.6-.6v-.9A1.5 1.5 0 0015 12v0h-1.5M19.5 15v-3m0 0V9h3v3h-3zM1.5 9v6L3 12l1.5 3V9M10.5 9h-3v6h3M7.5 12h2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1310 = React1311.forwardRef(SvgWebpFormat);
var WebpFormat_default = ForwardRef1310;

// node_modules/iconoir-react/dist/esm/WeightAlt.mjs
var React1312 = __toESM(require_react(), 1);
var __assign1311 = function() {
  __assign1311 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1311.apply(this, arguments);
};
function SvgWeightAlt(passedProps, svgRef) {
  var context = React1312.useContext(IconoirContext);
  var props = __assign1311(__assign1311({}, context), passedProps);
  return React1312.createElement(
    "svg",
    __assign1311({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1312.createElement("path", { d: "M16.5 5h3.9a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V5.6a.6.6 0 01.6-.6h3.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1312.createElement("path", { d: "M16.279 6.329l.205-1.23a.605.605 0 000-.198l-.206-1.23A2 2 0 0014.307 2H9.694a2 2 0 00-1.973 1.671l-.205 1.23a.6.6 0 000 .198l.205 1.23A2 2 0 009.694 8h4.612a2 2 0 001.973-1.671zM12 8l-1-2.5M7 17h10", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1311 = React1312.forwardRef(SvgWeightAlt);
var WeightAlt_default = ForwardRef1311;

// node_modules/iconoir-react/dist/esm/Weight.mjs
var React1313 = __toESM(require_react(), 1);
var __assign1312 = function() {
  __assign1312 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1312.apply(this, arguments);
};
function SvgWeight(passedProps, svgRef) {
  var context = React1313.useContext(IconoirContext);
  var props = __assign1312(__assign1312({}, context), passedProps);
  return React1313.createElement(
    "svg",
    __assign1312({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1313.createElement("path", { d: "M16.5 5h3.9a.6.6 0 01.6.6v14.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V5.6a.6.6 0 01.6-.6h3.9", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1313.createElement("path", { d: "M16.279 6.329l.205-1.23a.605.605 0 000-.198l-.206-1.23A2 2 0 0014.307 2H9.694a2 2 0 00-1.973 1.671l-.205 1.23a.6.6 0 000 .198l.205 1.23A2 2 0 009.694 8h4.612a2 2 0 001.973-1.671zM12 8l-1-2.5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1312 = React1313.forwardRef(SvgWeight);
var Weight_default = ForwardRef1312;

// node_modules/iconoir-react/dist/esm/WhiteFlag.mjs
var React1314 = __toESM(require_react(), 1);
var __assign1313 = function() {
  __assign1313 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1313.apply(this, arguments);
};
function SvgWhiteFlag(passedProps, svgRef) {
  var context = React1314.useContext(IconoirContext);
  var props = __assign1313(__assign1313({}, context), passedProps);
  return React1314.createElement(
    "svg",
    __assign1313({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1314.createElement("path", { d: "M5 15l.95-10.454A.6.6 0 016.548 4h13.795a.6.6 0 01.598.654l-.891 9.8a.6.6 0 01-.598.546H5zm0 0l-.6 6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1313 = React1314.forwardRef(SvgWhiteFlag);
var WhiteFlag_default = ForwardRef1313;

// node_modules/iconoir-react/dist/esm/WifiError.mjs
var React1315 = __toESM(require_react(), 1);
var __assign1314 = function() {
  __assign1314 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1314.apply(this, arguments);
};
function SvgWifiError(passedProps, svgRef) {
  var context = React1315.useContext(IconoirContext);
  var props = __assign1314(__assign1314({}, context), passedProps);
  return React1315.createElement(
    "svg",
    __assign1314({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1315.createElement("path", { d: "M12 18.51l.01-.011M2 7c6-4.5 14-4.5 20 0M5 11c4-3 10-3 14 0M8.5 14.5c2.25-1.4 4.75-1.4 7 0M17.121 21.364l2.122-2.121m2.121-2.122l-2.121 2.122m0 0L17.12 17.12m2.122 2.122l2.121 2.121", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1314 = React1315.forwardRef(SvgWifiError);
var WifiError_default = ForwardRef1314;

// node_modules/iconoir-react/dist/esm/WifiIssue.mjs
var React1316 = __toESM(require_react(), 1);
var __assign1315 = function() {
  __assign1315 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1315.apply(this, arguments);
};
function SvgWifiIssue(passedProps, svgRef) {
  var context = React1316.useContext(IconoirContext);
  var props = __assign1315(__assign1315({}, context), passedProps);
  return React1316.createElement(
    "svg",
    __assign1315({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1316.createElement("path", { d: "M2.126 8.324c-.2-.262-.155-.605.086-.79C5.29 5.179 8.552 4 11.999 4c3.447 0 6.71 1.178 9.788 3.535.252.212.28.558.085.789l-9.455 11.173a.548.548 0 01-.836 0L2.126 8.324z", stroke: "currentColor" }),
    React1316.createElement("path", { d: "M12 8v2M12 14.01l.01-.011", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1315 = React1316.forwardRef(SvgWifiIssue);
var WifiIssue_default = ForwardRef1315;

// node_modules/iconoir-react/dist/esm/WifiOff.mjs
var React1317 = __toESM(require_react(), 1);
var __assign1316 = function() {
  __assign1316 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1316.apply(this, arguments);
};
function SvgWifiOff(passedProps, svgRef) {
  var context = React1317.useContext(IconoirContext);
  var props = __assign1316(__assign1316({}, context), passedProps);
  return React1317.createElement(
    "svg",
    __assign1316({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1317.createElement("path", { d: "M12 19.51l.01-.011M3 3l18 18M2 8a17.053 17.053 0 013.757-2.14M22 8c-3.572-2.68-7.854-3.763-12-3.252M5 12c1.333-1 2.889-1.667 4.518-2M19 12c-1.269-.951-2.738-1.601-4.282-1.95M8.5 15.5c2.25-1.4 4.75-1.4 7 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1316 = React1317.forwardRef(SvgWifiOff);
var WifiOff_default = ForwardRef1316;

// node_modules/iconoir-react/dist/esm/WifiSignalNone.mjs
var React1318 = __toESM(require_react(), 1);
var __assign1317 = function() {
  __assign1317 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1317.apply(this, arguments);
};
function SvgWifiSignalNone(passedProps, svgRef) {
  var context = React1318.useContext(IconoirContext);
  var props = __assign1317(__assign1317({}, context), passedProps);
  return React1318.createElement(
    "svg",
    __assign1317({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1318.createElement("path", { d: "M2.126 8.324c-.2-.262-.155-.605.086-.79C5.29 5.179 8.552 4 11.999 4c3.447 0 6.71 1.178 9.788 3.535.252.212.28.558.085.789l-9.455 11.173a.548.548 0 01-.836 0L2.126 8.324z", stroke: "currentColor" })
  );
}
var ForwardRef1317 = React1318.forwardRef(SvgWifiSignalNone);
var WifiSignalNone_default = ForwardRef1317;

// node_modules/iconoir-react/dist/esm/WifiTag.mjs
var React1319 = __toESM(require_react(), 1);
var __assign1318 = function() {
  __assign1318 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1318.apply(this, arguments);
};
function SvgWifiTag(passedProps, svgRef) {
  var context = React1319.useContext(IconoirContext);
  var props = __assign1318(__assign1318({}, context), passedProps);
  return React1319.createElement(
    "svg",
    __assign1318({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1319.createElement("path", { d: "M2 15V9a6 6 0 016-6h8a6 6 0 016 6v6a6 6 0 01-6 6H8a6 6 0 01-6-6z", stroke: "currentColor" }),
    React1319.createElement("path", { d: "M12 14.76l.01-.011M7 11.25c2.5-3 7.5-3 10 0M9 13.25c1.5-2 4.5-2 6 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1318 = React1319.forwardRef(SvgWifiTag);
var WifiTag_default = ForwardRef1318;

// node_modules/iconoir-react/dist/esm/Wifi.mjs
var React1320 = __toESM(require_react(), 1);
var __assign1319 = function() {
  __assign1319 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1319.apply(this, arguments);
};
function SvgWifi(passedProps, svgRef) {
  var context = React1320.useContext(IconoirContext);
  var props = __assign1319(__assign1319({}, context), passedProps);
  return React1320.createElement(
    "svg",
    __assign1319({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1320.createElement("path", { d: "M12 19.51l.01-.011M2 8c6-4.5 14-4.5 20 0M5 12c4-3 10-3 14 0M8.5 15.5c2.25-1.4 4.75-1.4 7 0", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1319 = React1320.forwardRef(SvgWifi);
var Wifi_default = ForwardRef1319;

// node_modules/iconoir-react/dist/esm/Wind.mjs
var React1321 = __toESM(require_react(), 1);
var __assign1320 = function() {
  __assign1320 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1320.apply(this, arguments);
};
function SvgWind(passedProps, svgRef) {
  var context = React1321.useContext(IconoirContext);
  var props = __assign1320(__assign1320({}, context), passedProps);
  return React1321.createElement(
    "svg",
    __assign1320({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1321.createElement("path", { d: "M18.279 7C19.782 7 21 8.12 21 9.5S19.782 12 18.279 12H3M17.938 20c1.139 0 2.562-.5 2.562-2.5S19.077 15 17.937 15H3M10.412 4C11.842 4 13 5.12 13 6.5S11.841 9 10.412 9H3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1320 = React1321.forwardRef(SvgWind);
var Wind_default = ForwardRef1320;

// node_modules/iconoir-react/dist/esm/Windows.mjs
var React1322 = __toESM(require_react(), 1);
var __assign1321 = function() {
  __assign1321 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1321.apply(this, arguments);
};
function SvgWindows(passedProps, svgRef) {
  var context = React1322.useContext(IconoirContext);
  var props = __assign1321(__assign1321({}, context), passedProps);
  return React1322.createElement(
    "svg",
    __assign1321({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1322.createElement("path", { d: "M4 16.986V7.014a.6.6 0 01.507-.593l14.8-2.313a.6.6 0 01.693.593v14.598a.6.6 0 01-.693.593l-14.8-2.313A.6.6 0 014 16.986zM4 12h16M10.5 5.5v13", stroke: "currentColor" })
  );
}
var ForwardRef1321 = React1322.forwardRef(SvgWindows);
var Windows_default = ForwardRef1321;

// node_modules/iconoir-react/dist/esm/Wolf.mjs
var React1323 = __toESM(require_react(), 1);
var __assign1322 = function() {
  __assign1322 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1322.apply(this, arguments);
};
function SvgWolf(passedProps, svgRef) {
  var context = React1323.useContext(IconoirContext);
  var props = __assign1322(__assign1322({}, context), passedProps);
  return React1323.createElement(
    "svg",
    __assign1322({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1323.createElement("path", { d: "M5.812 7s-.453.628-.996 1.667M18.188 7s.453.628.997 1.667m-14.37 0C4.008 10.214 3 12.674 3 15.333 5.813 15.333 7.5 17 7.5 17s1.125 5 4.5 5 4.5-5 4.5-5 1.688-1.667 4.5-1.667c0-2.659-1.007-5.119-1.816-6.666m-14.368 0S1.875 6.444 4.816 2c.996.556 3.809 2.778 3.809 2.778S10.313 3.667 12 3.667c1.688 0 3.375 1.11 3.375 1.11S18.188 2.557 19.313 2c2.812 4.445-.128 6.667-.128 6.667M11 18h1m1 0h-1m0 0v1M8.5 12.5L10 14M15.5 12.5L14 14", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1322 = React1323.forwardRef(SvgWolf);
var Wolf_default = ForwardRef1322;

// node_modules/iconoir-react/dist/esm/WomenTShirt.mjs
var React1324 = __toESM(require_react(), 1);
var __assign1323 = function() {
  __assign1323 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1323.apply(this, arguments);
};
function SvgWomenTShirt(passedProps, svgRef) {
  var context = React1324.useContext(IconoirContext);
  var props = __assign1323(__assign1323({}, context), passedProps);
  return React1324.createElement(
    "svg",
    __assign1323({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1324.createElement("path", { d: "M18 21H6s1.66-4.825 1.5-8c-.1-1.989-1.524-3.079-1-5 .23-.842 1-2 1-2S9 7 12 7s4.5-1 4.5-1 .77 1.158 1 2c.524 1.921-.9 3.011-1 5-.16 3.175 1.5 8 1.5 8zM7.5 6V3M16.5 6V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1323 = React1324.forwardRef(SvgWomenTShirt);
var WomenTShirt_default = ForwardRef1323;

// node_modules/iconoir-react/dist/esm/WrapText.mjs
var React1325 = __toESM(require_react(), 1);
var __assign1324 = function() {
  __assign1324 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1324.apply(this, arguments);
};
function SvgWrapText(passedProps, svgRef) {
  var context = React1325.useContext(IconoirContext);
  var props = __assign1324(__assign1324({}, context), passedProps);
  return React1325.createElement(
    "svg",
    __assign1324({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1325.createElement("path", { d: "M4 7h16M4 17h5M4 12h13.5a2.5 2.5 0 012.5 2.5v0a2.5 2.5 0 01-2.5 2.5h-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1325.createElement("path", { d: "M15 15.5L12.5 17l2.5 1.5v-3z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1324 = React1325.forwardRef(SvgWrapText);
var WrapText_default = ForwardRef1324;

// node_modules/iconoir-react/dist/esm/Wrench.mjs
var React1326 = __toESM(require_react(), 1);
var __assign1325 = function() {
  __assign1325 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1325.apply(this, arguments);
};
function SvgWrench(passedProps, svgRef) {
  var context = React1326.useContext(IconoirContext);
  var props = __assign1325(__assign1325({}, context), passedProps);
  return React1326.createElement(
    "svg",
    __assign1325({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1326.createElement(
      "g",
      { clipPath: "url(#wrench_svg__clip0_2576_14436)", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" },
      React1326.createElement("path", { d: "M10.05 10.607l-7.07 7.07a2 2 0 000 2.83v0a2 2 0 002.828 0l7.07-7.072M10.05 10.607c-.844-2.153-.679-4.978 1.06-6.718 1.74-1.74 4.95-2.121 6.718-1.06l-3.04 3.04-.283 3.111 3.111-.282 3.04-3.041c1.062 1.768.68 4.978-1.06 6.717-1.74 1.74-4.564 1.905-6.717 1.061" })
    ),
    React1326.createElement(
      "defs",
      null,
      React1326.createElement(
        "clipPath",
        { id: "wrench_svg__clip0_2576_14436" },
        React1326.createElement("path", { fill: "#fff", d: "M0 0h24v24H0z" })
      )
    )
  );
}
var ForwardRef1325 = React1326.forwardRef(SvgWrench);
var Wrench_default = ForwardRef1325;

// node_modules/iconoir-react/dist/esm/Wristwatch.mjs
var React1327 = __toESM(require_react(), 1);
var __assign1326 = function() {
  __assign1326 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1326.apply(this, arguments);
};
function SvgWristwatch(passedProps, svgRef) {
  var context = React1327.useContext(IconoirContext);
  var props = __assign1326(__assign1326({}, context), passedProps);
  return React1327.createElement(
    "svg",
    __assign1326({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1327.createElement("path", { d: "M16 16.472V20a2 2 0 01-2 2h-4a2 2 0 01-2-2v-3.528M8 7.528V4a2 2 0 012-2h4a2 2 0 012 2v3.528", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1327.createElement("path", { d: "M18 12a6 6 0 10-12 0 6 6 0 0012 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1327.createElement("path", { d: "M14 12h-2v-2", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1326 = React1327.forwardRef(SvgWristwatch);
var Wristwatch_default = ForwardRef1326;

// node_modules/iconoir-react/dist/esm/Www.mjs
var React1328 = __toESM(require_react(), 1);
var __assign1327 = function() {
  __assign1327 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1327.apply(this, arguments);
};
function SvgWww(passedProps, svgRef) {
  var context = React1328.useContext(IconoirContext);
  var props = __assign1327(__assign1327({}, context), passedProps);
  return React1328.createElement(
    "svg",
    __assign1327({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1328.createElement("path", { d: "M3.338 17A9.996 9.996 0 0012 22a9.996 9.996 0 008.662-5M3.338 7A9.996 9.996 0 0112 2a9.996 9.996 0 018.662 5M13 21.95s1.408-1.853 2.295-4.95M13 2.05S14.408 3.902 15.295 7M11 21.95S9.592 20.098 8.705 17M11 2.05S9.592 3.902 8.705 7M9 10l1.5 5 1.5-5 1.5 5 1.5-5M1 10l1.5 5L4 10l1.5 5L7 10M17 10l1.5 5 1.5-5 1.5 5 1.5-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1327 = React1328.forwardRef(SvgWww);
var Www_default = ForwardRef1327;

// node_modules/iconoir-react/dist/esm/XCoordinate.mjs
var React1329 = __toESM(require_react(), 1);
var __assign1328 = function() {
  __assign1328 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1328.apply(this, arguments);
};
function SvgXCoordinate(passedProps, svgRef) {
  var context = React1329.useContext(IconoirContext);
  var props = __assign1328(__assign1328({}, context), passedProps);
  return React1329.createElement(
    "svg",
    __assign1328({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1329.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM10 8l4 8M14 8l-4 8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1328 = React1329.forwardRef(SvgXCoordinate);
var XCoordinate_default = ForwardRef1328;

// node_modules/iconoir-react/dist/esm/XboxA.mjs
var React1330 = __toESM(require_react(), 1);
var __assign1329 = function() {
  __assign1329 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1329.apply(this, arguments);
};
function SvgXboxA(passedProps, svgRef) {
  var context = React1330.useContext(IconoirContext);
  var props = __assign1329(__assign1329({}, context), passedProps);
  return React1330.createElement(
    "svg",
    __assign1329({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1330.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1330.createElement("path", { d: "M15 16l-3-8-3 8M14 14h-4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1329 = React1330.forwardRef(SvgXboxA);
var XboxA_default = ForwardRef1329;

// node_modules/iconoir-react/dist/esm/XboxB.mjs
var React1331 = __toESM(require_react(), 1);
var __assign1330 = function() {
  __assign1330 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1330.apply(this, arguments);
};
function SvgXboxB(passedProps, svgRef) {
  var context = React1331.useContext(IconoirContext);
  var props = __assign1330(__assign1330({}, context), passedProps);
  return React1331.createElement(
    "svg",
    __assign1330({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1331.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1331.createElement("path", { d: "M12.599 11.826c2.535 0 2.535 4.174 0 4.174H9.5v-4.174m3.099 0H9.5m3.099 0c2.535 0 2.535-3.826 0-3.826H9.5v3.826", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1330 = React1331.forwardRef(SvgXboxB);
var XboxB_default = ForwardRef1330;

// node_modules/iconoir-react/dist/esm/XboxX.mjs
var React1332 = __toESM(require_react(), 1);
var __assign1331 = function() {
  __assign1331 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1331.apply(this, arguments);
};
function SvgXboxX(passedProps, svgRef) {
  var context = React1332.useContext(IconoirContext);
  var props = __assign1331(__assign1331({}, context), passedProps);
  return React1332.createElement(
    "svg",
    __assign1331({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1332.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM15 16L9 8M9 16l6-8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1331 = React1332.forwardRef(SvgXboxX);
var XboxX_default = ForwardRef1331;

// node_modules/iconoir-react/dist/esm/XboxY.mjs
var React1333 = __toESM(require_react(), 1);
var __assign1332 = function() {
  __assign1332 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1332.apply(this, arguments);
};
function SvgXboxY(passedProps, svgRef) {
  var context = React1333.useContext(IconoirContext);
  var props = __assign1332(__assign1332({}, context), passedProps);
  return React1333.createElement(
    "svg",
    __assign1332({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1333.createElement("path", { d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM9 8l3 5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1333.createElement("path", { d: "M12 16v-3l3-5", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1332 = React1333.forwardRef(SvgXboxY);
var XboxY_default = ForwardRef1332;

// node_modules/iconoir-react/dist/esm/XrayView.mjs
var React1334 = __toESM(require_react(), 1);
var __assign1333 = function() {
  __assign1333 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1333.apply(this, arguments);
};
function SvgXrayView(passedProps, svgRef) {
  var context = React1334.useContext(IconoirContext);
  var props = __assign1333(__assign1333({}, context), passedProps);
  return React1334.createElement(
    "svg",
    __assign1333({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1334.createElement("path", { d: "M21 7.353v9.294a.6.6 0 01-.309.525l-8.4 4.666a.6.6 0 01-.582 0l-8.4-4.666A.6.6 0 013 16.647V7.353a.6.6 0 01.309-.524l8.4-4.667a.6.6 0 01.582 0l8.4 4.667a.6.6 0 01.309.524z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1334.createElement("path", { d: "M20.5 16.722l-8.209-4.56a.6.6 0 00-.582 0L3.5 16.722M3.528 7.294l8.18 4.544a.6.6 0 00.583 0l8.209-4.56M12 21V3", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1333 = React1334.forwardRef(SvgXrayView);
var XrayView_default = ForwardRef1333;

// node_modules/iconoir-react/dist/esm/YCoordinate.mjs
var React1335 = __toESM(require_react(), 1);
var __assign1334 = function() {
  __assign1334 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1334.apply(this, arguments);
};
function SvgYCoordinate(passedProps, svgRef) {
  var context = React1335.useContext(IconoirContext);
  var props = __assign1334(__assign1334({}, context), passedProps);
  return React1335.createElement(
    "svg",
    __assign1334({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1335.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6zM10 8l2 4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1335.createElement("path", { d: "M14 8l-2 4v4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1334 = React1335.forwardRef(SvgYCoordinate);
var YCoordinate_default = ForwardRef1334;

// node_modules/iconoir-react/dist/esm/Yelp.mjs
var React1336 = __toESM(require_react(), 1);
var __assign1335 = function() {
  __assign1335 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1335.apply(this, arguments);
};
function SvgYelp(passedProps, svgRef) {
  var context = React1336.useContext(IconoirContext);
  var props = __assign1335(__assign1335({}, context), passedProps);
  return React1336.createElement(
    "svg",
    __assign1335({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1336.createElement("path", { d: "M11.5 11l-.458-8.24a.6.6 0 00-.771-.541L6.814 3.256a.6.6 0 00-.311.93L11.5 11zM14 12.5l4.57-.83a.6.6 0 00.38-.94l-1.445-2.023a.6.6 0 00-.987.016L14 12.5zM14.5 16l2.066 4.132a.6.6 0 001.017.091l1.835-2.446a.6.6 0 00-.373-.95L14.5 16zM11.5 16.5l-3.341 3.341a.6.6 0 00.213.986l2.317.869a.6.6 0 00.811-.562V16.5zM9.5 14l-4.132-2.066a.6.6 0 00-.868.537v2.643a.6.6 0 00.823.557L9.5 14z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1335 = React1336.forwardRef(SvgYelp);
var Yelp_default = ForwardRef1335;

// node_modules/iconoir-react/dist/esm/YenSquare.mjs
var React1337 = __toESM(require_react(), 1);
var __assign1336 = function() {
  __assign1336 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1336.apply(this, arguments);
};
function SvgYenSquare(passedProps, svgRef) {
  var context = React1337.useContext(IconoirContext);
  var props = __assign1336(__assign1336({}, context), passedProps);
  return React1337.createElement(
    "svg",
    __assign1336({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1337.createElement("path", { d: "M3 20.4V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6z", stroke: "currentColor" }),
    React1337.createElement("path", { d: "M8 13h8M8 7l4 5.5M16 7l-4 5.5m0 0V18M8 15h8", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1336 = React1337.forwardRef(SvgYenSquare);
var YenSquare_default = ForwardRef1336;

// node_modules/iconoir-react/dist/esm/Yen.mjs
var React1338 = __toESM(require_react(), 1);
var __assign1337 = function() {
  __assign1337 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1337.apply(this, arguments);
};
function SvgYen(passedProps, svgRef) {
  var context = React1338.useContext(IconoirContext);
  var props = __assign1337(__assign1337({}, context), passedProps);
  return React1338.createElement(
    "svg",
    __assign1337({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1338.createElement("path", { d: "M6 12h12M6 4l6 8m6-8l-6 8m0 0v8M6 16h12", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1337 = React1338.forwardRef(SvgYen);
var Yen_default = ForwardRef1337;

// node_modules/iconoir-react/dist/esm/Yoga.mjs
var React1339 = __toESM(require_react(), 1);
var __assign1338 = function() {
  __assign1338 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1338.apply(this, arguments);
};
function SvgYoga(passedProps, svgRef) {
  var context = React1339.useContext(IconoirContext);
  var props = __assign1338(__assign1338({}, context), passedProps);
  return React1339.createElement(
    "svg",
    __assign1338({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1339.createElement("path", { d: "M14.571 15.004l.858 1.845s3.857.819 3.857 2.767C19.286 21 17.57 21 17.57 21H13l-2.25-1.25", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1339.createElement("path", { d: "M9.429 15.004l-.857 1.845s-3.858.819-3.858 2.767C4.714 21 6.43 21 6.43 21H8.5l2.25-1.25L13.5 18", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1339.createElement("path", { d: "M3 15.926s2.143-.461 3.429-.922C7.714 8.546 11.57 9.007 12 9.007c.429 0 4.286-.461 5.571 5.997 1.286.46 3.429.922 3.429.922M12 7a2 2 0 100-4 2 2 0 000 4z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1338 = React1339.forwardRef(SvgYoga);
var Yoga_default = ForwardRef1338;

// node_modules/iconoir-react/dist/esm/YouTube.mjs
var React1340 = __toESM(require_react(), 1);
var __assign1339 = function() {
  __assign1339 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1339.apply(this, arguments);
};
function SvgYouTube(passedProps, svgRef) {
  var context = React1340.useContext(IconoirContext);
  var props = __assign1339(__assign1339({}, context), passedProps);
  return React1340.createElement(
    "svg",
    __assign1339({ width: "1.5em", height: "1.5em", strokeWidth: 1.5, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1340.createElement("path", { d: "M14 12l-3.5 2v-4l3.5 2z", fill: "currentColor", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1340.createElement("path", { d: "M2 12.707v-1.415c0-2.895 0-4.343.905-5.274.906-.932 2.332-.972 5.183-1.053C9.438 4.927 10.818 4.9 12 4.9c1.181 0 2.561.027 3.912.065 2.851.081 4.277.121 5.182 1.053.906.931.906 2.38.906 5.274v1.415c0 2.896 0 4.343-.905 5.275-.906.931-2.331.972-5.183 1.052-1.35.039-2.73.066-3.912.066-1.181 0-2.561-.027-3.912-.066-2.851-.08-4.277-.12-5.183-1.052C2 17.05 2 15.602 2 12.708z", stroke: "currentColor" })
  );
}
var ForwardRef1339 = React1340.forwardRef(SvgYouTube);
var YouTube_default = ForwardRef1339;

// node_modules/iconoir-react/dist/esm/ZCoordinate.mjs
var React1341 = __toESM(require_react(), 1);
var __assign1340 = function() {
  __assign1340 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1340.apply(this, arguments);
};
function SvgZCoordinate(passedProps, svgRef) {
  var context = React1341.useContext(IconoirContext);
  var props = __assign1340(__assign1340({}, context), passedProps);
  return React1341.createElement(
    "svg",
    __assign1340({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1341.createElement("path", { d: "M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" }),
    React1341.createElement("path", { d: "M10 8h4l-4 8h4", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1340 = React1341.forwardRef(SvgZCoordinate);
var ZCoordinate_default = ForwardRef1340;

// node_modules/iconoir-react/dist/esm/ZoomIn.mjs
var React1342 = __toESM(require_react(), 1);
var __assign1341 = function() {
  __assign1341 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1341.apply(this, arguments);
};
function SvgZoomIn(passedProps, svgRef) {
  var context = React1342.useContext(IconoirContext);
  var props = __assign1341(__assign1341({}, context), passedProps);
  return React1342.createElement(
    "svg",
    __assign1341({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1342.createElement("path", { d: "M8 11h3m3 0h-3m0 0V8m0 3v3M17 17l4 4M3 11a8 8 0 1016 0 8 8 0 00-16 0z", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1341 = React1342.forwardRef(SvgZoomIn);
var ZoomIn_default = ForwardRef1341;

// node_modules/iconoir-react/dist/esm/ZoomOut.mjs
var React1343 = __toESM(require_react(), 1);
var __assign1342 = function() {
  __assign1342 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign1342.apply(this, arguments);
};
function SvgZoomOut(passedProps, svgRef) {
  var context = React1343.useContext(IconoirContext);
  var props = __assign1342(__assign1342({}, context), passedProps);
  return React1343.createElement(
    "svg",
    __assign1342({ width: "1.5em", height: "1.5em", viewBox: "0 0 24 24", strokeWidth: 1.5, fill: "none", xmlns: "http://www.w3.org/2000/svg", color: "currentColor", ref: svgRef }, props),
    React1343.createElement("path", { d: "M17 17l4 4M3 11a8 8 0 1016 0 8 8 0 00-16 0zM8 11h6", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })
  );
}
var ForwardRef1342 = React1343.forwardRef(SvgZoomOut);
var ZoomOut_default = ForwardRef1342;
export {
  Accessibility_default as Accessibility,
  AccessibilitySign_default as AccessibilitySign,
  AccessibilityTech_default as AccessibilityTech,
  Activity_default as Activity,
  AddCircle_default as AddCircle,
  AddDatabaseScript_default as AddDatabaseScript,
  AddFolder_default as AddFolder,
  AddFrame_default as AddFrame,
  AddHexagon_default as AddHexagon,
  AddKeyframe_default as AddKeyframe,
  AddKeyframeAlt_default as AddKeyframeAlt,
  AddKeyframes_default as AddKeyframes,
  AddLens_default as AddLens,
  AddMediaImage_default as AddMediaImage,
  AddMediaVideo_default as AddMediaVideo,
  AddPage_default as AddPage,
  AddPageAlt_default as AddPageAlt,
  AddPinAlt_default as AddPinAlt,
  AddSelection_default as AddSelection,
  AddSquare_default as AddSquare,
  AddToCart_default as AddToCart,
  AddUser_default as AddUser,
  AdobeAfterEffects_default as AdobeAfterEffects,
  AdobeIllustrator_default as AdobeIllustrator,
  AdobeIndesign_default as AdobeIndesign,
  AdobeLightroom_default as AdobeLightroom,
  AdobePhotoshop_default as AdobePhotoshop,
  AdobeXd_default as AdobeXd,
  AfricanTree_default as AfricanTree,
  Agile_default as Agile,
  AirConditioner_default as AirConditioner,
  Airplane_default as Airplane,
  AirplaneHelix_default as AirplaneHelix,
  AirplaneHelix45Deg_default as AirplaneHelix45Deg,
  AirplaneOff_default as AirplaneOff,
  AirplaneRotation_default as AirplaneRotation,
  Airplay_default as Airplay,
  Alarm_default as Alarm,
  Album_default as Album,
  AlbumCarousel_default as AlbumCarousel,
  AlbumList_default as AlbumList,
  AlbumOpen_default as AlbumOpen,
  AlignBottomBox_default as AlignBottomBox,
  AlignCenter_default as AlignCenter,
  AlignJustify_default as AlignJustify,
  AlignLeft_default as AlignLeft,
  AlignLeftBox_default as AlignLeftBox,
  AlignRight_default as AlignRight,
  AlignRightBox_default as AlignRightBox,
  AlignTopBox_default as AlignTopBox,
  AngleTool_default as AngleTool,
  Antenna_default as Antenna,
  AntennaOff_default as AntennaOff,
  AntennaSignal_default as AntennaSignal,
  AntennaSignalTag_default as AntennaSignalTag,
  AppNotification_default as AppNotification,
  AppWindow_default as AppWindow,
  Apple_default as Apple,
  AppleHalf_default as AppleHalf,
  AppleHalfAlt_default as AppleHalfAlt,
  AppleImac2021_default as AppleImac2021,
  AppleImac2021Side_default as AppleImac2021Side,
  AppleMac_default as AppleMac,
  AppleShortcuts_default as AppleShortcuts,
  AppleSwift_default as AppleSwift,
  AppleWallet_default as AppleWallet,
  ArSymbol_default as ArSymbol,
  Arcade_default as Arcade,
  Archery_default as Archery,
  ArcheryMatch_default as ArcheryMatch,
  Archive_default as Archive,
  AreaSearch_default as AreaSearch,
  ArrowArchery_default as ArrowArchery,
  ArrowBl_default as ArrowBl,
  ArrowBlCircle_default as ArrowBlCircle,
  ArrowBlSquare_default as ArrowBlSquare,
  ArrowBr_default as ArrowBr,
  ArrowBrCircle_default as ArrowBrCircle,
  ArrowBrSquare_default as ArrowBrSquare,
  ArrowDown_default as ArrowDown,
  ArrowDownCircle_default as ArrowDownCircle,
  ArrowEmailForward_default as ArrowEmailForward,
  ArrowLeft_default as ArrowLeft,
  ArrowLeftCircle_default as ArrowLeftCircle,
  ArrowRight_default as ArrowRight,
  ArrowRightCircle_default as ArrowRightCircle,
  ArrowSeparate_default as ArrowSeparate,
  ArrowSeparateVertical_default as ArrowSeparateVertical,
  ArrowTl_default as ArrowTl,
  ArrowTlCircle_default as ArrowTlCircle,
  ArrowTlSquare_default as ArrowTlSquare,
  ArrowTr_default as ArrowTr,
  ArrowTrCircle_default as ArrowTrCircle,
  ArrowTrSquare_default as ArrowTrSquare,
  ArrowUnion_default as ArrowUnion,
  ArrowUnionVertical_default as ArrowUnionVertical,
  ArrowUp_default as ArrowUp,
  ArrowUpCircle_default as ArrowUpCircle,
  ArrowsUpFromLine_default as ArrowsUpFromLine,
  Asana_default as Asana,
  AtSign_default as AtSign,
  AtSignCircle_default as AtSignCircle,
  Atom_default as Atom,
  Attachment_default as Attachment,
  AugmentedReality_default as AugmentedReality,
  AutoFlash_default as AutoFlash,
  AviFormat_default as AviFormat,
  Axes_default as Axes,
  Backward15Seconds_default as Backward15Seconds,
  Bag_default as Bag,
  Balcony_default as Balcony,
  Bank_default as Bank,
  Barcode_default as Barcode,
  Basketball_default as Basketball,
  BasketballAlt_default as BasketballAlt,
  BasketballField_default as BasketballField,
  Bathroom_default as Bathroom,
  Battery25_default as Battery25,
  Battery50_default as Battery50,
  Battery75_default as Battery75,
  BatteryCharging_default as BatteryCharging,
  BatteryEmpty_default as BatteryEmpty,
  BatteryFull_default as BatteryFull,
  BatteryIndicator_default as BatteryIndicator,
  BatteryWarning_default as BatteryWarning,
  Bbq_default as Bbq,
  BeachBag_default as BeachBag,
  BeachBagBig_default as BeachBagBig,
  Bed_default as Bed,
  BedReady_default as BedReady,
  Behance_default as Behance,
  BehanceTag_default as BehanceTag,
  Bell_default as Bell,
  BellNotification_default as BellNotification,
  BellOff_default as BellOff,
  Bicycle_default as Bicycle,
  Bin_default as Bin,
  BinAdd_default as BinAdd,
  BinFull_default as BinFull,
  BinHalf_default as BinHalf,
  BinMinus_default as BinMinus,
  Binocular_default as Binocular,
  BirthdayCake_default as BirthdayCake,
  Bishop_default as Bishop,
  Bitbucket_default as Bitbucket,
  BitcoinCircle_default as BitcoinCircle,
  BitcoinRotateOut_default as BitcoinRotateOut,
  Bluetooth_default as Bluetooth,
  BluetoothTag_default as BluetoothTag,
  Bold_default as Bold,
  BoldSquare_default as BoldSquare,
  Bonfire_default as Bonfire,
  Book_default as Book,
  BookStack_default as BookStack,
  BookmarkBook_default as BookmarkBook,
  BookmarkCircle_default as BookmarkCircle,
  BookmarkEmpty_default as BookmarkEmpty,
  BorderBl_default as BorderBl,
  BorderBottom_default as BorderBottom,
  BorderBr_default as BorderBr,
  BorderInner_default as BorderInner,
  BorderLeft_default as BorderLeft,
  BorderOut_default as BorderOut,
  BorderRight_default as BorderRight,
  BorderTl_default as BorderTl,
  BorderTop_default as BorderTop,
  BorderTr_default as BorderTr,
  BounceLeft_default as BounceLeft,
  BounceRight_default as BounceRight,
  BowlingBall_default as BowlingBall,
  Box_default as Box,
  BoxIso_default as BoxIso,
  BoxingGlove_default as BoxingGlove,
  Brain_default as Brain,
  BrainElectricity_default as BrainElectricity,
  BrainResearch_default as BrainResearch,
  BrainWarning_default as BrainWarning,
  BreadSlice_default as BreadSlice,
  BrightCrown_default as BrightCrown,
  BrightStar_default as BrightStar,
  Brightness_default as Brightness,
  BrightnessWindow_default as BrightnessWindow,
  BubbleDownload_default as BubbleDownload,
  BubbleError_default as BubbleError,
  BubbleIncome_default as BubbleIncome,
  BubbleOutcome_default as BubbleOutcome,
  BubbleSearch_default as BubbleSearch,
  BubbleStar_default as BubbleStar,
  BubbleUpload_default as BubbleUpload,
  BubbleWarning_default as BubbleWarning,
  Building_default as Building,
  Bus_default as Bus,
  BusStop_default as BusStop,
  CableTag_default as CableTag,
  Calculator_default as Calculator,
  Calendar_default as Calendar,
  CalendarMinus_default as CalendarMinus,
  CalendarPlus_default as CalendarPlus,
  Camera_default as Camera,
  Cancel_default as Cancel,
  CandlestickChart_default as CandlestickChart,
  Car_default as Car,
  Carbon_default as Carbon,
  CardIssue_default as CardIssue,
  CardLocked_default as CardLocked,
  CardReader_default as CardReader,
  CardSecurity_default as CardSecurity,
  CardWallet_default as CardWallet,
  Cart_default as Cart,
  CartAlt_default as CartAlt,
  Cash_default as Cash,
  Cell2X2_default as Cell2X2,
  Cellar_default as Cellar,
  CenterAlign_default as CenterAlign,
  ChatAdd_default as ChatAdd,
  ChatBubble_default as ChatBubble,
  ChatBubbleCheck_default as ChatBubbleCheck,
  ChatBubbleCheck1_default as ChatBubbleCheck1,
  ChatBubbleEmpty_default as ChatBubbleEmpty,
  ChatBubbleError_default as ChatBubbleError,
  ChatBubbleQuestion_default as ChatBubbleQuestion,
  ChatBubbleTranslate_default as ChatBubbleTranslate,
  ChatBubbleWarning_default as ChatBubbleWarning,
  ChatLines_default as ChatLines,
  ChatRemove_default as ChatRemove,
  Check_default as Check,
  CheckCircle_default as CheckCircle,
  CheckWindow_default as CheckWindow,
  Chocolate_default as Chocolate,
  Chromecast_default as Chromecast,
  ChromecastActive_default as ChromecastActive,
  Church_default as Church,
  ChurchAlt_default as ChurchAlt,
  CinemaOld_default as CinemaOld,
  Circle_default as Circle,
  City_default as City,
  CleanWater_default as CleanWater,
  ClipboardCheck_default as ClipboardCheck,
  Clock_default as Clock,
  ClockRotateRight_default as ClockRotateRight,
  ClosedCaptions_default as ClosedCaptions,
  Closet_default as Closet,
  Cloud_default as Cloud,
  CloudBookAlt_default as CloudBookAlt,
  CloudCheck_default as CloudCheck,
  CloudDesync_default as CloudDesync,
  CloudDownload_default as CloudDownload,
  CloudError_default as CloudError,
  CloudSunny_default as CloudSunny,
  CloudSync_default as CloudSync,
  CloudUpload_default as CloudUpload,
  Clutery_default as Clutery,
  Code_default as Code,
  CodeBrackets_default as CodeBrackets,
  CodeBracketsSquare_default as CodeBracketsSquare,
  Codepen_default as Codepen,
  CoffeeCup_default as CoffeeCup,
  Coin_default as Coin,
  Coins_default as Coins,
  CoinsSwap_default as CoinsSwap,
  CollageFrame_default as CollageFrame,
  Collapse_default as Collapse,
  ColorFilter_default as ColorFilter,
  ColorPicker_default as ColorPicker,
  ColorPickerEmpty_default as ColorPickerEmpty,
  ColorWheel_default as ColorWheel,
  Combine_default as Combine,
  Commodity_default as Commodity,
  Community_default as Community,
  CompactDisc_default as CompactDisc,
  Compass_default as Compass,
  Compress_default as Compress,
  CompressLines_default as CompressLines,
  Computer_default as Computer,
  Consumable_default as Consumable,
  Contactless_default as Contactless,
  ControlSlider_default as ControlSlider,
  Cookie_default as Cookie,
  Cooling_default as Cooling,
  Copy_default as Copy,
  Copyright_default as Copyright,
  CornerBottomLeft_default as CornerBottomLeft,
  CornerBottomRight_default as CornerBottomRight,
  CornerTopLeft_default as CornerTopLeft,
  CornerTopRight_default as CornerTopRight,
  Cpu_default as Cpu,
  CpuWarning_default as CpuWarning,
  CrackedEgg_default as CrackedEgg,
  CreativeCommons_default as CreativeCommons,
  CreditCard_default as CreditCard,
  CreditCards_default as CreditCards,
  Crib_default as Crib,
  Crop_default as Crop,
  CropRotateBl_default as CropRotateBl,
  CropRotateBr_default as CropRotateBr,
  CropRotateTl_default as CropRotateTl,
  CropRotateTr_default as CropRotateTr,
  Crown_default as Crown,
  CrownCircle_default as CrownCircle,
  Css3_default as Css3,
  CubeReplaceFace_default as CubeReplaceFace,
  CursorPointer_default as CursorPointer,
  Cut_default as Cut,
  CutAlt_default as CutAlt,
  CutSolidWithCurve_default as CutSolidWithCurve,
  Cycling_default as Cycling,
  Cylinder_default as Cylinder,
  DashFlag_default as DashFlag,
  Dashboard_default as Dashboard,
  DashboardDots_default as DashboardDots,
  DashboardSpeed_default as DashboardSpeed,
  DataTransferBoth_default as DataTransferBoth,
  DataTransferCheck_default as DataTransferCheck,
  DataTransferDown_default as DataTransferDown,
  DataTransferUp_default as DataTransferUp,
  DataTransferWarning_default as DataTransferWarning,
  DatabaseBackup_default as DatabaseBackup,
  DatabaseExport_default as DatabaseExport,
  DatabaseMonitor_default as DatabaseMonitor,
  DatabaseRestore_default as DatabaseRestore,
  DatabaseScript_default as DatabaseScript,
  DatabaseSettings_default as DatabaseSettings,
  DatabaseStar_default as DatabaseStar,
  DatabaseStats_default as DatabaseStats,
  DatabaseTag_default as DatabaseTag,
  Db_default as Db,
  DbCheck_default as DbCheck,
  DbError_default as DbError,
  DbSearch_default as DbSearch,
  DbStar_default as DbStar,
  DbWarning_default as DbWarning,
  DeCompress_default as DeCompress,
  DeleteCircle_default as DeleteCircle,
  Delivery_default as Delivery,
  DeliveryTruck_default as DeliveryTruck,
  Depth_default as Depth,
  DesignNib_default as DesignNib,
  DesignPencil_default as DesignPencil,
  Desk_default as Desk,
  DevModeLaptop_default as DevModeLaptop,
  DevModePhone_default as DevModePhone,
  Developer_default as Developer,
  DewPoint_default as DewPoint,
  Dialpad_default as Dialpad,
  Diameter_default as Diameter,
  DiceFive_default as DiceFive,
  DiceFour_default as DiceFour,
  DiceOne_default as DiceOne,
  DiceSix_default as DiceSix,
  DiceThree_default as DiceThree,
  DiceTwo_default as DiceTwo,
  DimmerSwitch_default as DimmerSwitch,
  DirectorChair_default as DirectorChair,
  Discord_default as Discord,
  Dishwasher_default as Dishwasher,
  Display4K_default as Display4K,
  Divide_default as Divide,
  DivideSelection1_default as DivideSelection1,
  DivideSelection2_default as DivideSelection2,
  DivideThree_default as DivideThree,
  Dna_default as Dna,
  DocSearch_default as DocSearch,
  DocSearchAlt_default as DocSearchAlt,
  DocStar_default as DocStar,
  DocStarAlt_default as DocStarAlt,
  DogecoinCircle_default as DogecoinCircle,
  DogecoinRotateOut_default as DogecoinRotateOut,
  Dollar_default as Dollar,
  DomoticIssue_default as DomoticIssue,
  Donate_default as Donate,
  DoubleCheck_default as DoubleCheck,
  DownRoundArrow_default as DownRoundArrow,
  Download_default as Download,
  DownloadCircle_default as DownloadCircle,
  DownloadDataWindow_default as DownloadDataWindow,
  DownloadSquare_default as DownloadSquare,
  Drag_default as Drag,
  DragHandGesture_default as DragHandGesture,
  Drawer_default as Drawer,
  Dribbble_default as Dribbble,
  Drone_default as Drone,
  DroneChargeFull_default as DroneChargeFull,
  DroneChargeHalf_default as DroneChargeHalf,
  DroneChargeLow_default as DroneChargeLow,
  DroneCheck_default as DroneCheck,
  DroneError_default as DroneError,
  DroneLanding_default as DroneLanding,
  DroneRefresh_default as DroneRefresh,
  DroneTakeOff_default as DroneTakeOff,
  Droplet_default as Droplet,
  DropletHalf_default as DropletHalf,
  EaseCurveControlPoints_default as EaseCurveControlPoints,
  EaseIn_default as EaseIn,
  EaseInControlPoint_default as EaseInControlPoint,
  EaseInOut_default as EaseInOut,
  EaseOut_default as EaseOut,
  EaseOutControlPoint_default as EaseOutControlPoint,
  EcologyBook_default as EcologyBook,
  Edit_default as Edit,
  EditPencil_default as EditPencil,
  Egg_default as Egg,
  Eject_default as Eject,
  ElectronicsChip_default as ElectronicsChip,
  ElectronicsTransistor_default as ElectronicsTransistor,
  Elevator_default as Elevator,
  Emoji_default as Emoji,
  EmojiBall_default as EmojiBall,
  EmojiBlinkLeft_default as EmojiBlinkLeft,
  EmojiBlinkRight_default as EmojiBlinkRight,
  EmojiLookDown_default as EmojiLookDown,
  EmojiLookLeft_default as EmojiLookLeft,
  EmojiLookRight_default as EmojiLookRight,
  EmojiLookUp_default as EmojiLookUp,
  EmojiPuzzled_default as EmojiPuzzled,
  EmojiQuite_default as EmojiQuite,
  EmojiReally_default as EmojiReally,
  EmojiSad_default as EmojiSad,
  EmojiSatisfied_default as EmojiSatisfied,
  EmojiSingLeft_default as EmojiSingLeft,
  EmojiSingLeftNote_default as EmojiSingLeftNote,
  EmojiSingRight_default as EmojiSingRight,
  EmojiSingRightNote_default as EmojiSingRightNote,
  EmojiSurprise_default as EmojiSurprise,
  EmojiSurpriseAlt_default as EmojiSurpriseAlt,
  EmojiTalkingAngry_default as EmojiTalkingAngry,
  EmojiTalkingHappy_default as EmojiTalkingHappy,
  EmojiThinkLeft_default as EmojiThinkLeft,
  EmojiThinkRight_default as EmojiThinkRight,
  EmptyPage_default as EmptyPage,
  EnergyUsageWindow_default as EnergyUsageWindow,
  Enlarge_default as Enlarge,
  EnlargeRoundArrow_default as EnlargeRoundArrow,
  Erase_default as Erase,
  ErrorWindow_default as ErrorWindow,
  EthereumCircle_default as EthereumCircle,
  EthereumRotateOut_default as EthereumRotateOut,
  Euro_default as Euro,
  EuroSquare_default as EuroSquare,
  EvCharge_default as EvCharge,
  EvChargeAlt_default as EvChargeAlt,
  EvPlug_default as EvPlug,
  EvPlugCharging_default as EvPlugCharging,
  EvPlugError_default as EvPlugError,
  EvStation_default as EvStation,
  EvTag_default as EvTag,
  Exclude_default as Exclude,
  Expand_default as Expand,
  ExpandLines_default as ExpandLines,
  Extrude_default as Extrude,
  EyeAlt_default as EyeAlt,
  EyeClose_default as EyeClose,
  EyeEmpty_default as EyeEmpty,
  EyeOff_default as EyeOff,
  FaceId_default as FaceId,
  Facebook_default as Facebook,
  FacebookTag_default as FacebookTag,
  Facetime_default as Facetime,
  Farm_default as Farm,
  FastArrowDown_default as FastArrowDown,
  FastArrowDownBox_default as FastArrowDownBox,
  FastArrowLeft_default as FastArrowLeft,
  FastArrowLeftBox_default as FastArrowLeftBox,
  FastArrowRight_default as FastArrowRight,
  FastArrowRightBox_default as FastArrowRightBox,
  FastArrowUp_default as FastArrowUp,
  FastArrowUpBox_default as FastArrowUpBox,
  FastDownCircle_default as FastDownCircle,
  FastLeftCircle_default as FastLeftCircle,
  FastRightCircle_default as FastRightCircle,
  FastUpCircle_default as FastUpCircle,
  FavouriteBook_default as FavouriteBook,
  FavouriteWindow_default as FavouriteWindow,
  Female_default as Female,
  Figma_default as Figma,
  FileNotFound_default as FileNotFound,
  FillColor_default as FillColor,
  Fillet3D_default as Fillet3D,
  Filter_default as Filter,
  FilterAlt_default as FilterAlt,
  FilterList_default as FilterList,
  FilterListCircle_default as FilterListCircle,
  Finder_default as Finder,
  Fingerprint_default as Fingerprint,
  FingerprintCheckCircle_default as FingerprintCheckCircle,
  FingerprintCircle_default as FingerprintCircle,
  FingerprintErrorCircle_default as FingerprintErrorCircle,
  FingerprintLockCircle_default as FingerprintLockCircle,
  FingerprintPhone_default as FingerprintPhone,
  FingerprintScan_default as FingerprintScan,
  FingerprintSquare_default as FingerprintSquare,
  FingerprintWindow_default as FingerprintWindow,
  FireFlame_default as FireFlame,
  Fish_default as Fish,
  Fishing_default as Fishing,
  Flare_default as Flare,
  Flash_default as Flash,
  FlashOff_default as FlashOff,
  Flask_default as Flask,
  Flip_default as Flip,
  FlipReverse_default as FlipReverse,
  Flower_default as Flower,
  Fluorine_default as Fluorine,
  Fog_default as Fog,
  Folder_default as Folder,
  FolderAlert_default as FolderAlert,
  FolderSettings_default as FolderSettings,
  FontSize_default as FontSize,
  Football_default as Football,
  FootballBall_default as FootballBall,
  Forward_default as Forward,
  Forward15Seconds_default as Forward15Seconds,
  ForwardMessage_default as ForwardMessage,
  Frame_default as Frame,
  FrameAlt_default as FrameAlt,
  FrameAltEmpty_default as FrameAltEmpty,
  FrameSelect_default as FrameSelect,
  FrameSimple_default as FrameSimple,
  FrameTool_default as FrameTool,
  Fridge_default as Fridge,
  Fx_default as Fx,
  FxTag_default as FxTag,
  Gamepad_default as Gamepad,
  Garage_default as Garage,
  Gas_default as Gas,
  GasTank_default as GasTank,
  GasTankDrop_default as GasTankDrop,
  GifFormat_default as GifFormat,
  Gift_default as Gift,
  GitBranch_default as GitBranch,
  GitCherryPickCommit_default as GitCherryPickCommit,
  GitCommand_default as GitCommand,
  GitCommit_default as GitCommit,
  GitCompare_default as GitCompare,
  GitFork_default as GitFork,
  GitHub_default as GitHub,
  GitLabFull_default as GitLabFull,
  GitMerge_default as GitMerge,
  GitPullRequest_default as GitPullRequest,
  GitPullRequestClosed_default as GitPullRequestClosed,
  GithubCircle_default as GithubCircle,
  GlassEmpty_default as GlassEmpty,
  GlassFragile_default as GlassFragile,
  GlassHalf_default as GlassHalf,
  GlassHalfAlt_default as GlassHalfAlt,
  Glasses_default as Glasses,
  Globe_default as Globe,
  Golf_default as Golf,
  Google_default as Google,
  GoogleCircle_default as GoogleCircle,
  GoogleDocs_default as GoogleDocs,
  GoogleDrive_default as GoogleDrive,
  GoogleDriveCheck_default as GoogleDriveCheck,
  GoogleDriveSync_default as GoogleDriveSync,
  GoogleDriveWarning_default as GoogleDriveWarning,
  GoogleHome_default as GoogleHome,
  GoogleOne_default as GoogleOne,
  Gps_default as Gps,
  GraduationCap_default as GraduationCap,
  GraphDown_default as GraphDown,
  GraphUp_default as GraphUp,
  GreenBus_default as GreenBus,
  GreenTruck_default as GreenTruck,
  GreenVehicle_default as GreenVehicle,
  GridAdd_default as GridAdd,
  GridMinus_default as GridMinus,
  GridRemove_default as GridRemove,
  Group_default as Group,
  Gym_default as Gym,
  HalfCookie_default as HalfCookie,
  HalfMoon_default as HalfMoon,
  Hammer_default as Hammer,
  HandBrake_default as HandBrake,
  HandCard_default as HandCard,
  HandCash_default as HandCash,
  HandContactless_default as HandContactless,
  Handbag_default as Handbag,
  HardDrive_default as HardDrive,
  Hat_default as Hat,
  Hd_default as Hd,
  HdDisplay_default as HdDisplay,
  Hdr_default as Hdr,
  Headset_default as Headset,
  HeadsetCharge_default as HeadsetCharge,
  HeadsetHelp_default as HeadsetHelp,
  HeadsetIssue_default as HeadsetIssue,
  HealthShield_default as HealthShield,
  Healthcare_default as Healthcare,
  Heart_default as Heart,
  HeartArrowDown_default as HeartArrowDown,
  Heating_default as Heating,
  HeavyRain_default as HeavyRain,
  HelpCircle_default as HelpCircle,
  HelpSquare_default as HelpSquare,
  Heptagon_default as Heptagon,
  HerSlips_default as HerSlips,
  Hexagon_default as Hexagon,
  HexagonAlt_default as HexagonAlt,
  HexagonDice_default as HexagonDice,
  HighPriority_default as HighPriority,
  HistoricShield_default as HistoricShield,
  HistoricShieldAlt_default as HistoricShieldAlt,
  Home_default as Home,
  HomeAlt_default as HomeAlt,
  HomeAltSlim_default as HomeAltSlim,
  HomeAltSlimHoriz_default as HomeAltSlimHoriz,
  HomeHospital_default as HomeHospital,
  HomeSale_default as HomeSale,
  HomeSecure_default as HomeSecure,
  HomeShield_default as HomeShield,
  HomeSimple_default as HomeSimple,
  HomeSimpleDoor_default as HomeSimpleDoor,
  HomeTable_default as HomeTable,
  HomeTemperatureIn_default as HomeTemperatureIn,
  HomeTemperatureOut_default as HomeTemperatureOut,
  HomeUser_default as HomeUser,
  HorizDistributionLeft_default as HorizDistributionLeft,
  HorizDistributionRight_default as HorizDistributionRight,
  HorizontalMerge_default as HorizontalMerge,
  HorizontalSplit_default as HorizontalSplit,
  Hospital_default as Hospital,
  HospitalSign_default as HospitalSign,
  HotAirBalloon_default as HotAirBalloon,
  Hourglass_default as Hourglass,
  HouseRooms_default as HouseRooms,
  Html5_default as Html5,
  Hydrogen_default as Hydrogen,
  Iconoir_default as Iconoir,
  IconoirContext,
  IconoirProvider,
  Import_default as Import,
  Inclination_default as Inclination,
  Industry_default as Industry,
  Infinite_default as Infinite,
  InfoEmpty_default as InfoEmpty,
  InputField_default as InputField,
  InputOutput_default as InputOutput,
  InputSearch_default as InputSearch,
  Instagram_default as Instagram,
  Internet_default as Internet,
  Intersect_default as Intersect,
  IntersectAlt_default as IntersectAlt,
  IosSettings_default as IosSettings,
  IpAddress_default as IpAddress,
  IrisScan_default as IrisScan,
  Italic_default as Italic,
  ItalicSquare_default as ItalicSquare,
  Jellyfish_default as Jellyfish,
  Journal_default as Journal,
  JournalPage_default as JournalPage,
  JpegFormat_default as JpegFormat,
  JpgFormat_default as JpgFormat,
  KanbanBoard_default as KanbanBoard,
  KeyAlt_default as KeyAlt,
  KeyAltBack_default as KeyAltBack,
  KeyAltMinus_default as KeyAltMinus,
  KeyAltPlus_default as KeyAltPlus,
  KeyAltRemove_default as KeyAltRemove,
  KeyCommand_default as KeyCommand,
  Keyframe_default as Keyframe,
  KeyframeAlignCenter_default as KeyframeAlignCenter,
  KeyframeAlignHorizontal_default as KeyframeAlignHorizontal,
  KeyframeAlignVertical_default as KeyframeAlignVertical,
  KeyframePosition_default as KeyframePosition,
  Keyframes_default as Keyframes,
  KeyframesCouple_default as KeyframesCouple,
  Label_default as Label,
  Lamp_default as Lamp,
  Language_default as Language,
  Laptop_default as Laptop,
  LaptopCharging_default as LaptopCharging,
  LaptopFix_default as LaptopFix,
  LaptopIssue_default as LaptopIssue,
  LargeSuitcase_default as LargeSuitcase,
  LayoutLeft_default as LayoutLeft,
  LayoutRight_default as LayoutRight,
  Leaderboard_default as Leaderboard,
  LeaderboardStar_default as LeaderboardStar,
  Leaf_default as Leaf,
  Learning_default as Learning,
  LeftRoundArrow_default as LeftRoundArrow,
  Lens_default as Lens,
  Lifebelt_default as Lifebelt,
  LightBulb_default as LightBulb,
  LightBulbOff_default as LightBulbOff,
  LightBulbOn_default as LightBulbOn,
  LineSpace_default as LineSpace,
  Linear_default as Linear,
  Link_default as Link,
  LinkedIn_default as LinkedIn,
  Linux_default as Linux,
  List_default as List,
  ListSelect_default as ListSelect,
  LitecoinCircle_default as LitecoinCircle,
  LitecoinRotateOut_default as LitecoinRotateOut,
  LoadActionFloppy_default as LoadActionFloppy,
  Lock_default as Lock,
  LockKey_default as LockKey,
  LockedBook_default as LockedBook,
  LockedWindow_default as LockedWindow,
  Loft3D_default as Loft3D,
  LogDenied_default as LogDenied,
  LogIn_default as LogIn,
  LogOut_default as LogOut,
  LongArrowDownLeft_default as LongArrowDownLeft,
  LongArrowDownRight_default as LongArrowDownRight,
  LongArrowLeftDown_default as LongArrowLeftDown,
  LongArrowLeftUp_default as LongArrowLeftUp,
  LongArrowRightDown_default as LongArrowRightDown,
  LongArrowRightUp_default as LongArrowRightUp,
  LongArrowRightUp1_default as LongArrowRightUp1,
  LongArrowUpLeft_default as LongArrowUpLeft,
  LongArrowUpRight_default as LongArrowUpRight,
  LotOfCash_default as LotOfCash,
  Lullaby_default as Lullaby,
  MacControlKey_default as MacControlKey,
  MacDock_default as MacDock,
  MacOptionKey_default as MacOptionKey,
  MacOsWindow_default as MacOsWindow,
  MagicWand_default as MagicWand,
  Magnet_default as Magnet,
  MagnetEnergy_default as MagnetEnergy,
  Mail_default as Mail,
  MailIn_default as MailIn,
  MailOpened_default as MailOpened,
  MailOut_default as MailOut,
  Male_default as Male,
  Map_default as Map,
  MapIssue_default as MapIssue,
  MapsArrow_default as MapsArrow,
  MapsArrowDiagonal_default as MapsArrowDiagonal,
  MapsArrowIssue_default as MapsArrowIssue,
  MapsGoStraight_default as MapsGoStraight,
  MapsTurnBack_default as MapsTurnBack,
  MapsTurnLeft_default as MapsTurnLeft,
  MapsTurnRight_default as MapsTurnRight,
  MaskSquare_default as MaskSquare,
  MastercardCard_default as MastercardCard,
  MathBook_default as MathBook,
  Maximize_default as Maximize,
  Medal_default as Medal,
  Medal1St_default as Medal1St,
  MediaImage_default as MediaImage,
  MediaImageFolder_default as MediaImageFolder,
  MediaImageList_default as MediaImageList,
  MediaVideo_default as MediaVideo,
  MediaVideoFolder_default as MediaVideoFolder,
  MediaVideoList_default as MediaVideoList,
  Medium_default as Medium,
  MediumPriority_default as MediumPriority,
  Megaphone_default as Megaphone,
  Menu_default as Menu,
  MenuScale_default as MenuScale,
  Message_default as Message,
  MessageAlert_default as MessageAlert,
  MessageText_default as MessageText,
  Metro_default as Metro,
  Mic_default as Mic,
  MicAdd_default as MicAdd,
  MicCheck_default as MicCheck,
  MicMute_default as MicMute,
  MicRemove_default as MicRemove,
  MicSpeaking_default as MicSpeaking,
  MicWarning_default as MicWarning,
  Microscope_default as Microscope,
  Minus_default as Minus,
  Minus1_default as Minus1,
  MinusCircle_default as MinusCircle,
  MinusHexagon_default as MinusHexagon,
  MinusPinAlt_default as MinusPinAlt,
  MinusSquare_default as MinusSquare,
  Mirror_default as Mirror,
  MissingFont_default as MissingFont,
  ModernTv_default as ModernTv,
  ModernTv4K_default as ModernTv4K,
  MoneySquare_default as MoneySquare,
  MoonSat_default as MoonSat,
  MoreHoriz_default as MoreHoriz,
  MoreHorizCircle_default as MoreHorizCircle,
  MoreVert_default as MoreVert,
  MoreVertCircle_default as MoreVertCircle,
  Motorcycle_default as Motorcycle,
  MouseButtonLeft_default as MouseButtonLeft,
  MouseButtonRight_default as MouseButtonRight,
  MouseScrollWheel_default as MouseScrollWheel,
  MoveDown_default as MoveDown,
  MoveLeft_default as MoveLeft,
  MoveRight_default as MoveRight,
  MoveRuler_default as MoveRuler,
  MoveUp_default as MoveUp,
  Movie_default as Movie,
  MpegFormat_default as MpegFormat,
  MultiBubble_default as MultiBubble,
  MultiMacOsWindow_default as MultiMacOsWindow,
  MultiWindow_default as MultiWindow,
  MultiplePages_default as MultiplePages,
  MultiplePagesAdd_default as MultiplePagesAdd,
  MultiplePagesDelete_default as MultiplePagesDelete,
  MultiplePagesEmpty_default as MultiplePagesEmpty,
  MultiplePagesRemove_default as MultiplePagesRemove,
  MusicDoubleNote_default as MusicDoubleNote,
  MusicDoubleNoteAdd_default as MusicDoubleNoteAdd,
  MusicNote_default as MusicNote,
  MusicNoteAdd_default as MusicNoteAdd,
  NavArrowDown_default as NavArrowDown,
  NavArrowLeft_default as NavArrowLeft,
  NavArrowRight_default as NavArrowRight,
  NavArrowUp_default as NavArrowUp,
  Navigator_default as Navigator,
  NavigatorAlt_default as NavigatorAlt,
  Neighbourhood_default as Neighbourhood,
  Network_default as Network,
  NetworkAlt_default as NetworkAlt,
  NetworkLeft_default as NetworkLeft,
  NetworkRight_default as NetworkRight,
  NewTab_default as NewTab,
  NintendoSwitch_default as NintendoSwitch,
  Nitrogen_default as Nitrogen,
  NoAccessWindow_default as NoAccessWindow,
  NoBattery_default as NoBattery,
  NoCoin_default as NoCoin,
  NoCreditCard_default as NoCreditCard,
  NoLink_default as NoLink,
  NoLock_default as NoLock,
  NoSmoking_default as NoSmoking,
  NoSmokingCircle_default as NoSmokingCircle,
  NonBinary_default as NonBinary,
  Notes_default as Notes,
  Npm_default as Npm,
  NpmSquare_default as NpmSquare,
  NumberedListLeft_default as NumberedListLeft,
  NumberedListRight_default as NumberedListRight,
  Octagon_default as Octagon,
  OffTag_default as OffTag,
  OilIndustry_default as OilIndustry,
  Okrs_default as Okrs,
  OnTag_default as OnTag,
  OneFingerSelectHandGesture_default as OneFingerSelectHandGesture,
  OnePointCircle_default as OnePointCircle,
  OpenBook_default as OpenBook,
  OpenInBrowser_default as OpenInBrowser,
  OpenInWindow_default as OpenInWindow,
  OpenNewWindow_default as OpenNewWindow,
  OpenSelectHandGesture_default as OpenSelectHandGesture,
  OpenVpn_default as OpenVpn,
  OrangeHalf_default as OrangeHalf,
  OrangeSlice_default as OrangeSlice,
  OrangeSliceAlt_default as OrangeSliceAlt,
  OrganicFood_default as OrganicFood,
  OrganicFoodSquare_default as OrganicFoodSquare,
  OrthogonalView_default as OrthogonalView,
  Oxygen_default as Oxygen,
  Package_default as Package,
  PackageLock_default as PackageLock,
  Packages_default as Packages,
  Pacman_default as Pacman,
  Page_default as Page,
  PageDown_default as PageDown,
  PageEdit_default as PageEdit,
  PageFlip_default as PageFlip,
  PageLeft_default as PageLeft,
  PageRight_default as PageRight,
  PageSearch_default as PageSearch,
  PageStar_default as PageStar,
  PageUp_default as PageUp,
  Palette_default as Palette,
  PanoramaEnlarge_default as PanoramaEnlarge,
  PanoramaReduce_default as PanoramaReduce,
  Pants_default as Pants,
  PantsAlt_default as PantsAlt,
  Parking_default as Parking,
  PasswordCursor_default as PasswordCursor,
  PasswordError_default as PasswordError,
  PasswordPass_default as PasswordPass,
  PasteClipboard_default as PasteClipboard,
  PatchHoles3D_default as PatchHoles3D,
  PathArrow_default as PathArrow,
  Pause_default as Pause,
  PauseWindow_default as PauseWindow,
  Paypal_default as Paypal,
  PcCheck_default as PcCheck,
  PcFirewall_default as PcFirewall,
  PcMouse_default as PcMouse,
  PcNoEntry_default as PcNoEntry,
  PcWarning_default as PcWarning,
  PeaceHand_default as PeaceHand,
  PenConnectBluetooth_default as PenConnectBluetooth,
  PenConnectWifi_default as PenConnectWifi,
  PenTablet_default as PenTablet,
  PenTabletConnectUsb_default as PenTabletConnectUsb,
  PenTabletConnectWifi_default as PenTabletConnectWifi,
  Pentagon_default as Pentagon,
  PeopleTag_default as PeopleTag,
  PercentRotateOut_default as PercentRotateOut,
  Percentage_default as Percentage,
  PercentageCircle_default as PercentageCircle,
  PercentageSquare_default as PercentageSquare,
  PerspectiveView_default as PerspectiveView,
  PharmacyCrossCircle_default as PharmacyCrossCircle,
  PharmacyCrossSquare_default as PharmacyCrossSquare,
  Phone_default as Phone,
  PhoneAdd_default as PhoneAdd,
  PhoneDelete_default as PhoneDelete,
  PhoneDisabled_default as PhoneDisabled,
  PhoneIncome_default as PhoneIncome,
  PhoneOutcome_default as PhoneOutcome,
  PhonePaused_default as PhonePaused,
  PhoneRemove_default as PhoneRemove,
  PiggyBank_default as PiggyBank,
  Pillow_default as Pillow,
  Pin_default as Pin,
  PinAlt_default as PinAlt,
  PineTree_default as PineTree,
  Pinterest_default as Pinterest,
  Pipe3D_default as Pipe3D,
  PizzaSlice_default as PizzaSlice,
  Planet_default as Planet,
  PlanetAlt_default as PlanetAlt,
  PlanetSat_default as PlanetSat,
  Planimetry_default as Planimetry,
  Play_default as Play,
  Playlist_default as Playlist,
  PlaylistAdd_default as PlaylistAdd,
  PlaylistPlay_default as PlaylistPlay,
  PlaystationGamepad_default as PlaystationGamepad,
  PlugTypeA_default as PlugTypeA,
  PlugTypeC_default as PlugTypeC,
  PlugTypeG_default as PlugTypeG,
  PlugTypeL_default as PlugTypeL,
  Plus_default as Plus,
  PngFormat_default as PngFormat,
  Pocket_default as Pocket,
  Podcast_default as Podcast,
  Pokeball_default as Pokeball,
  Position_default as Position,
  PositionAlign_default as PositionAlign,
  Potion_default as Potion,
  Pound_default as Pound,
  PrecisionTool_default as PrecisionTool,
  Presentation_default as Presentation,
  Printer_default as Printer,
  PrinterAlt_default as PrinterAlt,
  PrintingPage_default as PrintingPage,
  PriorityDown_default as PriorityDown,
  PriorityUp_default as PriorityUp,
  PrivacyPolicy_default as PrivacyPolicy,
  PrivateWifi_default as PrivateWifi,
  ProfileCircle_default as ProfileCircle,
  Prohibition_default as Prohibition,
  ProjectCurve3D_default as ProjectCurve3D,
  Puzzle_default as Puzzle,
  QrCode_default as QrCode,
  QuestionMark_default as QuestionMark,
  Quote_default as Quote,
  QuoteMessage_default as QuoteMessage,
  Radiation_default as Radiation,
  Radius_default as Radius,
  Rain_default as Rain,
  RawFormat_default as RawFormat,
  ReceiveDollars_default as ReceiveDollars,
  ReceiveEuros_default as ReceiveEuros,
  ReceivePounds_default as ReceivePounds,
  ReceiveYens_default as ReceiveYens,
  Redo_default as Redo,
  RedoAction_default as RedoAction,
  RedoCircle_default as RedoCircle,
  Reduce_default as Reduce,
  ReduceRoundArrow_default as ReduceRoundArrow,
  Refresh_default as Refresh,
  RefreshCircular_default as RefreshCircular,
  RefreshDouble_default as RefreshDouble,
  ReloadWindow_default as ReloadWindow,
  ReminderHandGesture_default as ReminderHandGesture,
  RemoveDatabaseScript_default as RemoveDatabaseScript,
  RemoveFolder_default as RemoveFolder,
  RemoveFrame_default as RemoveFrame,
  RemoveFromCart_default as RemoveFromCart,
  RemoveKeyframe_default as RemoveKeyframe,
  RemoveKeyframeAlt_default as RemoveKeyframeAlt,
  RemoveKeyframes_default as RemoveKeyframes,
  RemoveLink_default as RemoveLink,
  RemoveMediaImage_default as RemoveMediaImage,
  RemoveMediaVideo_default as RemoveMediaVideo,
  RemovePage_default as RemovePage,
  RemovePageAlt_default as RemovePageAlt,
  RemovePin_default as RemovePin,
  RemovePinAlt_default as RemovePinAlt,
  RemoveSelection_default as RemoveSelection,
  RemoveSquare_default as RemoveSquare,
  RemoveUser_default as RemoveUser,
  Repeat_default as Repeat,
  RepeatOnce_default as RepeatOnce,
  Reply_default as Reply,
  ReplyToMessage_default as ReplyToMessage,
  ReportColumns_default as ReportColumns,
  Reports_default as Reports,
  Repository_default as Repository,
  Restart_default as Restart,
  Rewind_default as Rewind,
  Rhombus_default as Rhombus,
  RightRoundArrow_default as RightRoundArrow,
  Rings_default as Rings,
  Rocket_default as Rocket,
  Rook_default as Rook,
  RotateCameraLeft_default as RotateCameraLeft,
  RotateCameraRight_default as RotateCameraRight,
  RoundFlask_default as RoundFlask,
  RoundedMirror_default as RoundedMirror,
  RssFeed_default as RssFeed,
  RssFeedTag_default as RssFeedTag,
  RubikCube_default as RubikCube,
  Ruler_default as Ruler,
  RulerAdd_default as RulerAdd,
  RulerCombine_default as RulerCombine,
  RulerRemove_default as RulerRemove,
  Running_default as Running,
  Safari_default as Safari,
  Safe_default as Safe,
  SafeArrowLeft_default as SafeArrowLeft,
  SafeArrowRight_default as SafeArrowRight,
  SafeOpen_default as SafeOpen,
  Sandals_default as Sandals,
  SaveActionFloppy_default as SaveActionFloppy,
  SaveFloppyDisk_default as SaveFloppyDisk,
  ScaleFrameEnlarge_default as ScaleFrameEnlarge,
  ScaleFrameReduce_default as ScaleFrameReduce,
  ScanBarcode_default as ScanBarcode,
  ScanQrCode_default as ScanQrCode,
  Scanning_default as Scanning,
  Scarf_default as Scarf,
  Scissor_default as Scissor,
  ScissorAlt_default as ScissorAlt,
  Screenshot_default as Screenshot,
  SeaAndSun_default as SeaAndSun,
  SeaWaves_default as SeaWaves,
  Search_default as Search,
  SearchEngine_default as SearchEngine,
  SearchFont_default as SearchFont,
  SearchWindow_default as SearchWindow,
  SecureWindow_default as SecureWindow,
  SecurityPass_default as SecurityPass,
  SelectWindow_default as SelectWindow,
  Selection_default as Selection,
  SelectiveTool_default as SelectiveTool,
  Send_default as Send,
  SendDiagonal_default as SendDiagonal,
  SendDollars_default as SendDollars,
  SendEuros_default as SendEuros,
  SendMail_default as SendMail,
  SendPounds_default as SendPounds,
  SendYens_default as SendYens,
  Server_default as Server,
  ServerConnection_default as ServerConnection,
  Settings_default as Settings,
  SettingsCloud_default as SettingsCloud,
  SettingsProfiles_default as SettingsProfiles,
  ShareAndroid_default as ShareAndroid,
  ShareIos_default as ShareIos,
  Shield_default as Shield,
  ShieldAdd_default as ShieldAdd,
  ShieldAlert_default as ShieldAlert,
  ShieldAlt_default as ShieldAlt,
  ShieldBroken_default as ShieldBroken,
  ShieldCheck_default as ShieldCheck,
  ShieldCross_default as ShieldCross,
  ShieldDownload_default as ShieldDownload,
  ShieldEye_default as ShieldEye,
  ShieldLoading_default as ShieldLoading,
  ShieldMinus_default as ShieldMinus,
  ShieldQuestion_default as ShieldQuestion,
  ShieldSearch_default as ShieldSearch,
  ShieldUpload_default as ShieldUpload,
  Shop_default as Shop,
  ShopAlt_default as ShopAlt,
  ShoppingBag_default as ShoppingBag,
  ShoppingBagAdd_default as ShoppingBagAdd,
  ShoppingBagAlt_default as ShoppingBagAlt,
  ShoppingBagArrowDown_default as ShoppingBagArrowDown,
  ShoppingBagArrowUp_default as ShoppingBagArrowUp,
  ShoppingBagCheck_default as ShoppingBagCheck,
  ShoppingBagIssue_default as ShoppingBagIssue,
  ShoppingBagRemove_default as ShoppingBagRemove,
  ShoppingCode_default as ShoppingCode,
  ShoppingCodeCheck_default as ShoppingCodeCheck,
  ShoppingCodeError_default as ShoppingCodeError,
  ShortPants_default as ShortPants,
  ShortPantsAlt_default as ShortPantsAlt,
  Shortcut_default as Shortcut,
  Shuffle_default as Shuffle,
  SidebarCollapse_default as SidebarCollapse,
  SidebarExpand_default as SidebarExpand,
  SigmaFunction_default as SigmaFunction,
  SimpleCart_default as SimpleCart,
  SineWave_default as SineWave,
  SingleTapGesture_default as SingleTapGesture,
  Skateboard_default as Skateboard,
  Skateboarding_default as Skateboarding,
  SkipNext_default as SkipNext,
  SkipPrev_default as SkipPrev,
  Slash_default as Slash,
  SleeperChair_default as SleeperChair,
  SmallLamp_default as SmallLamp,
  SmallLampAlt_default as SmallLampAlt,
  SmallShop_default as SmallShop,
  SmallShopAlt_default as SmallShopAlt,
  SmartphoneDevice_default as SmartphoneDevice,
  Smoking_default as Smoking,
  Snapchat_default as Snapchat,
  Snow_default as Snow,
  SnowFlake_default as SnowFlake,
  Soap_default as Soap,
  SoccerBall_default as SoccerBall,
  Sofa_default as Sofa,
  Soil_default as Soil,
  SoilAlt_default as SoilAlt,
  Sort_default as Sort,
  SortDown_default as SortDown,
  SortUp_default as SortUp,
  SoundHigh_default as SoundHigh,
  SoundLow_default as SoundLow,
  SoundMin_default as SoundMin,
  SoundOff_default as SoundOff,
  Spades_default as Spades,
  Sphere_default as Sphere,
  Spiral_default as Spiral,
  SpockHandGesture_default as SpockHandGesture,
  Spotify_default as Spotify,
  Square_default as Square,
  SquareWave_default as SquareWave,
  Stackoverflow_default as Stackoverflow,
  Star_default as Star,
  StarDashed_default as StarDashed,
  StarHalfDashed_default as StarHalfDashed,
  StatDown_default as StatDown,
  StatUp_default as StatUp,
  StatsDownSquare_default as StatsDownSquare,
  StatsReport_default as StatsReport,
  StatsUpSquare_default as StatsUpSquare,
  Strategy_default as Strategy,
  Stretching_default as Stretching,
  Strikethrough_default as Strikethrough,
  Stroller_default as Stroller,
  StyleBorder_default as StyleBorder,
  SubmitDocument_default as SubmitDocument,
  Substract_default as Substract,
  Suggestion_default as Suggestion,
  SunLight_default as SunLight,
  DAddHole_default as Svg3DAddHole,
  DArc_default as Svg3DArc,
  DArcCenterPt_default as Svg3DArcCenterPt,
  DBridge_default as Svg3DBridge,
  DCenterBox_default as Svg3DCenterBox,
  DDraftFace_default as Svg3DDraftFace,
  DEllipse_default as Svg3DEllipse,
  DEllipseThreePts_default as Svg3DEllipseThreePts,
  DPtBox_default as Svg3DPtBox,
  DRectCornerToCorner_default as Svg3DRectCornerToCorner,
  DRectFromCenter_default as Svg3DRectFromCenter,
  DRectThreePts_default as Svg3DRectThreePts,
  DSelectEdge_default as Svg3DSelectEdge,
  DSelectFace_default as Svg3DSelectFace,
  DSelectPoint_default as Svg3DSelectPoint,
  DSelectSolid_default as Svg3DSelectSolid,
  DThreePtsBox_default as Svg3DThreePtsBox,
  SvgFormat_default as SvgFormat,
  Sweep3D_default as Sweep3D,
  Swimming_default as Swimming,
  SwipeDownGesture_default as SwipeDownGesture,
  SwipeLeftGesture_default as SwipeLeftGesture,
  SwipeRightGesture_default as SwipeRightGesture,
  SwipeTwoFingersDownGesture_default as SwipeTwoFingersDownGesture,
  SwipeTwoFingersLeftGesture_default as SwipeTwoFingersLeftGesture,
  SwipeTwoFingersRightGesture_default as SwipeTwoFingersRightGesture,
  SwipeTwoFingersUpGesture_default as SwipeTwoFingersUpGesture,
  SwipeUpGesture_default as SwipeUpGesture,
  SwitchOff_default as SwitchOff,
  SwitchOn_default as SwitchOn,
  SystemRestart_default as SystemRestart,
  SystemShut_default as SystemShut,
  TShirt_default as TShirt,
  Table_default as Table,
  Table2Columns_default as Table2Columns,
  TableRows_default as TableRows,
  TaskList_default as TaskList,
  Telegram_default as Telegram,
  TelegramCircle_default as TelegramCircle,
  TemperatureDown_default as TemperatureDown,
  TemperatureHigh_default as TemperatureHigh,
  TemperatureLow_default as TemperatureLow,
  TemperatureUp_default as TemperatureUp,
  TennisBall_default as TennisBall,
  TennisBallAlt_default as TennisBallAlt,
  Terminal_default as Terminal,
  TerminalTag_default as TerminalTag,
  TestTube_default as TestTube,
  Text_default as Text,
  TextAlt_default as TextAlt,
  TextBox_default as TextBox,
  TextSize_default as TextSize,
  ThreePointsCircle_default as ThreePointsCircle,
  ThreeStars_default as ThreeStars,
  ThumbsDown_default as ThumbsDown,
  ThumbsUp_default as ThumbsUp,
  Thunderstorm_default as Thunderstorm,
  TifFormat_default as TifFormat,
  TiffFormat_default as TiffFormat,
  TikTok_default as TikTok,
  TimeZone_default as TimeZone,
  Timer_default as Timer,
  TimerOff_default as TimerOff,
  Tools_default as Tools,
  Tournament_default as Tournament,
  Tower_default as Tower,
  TowerCheck_default as TowerCheck,
  TowerNoAccess_default as TowerNoAccess,
  TowerWarning_default as TowerWarning,
  Trademark_default as Trademark,
  Train_default as Train,
  Tram_default as Tram,
  TransitionDown_default as TransitionDown,
  TransitionLeft_default as TransitionLeft,
  TransitionRight_default as TransitionRight,
  TransitionUp_default as TransitionUp,
  Translate_default as Translate,
  Trash_default as Trash,
  Treadmill_default as Treadmill,
  Tree_default as Tree,
  Trekking_default as Trekking,
  Trello_default as Trello,
  Triangle_default as Triangle,
  TriangleFlag_default as TriangleFlag,
  TriangleFlagCircle_default as TriangleFlagCircle,
  TriangleFlagTwoStripes_default as TriangleFlagTwoStripes,
  Trophy_default as Trophy,
  Truck_default as Truck,
  TruckLength_default as TruckLength,
  Tunnel_default as Tunnel,
  Tv_default as Tv,
  TvFix_default as TvFix,
  TvIssue_default as TvIssue,
  Twitter_default as Twitter,
  TwitterVerifiedBadge_default as TwitterVerifiedBadge,
  TwoPointsCircle_default as TwoPointsCircle,
  TwoSeaterSofa_default as TwoSeaterSofa,
  Type_default as Type,
  UmbrellaFull_default as UmbrellaFull,
  Underline_default as Underline,
  UnderlineSquare_default as UnderlineSquare,
  Undo_default as Undo,
  UndoAction_default as UndoAction,
  UndoCircle_default as UndoCircle,
  Union_default as Union,
  UnionAlt_default as UnionAlt,
  UnionHorizAlt_default as UnionHorizAlt,
  Unity_default as Unity,
  Unity5_default as Unity5,
  Unjoin3D_default as Unjoin3D,
  UpRoundArrow_default as UpRoundArrow,
  Upload_default as Upload,
  UploadDataWindow_default as UploadDataWindow,
  UploadSquare_default as UploadSquare,
  Usb_default as Usb,
  User_default as User,
  UserBag_default as UserBag,
  UserCart_default as UserCart,
  UserCircle_default as UserCircle,
  UserCrown_default as UserCrown,
  UserLove_default as UserLove,
  UserScan_default as UserScan,
  UserSquare_default as UserSquare,
  UserStar_default as UserStar,
  Vegan_default as Vegan,
  VeganCircle_default as VeganCircle,
  VeganSquare_default as VeganSquare,
  VerifiedBadge_default as VerifiedBadge,
  VerifiedUser_default as VerifiedUser,
  VerticalMerge_default as VerticalMerge,
  VerticalSplit_default as VerticalSplit,
  Vials_default as Vials,
  VideoCamera_default as VideoCamera,
  VideoCameraOff_default as VideoCameraOff,
  VideoProjector_default as VideoProjector,
  View360_default as View360,
  ViewColumns2_default as ViewColumns2,
  ViewColumns3_default as ViewColumns3,
  ViewGrid_default as ViewGrid,
  ViewStructureDown_default as ViewStructureDown,
  ViewStructureUp_default as ViewStructureUp,
  Voice_default as Voice,
  VoiceCircle_default as VoiceCircle,
  VoiceError_default as VoiceError,
  VoiceLockCircle_default as VoiceLockCircle,
  VoiceOk_default as VoiceOk,
  VoicePhone_default as VoicePhone,
  VoiceScan_default as VoiceScan,
  VoiceSquare_default as VoiceSquare,
  VrSymbol_default as VrSymbol,
  VueJs_default as VueJs,
  Waist_default as Waist,
  Walking_default as Walking,
  Wallet_default as Wallet,
  WarningCircle_default as WarningCircle,
  WarningHexagon_default as WarningHexagon,
  WarningSquare_default as WarningSquare,
  WarningTriangle_default as WarningTriangle,
  WarningWindow_default as WarningWindow,
  Wash_default as Wash,
  WashingMachine_default as WashingMachine,
  WateringSoil_default as WateringSoil,
  WebWindow_default as WebWindow,
  WebWindowClose_default as WebWindowClose,
  WebWindowEnergyConsumption_default as WebWindowEnergyConsumption,
  WebpFormat_default as WebpFormat,
  Weight_default as Weight,
  WeightAlt_default as WeightAlt,
  WhiteFlag_default as WhiteFlag,
  Wifi_default as Wifi,
  WifiError_default as WifiError,
  WifiIssue_default as WifiIssue,
  WifiOff_default as WifiOff,
  WifiSignalNone_default as WifiSignalNone,
  WifiTag_default as WifiTag,
  Wind_default as Wind,
  Windows_default as Windows,
  Wolf_default as Wolf,
  WomenTShirt_default as WomenTShirt,
  WrapText_default as WrapText,
  Wrench_default as Wrench,
  Wristwatch_default as Wristwatch,
  Www_default as Www,
  XCoordinate_default as XCoordinate,
  XboxA_default as XboxA,
  XboxB_default as XboxB,
  XboxX_default as XboxX,
  XboxY_default as XboxY,
  XrayView_default as XrayView,
  YCoordinate_default as YCoordinate,
  Yelp_default as Yelp,
  Yen_default as Yen,
  YenSquare_default as YenSquare,
  Yoga_default as Yoga,
  YouTube_default as YouTube,
  ZCoordinate_default as ZCoordinate,
  ZoomIn_default as ZoomIn,
  ZoomOut_default as ZoomOut
};
//# sourceMappingURL=iconoir-react.js.map
